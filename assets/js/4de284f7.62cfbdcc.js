"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3530],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>g});var t=a(7294);function l(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function r(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){l(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,l=function(e,n){if(null==e)return{};var a,t,l={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=t.createContext({}),u=function(e){var n=t.useContext(o),a=n;return e&&(a="function"==typeof e?e(n):r(r({},n),e)),a},c=function(e){var n=u(e.components);return t.createElement(o.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,l=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(a),m=l,g=p["".concat(o,".").concat(m)]||p[m]||d[m]||i;return a?t.createElement(g,r(r({ref:n},c),{},{components:a})):t.createElement(g,r({ref:n},c))}));function g(e,n){var a=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var i=a.length,r=new Array(i);r[0]=m;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s[p]="string"==typeof e?e:l,r[1]=s;for(var u=2;u<i;u++)r[u]=a[u];return t.createElement.apply(null,r)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7705:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var t=a(7462),l=(a(7294),a(3905));const i={},r=void 0,s={unversionedId:"middleware/rabbitmq/RabbitMQ \u7b14\u8bb0",id:"middleware/rabbitmq/RabbitMQ \u7b14\u8bb0",title:"RabbitMQ \u7b14\u8bb0",description:"\u4e00\u3001\u4ecb\u7ecd",source:"@site/docs/middleware/rabbitmq/RabbitMQ \u7b14\u8bb0.md",sourceDirName:"middleware/rabbitmq",slug:"/middleware/rabbitmq/RabbitMQ \u7b14\u8bb0",permalink:"/docs/middleware/rabbitmq/RabbitMQ \u7b14\u8bb0",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"RabbitMQ",permalink:"/docs/middleware/rabbitmq/"},next:{title:"ShardingSphere",permalink:"/docs/middleware/shardingsphere/"}},o={},u=[{value:"\u4e00\u3001\u4ecb\u7ecd",id:"\u4e00\u4ecb\u7ecd",level:2},{value:"1.1 \u6838\u5fc3\u6982\u5ff5",id:"11-\u6838\u5fc3\u6982\u5ff5",level:3},{value:"Broker",id:"broker",level:4},{value:"Virtual Host",id:"virtual-host",level:4},{value:"Connection",id:"connection",level:4},{value:"Channel",id:"channel",level:4},{value:"Exchange",id:"exchange",level:4},{value:"Queue",id:"queue",level:4},{value:"Binding",id:"binding",level:4},{value:"\u4e8c\u3001\u5b89\u88c5",id:"\u4e8c\u5b89\u88c5",level:2},{value:"2.1 \u901a\u8fc7\u5305\u7ba1\u7406\u5668\u5b89\u88c5",id:"21-\u901a\u8fc7\u5305\u7ba1\u7406\u5668\u5b89\u88c5",level:3},{value:"2.2 \u5f00\u542f Web \u7ba1\u7406\u63d2\u4ef6",id:"22-\u5f00\u542f-web-\u7ba1\u7406\u63d2\u4ef6",level:3},{value:"2.3 \u7528\u6237\u548c\u6388\u6743",id:"23-\u7528\u6237\u548c\u6388\u6743",level:3},{value:"\u9ed8\u8ba4\u7528\u6237",id:"\u9ed8\u8ba4\u7528\u6237",level:4},{value:"\u521b\u5efa\u7ba1\u7406\u7528\u6237",id:"\u521b\u5efa\u7ba1\u7406\u7528\u6237",level:4},{value:"\u89d2\u8272\u5206\u7c7b",id:"\u89d2\u8272\u5206\u7c7b",level:4},{value:"\u4e09\u3001Java \u5ba2\u6237\u7aef",id:"\u4e09java-\u5ba2\u6237\u7aef",level:2},{value:"3.1 \u4f9d\u8d56",id:"31-\u4f9d\u8d56",level:3},{value:"3.2 \u793a\u4f8b",id:"32-\u793a\u4f8b",level:3},{value:"3.2.1 \u7b80\u5355\u6a21\u5f0f",id:"321-\u7b80\u5355\u6a21\u5f0f",level:4},{value:"\u751f\u4ea7\u8005",id:"\u751f\u4ea7\u8005",level:5},{value:"\u6d88\u8d39\u8005",id:"\u6d88\u8d39\u8005",level:5},{value:"\u5de5\u5177\u7c7b",id:"\u5de5\u5177\u7c7b",level:5},{value:"3.2.2 \u5de5\u4f5c\u961f\u5217\u6a21\u5f0f",id:"322-\u5de5\u4f5c\u961f\u5217\u6a21\u5f0f",level:4},{value:"\u751f\u4ea7\u8005",id:"\u751f\u4ea7\u8005-1",level:5},{value:"\u6d88\u8d39\u8005",id:"\u6d88\u8d39\u8005-1",level:5},{value:"\u6548\u679c",id:"\u6548\u679c",level:5},{value:"3.2.3 \u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f",id:"323-\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f",level:4},{value:"\u751f\u4ea7\u8005",id:"\u751f\u4ea7\u8005-2",level:5},{value:"\u6d88\u8d39\u8005\u4e00",id:"\u6d88\u8d39\u8005\u4e00",level:5},{value:"\u6d88\u8d39\u8005\u4e8c",id:"\u6d88\u8d39\u8005\u4e8c",level:5},{value:"\u6548\u679c",id:"\u6548\u679c-1",level:5},{value:"3.2.4 \u8def\u7531\u6a21\u5f0f",id:"324-\u8def\u7531\u6a21\u5f0f",level:4},{value:"\u751f\u4ea7\u8005",id:"\u751f\u4ea7\u8005-3",level:5},{value:"\u6536\u96c6\u6240\u6709\u65e5\u5fd7\u6d88\u8d39\u8005",id:"\u6536\u96c6\u6240\u6709\u65e5\u5fd7\u6d88\u8d39\u8005",level:5},{value:"\u6536\u96c6\u9519\u8bef\u65e5\u5fd7\u6d88\u8d39\u8005",id:"\u6536\u96c6\u9519\u8bef\u65e5\u5fd7\u6d88\u8d39\u8005",level:5},{value:"\u6548\u679c",id:"\u6548\u679c-2",level:5},{value:"3.2.5 \u4e3b\u9898\u6a21\u5f0f",id:"325-\u4e3b\u9898\u6a21\u5f0f",level:4},{value:"\u751f\u4ea7\u8005",id:"\u751f\u4ea7\u8005-4",level:5},{value:"\u6536\u96c6\u8ba2\u5355\u670d\u52a1\u65e5\u5fd7\u6d88\u8d39\u8005",id:"\u6536\u96c6\u8ba2\u5355\u670d\u52a1\u65e5\u5fd7\u6d88\u8d39\u8005",level:5},{value:"\u6536\u96c6\u5e93\u5b58\u670d\u52a1\u65e5\u5fd7\u6d88\u8d39\u8005",id:"\u6536\u96c6\u5e93\u5b58\u670d\u52a1\u65e5\u5fd7\u6d88\u8d39\u8005",level:5},{value:"\u6548\u679c",id:"\u6548\u679c-3",level:5},{value:"3.2.6 \u8fdc\u7a0b\u8c03\u7528\u6a21\u5f0f",id:"326-\u8fdc\u7a0b\u8c03\u7528\u6a21\u5f0f",level:4},{value:"\u670d\u52a1\u7aef",id:"\u670d\u52a1\u7aef",level:5},{value:"\u5ba2\u6237\u7aef",id:"\u5ba2\u6237\u7aef",level:5},{value:"\u6548\u679c",id:"\u6548\u679c-4",level:5},{value:"3.2.7 \u53d1\u5e03\u786e\u8ba4\u6a21\u5f0f",id:"327-\u53d1\u5e03\u786e\u8ba4\u6a21\u5f0f",level:4},{value:"\u751f\u4ea7\u8005",id:"\u751f\u4ea7\u8005-5",level:5},{value:"\u6548\u679c",id:"\u6548\u679c-5",level:5},{value:"3.3 \u603b\u7ed3",id:"33-\u603b\u7ed3",level:3},{value:"\u5b98\u65b9\u793a\u4f8b\u603b\u7ed3",id:"\u5b98\u65b9\u793a\u4f8b\u603b\u7ed3",level:4},{value:"\u4ea4\u6362\u673a\u7c7b\u578b\u603b\u7ed3",id:"\u4ea4\u6362\u673a\u7c7b\u578b\u603b\u7ed3",level:4},{value:"\u56db\u3001Spring AMQP",id:"\u56dbspring-amqp",level:2},{value:"4.1 \u4ecb\u7ecd",id:"41-\u4ecb\u7ecd",level:3},{value:"4.2 \u57fa\u672c\u4f7f\u7528",id:"42-\u57fa\u672c\u4f7f\u7528",level:3},{value:"\u4f9d\u8d56",id:"\u4f9d\u8d56",level:4},{value:"\u914d\u7f6e\u6587\u4ef6",id:"\u914d\u7f6e\u6587\u4ef6",level:4},{value:"\u914d\u7f6e\u7c7b",id:"\u914d\u7f6e\u7c7b",level:4},{value:"\u751f\u4ea7\u8005",id:"\u751f\u4ea7\u8005-6",level:4},{value:"\u6d88\u8d39\u8005",id:"\u6d88\u8d39\u8005-2",level:4},{value:"4.3 \u81ea\u5b9a\u4e49\u6d88\u606f\u7c7b",id:"43-\u81ea\u5b9a\u4e49\u6d88\u606f\u7c7b",level:3},{value:"\u6d88\u606f\u7c7b",id:"\u6d88\u606f\u7c7b",level:4},{value:"\u751f\u4ea7\u8005",id:"\u751f\u4ea7\u8005-7",level:4},{value:"\u6d88\u8d39\u8005",id:"\u6d88\u8d39\u8005-3",level:4},{value:"JSON \u5e8f\u5217\u5316",id:"json-\u5e8f\u5217\u5316",level:4},{value:"4.4 \u6279\u91cf\u6d88\u606f",id:"44-\u6279\u91cf\u6d88\u606f",level:3},{value:"4.4.1 \u6279\u91cf\u53d1\u9001",id:"441-\u6279\u91cf\u53d1\u9001",level:4},{value:"\u4ecb\u7ecd",id:"\u4ecb\u7ecd",level:5},{value:"\u914d\u7f6e\u7c7b",id:"\u914d\u7f6e\u7c7b-1",level:5},{value:"\u751f\u4ea7\u8005",id:"\u751f\u4ea7\u8005-8",level:5},{value:"4.4.2 \u6279\u91cf\u6d88\u8d39",id:"442-\u6279\u91cf\u6d88\u8d39",level:4},{value:"\u4ecb\u7ecd",id:"\u4ecb\u7ecd-1",level:5},{value:"\u914d\u7f6e\u7c7b",id:"\u914d\u7f6e\u7c7b-2",level:5},{value:"\u6d88\u8d39\u8005",id:"\u6d88\u8d39\u8005-4",level:5},{value:"4.5 \u6d88\u8d39\u91cd\u8bd5",id:"45-\u6d88\u8d39\u91cd\u8bd5",level:3},{value:"\u4ecb\u7ecd",id:"\u4ecb\u7ecd-2",level:5},{value:"Spring AMQP \u662f\u600e\u4e48\u63d0\u4f9b\u6d88\u8d39\u91cd\u8bd5\u529f\u80fd\u7684",id:"spring-amqp-\u662f\u600e\u4e48\u63d0\u4f9b\u6d88\u8d39\u91cd\u8bd5\u529f\u80fd\u7684",level:5},{value:"\u914d\u7f6e\uff08<code>application.yml</code>\uff09",id:"\u914d\u7f6eapplicationyml",level:5},{value:"4.6 \u5e76\u53d1\u6d88\u8d39",id:"46-\u5e76\u53d1\u6d88\u8d39",level:3},{value:"\u4ecb\u7ecd",id:"\u4ecb\u7ecd-3",level:5},{value:"Spring AMQP \u7684\u5bb9\u5668\u7c7b\u578b\uff08<code>ContainerType</code>\uff09",id:"spring-amqp-\u7684\u5bb9\u5668\u7c7b\u578bcontainertype",level:5},{value:"\u914d\u7f6e\uff08<code>application.yml</code>\uff09",id:"\u914d\u7f6eapplicationyml-1",level:5},{value:"\u6d88\u8d39\u8005",id:"\u6d88\u8d39\u8005-5",level:5},{value:"4.7 \u4e8b\u52a1\u6d88\u606f",id:"47-\u4e8b\u52a1\u6d88\u606f",level:3},{value:"\u914d\u7f6e",id:"\u914d\u7f6e",level:5},{value:"4.8 \u6d88\u606f\u5f02\u5e38\u5904\u7406\u5668",id:"48-\u6d88\u606f\u5f02\u5e38\u5904\u7406\u5668",level:3},{value:"\u4ecb\u7ecd",id:"\u4ecb\u7ecd-4",level:4},{value:"<code>RabbitListenerErrorHandler</code>\u914d\u7f6e",id:"rabbitlistenererrorhandler\u914d\u7f6e",level:4},{value:"<code>ErrorHandler</code> \u914d\u7f6e",id:"errorhandler-\u914d\u7f6e",level:4},{value:"\u4e94\u3001\u6d88\u606f\u5e94\u7b54",id:"\u4e94\u6d88\u606f\u5e94\u7b54",level:2},{value:"5.1 \u6982\u5ff5",id:"51-\u6982\u5ff5",level:3},{value:"5.2 \u81ea\u52a8\u5e94\u7b54",id:"52-\u81ea\u52a8\u5e94\u7b54",level:3},{value:"5.3 \u624b\u52a8\u5e94\u7b54",id:"53-\u624b\u52a8\u5e94\u7b54",level:3},{value:"\u6d88\u606f\u5e94\u7b54\u65b9\u6cd5",id:"\u6d88\u606f\u5e94\u7b54\u65b9\u6cd5",level:4},{value:"\u6279\u91cf\u5e94\u7b54",id:"\u6279\u91cf\u5e94\u7b54",level:4},{value:"\u6d88\u606f\u81ea\u52a8\u91cd\u65b0\u5165\u961f",id:"\u6d88\u606f\u81ea\u52a8\u91cd\u65b0\u5165\u961f",level:4},{value:"\u516d\u3001\u5de5\u4f5c\u961f\u5217",id:"\u516d\u5de5\u4f5c\u961f\u5217",level:2},{value:"6.1 \u6982\u5ff5",id:"61-\u6982\u5ff5",level:3},{value:"6.2 \u8f6e\u8be2\u5206\u53d1",id:"62-\u8f6e\u8be2\u5206\u53d1",level:3},{value:"6.3 \u516c\u5e73\u5206\u53d1",id:"63-\u516c\u5e73\u5206\u53d1",level:3},{value:"6.4 \u9884\u53d6\u6570",id:"64-\u9884\u53d6\u6570",level:3},{value:"\u4e03\u3001RabbitMQ \u6301\u4e45\u5316",id:"\u4e03rabbitmq-\u6301\u4e45\u5316",level:2},{value:"7.1 \u6982\u5ff5",id:"71-\u6982\u5ff5",level:3},{value:"7.2 \u961f\u5217\u6301\u4e45\u5316",id:"72-\u961f\u5217\u6301\u4e45\u5316",level:3},{value:"7.3 \u6d88\u606f\u6301\u4e45\u5316",id:"73-\u6d88\u606f\u6301\u4e45\u5316",level:3},{value:"\u516b\u3001\u4e8b\u52a1\u673a\u5236",id:"\u516b\u4e8b\u52a1\u673a\u5236",level:2},{value:"8.1 \u6982\u5ff5",id:"81-\u6982\u5ff5",level:3},{value:"8.2 \u4ecb\u7ecd",id:"82-\u4ecb\u7ecd",level:3},{value:"8.2 \u5173\u952e\u4ee3\u7801",id:"82-\u5173\u952e\u4ee3\u7801",level:3},{value:"8.3 \u95ee\u9898",id:"83-\u95ee\u9898",level:3},{value:"\u4e5d\u3001\u53d1\u5e03\u786e\u8ba4\u673a\u5236",id:"\u4e5d\u53d1\u5e03\u786e\u8ba4\u673a\u5236",level:2},{value:"9.1 \u6982\u5ff5",id:"91-\u6982\u5ff5",level:3},{value:"9.2 <code>mandatory</code> \u53c2\u6570",id:"92-mandatory-\u53c2\u6570",level:3},{value:"9.3 \u5907\u4efd\u4ea4\u6362\u673a",id:"93-\u5907\u4efd\u4ea4\u6362\u673a",level:3},{value:"\u5341\u3001\u6b7b\u4fe1\u961f\u5217",id:"\u5341\u6b7b\u4fe1\u961f\u5217",level:2},{value:"10.1 \u6982\u5ff5",id:"101-\u6982\u5ff5",level:3},{value:"10.2 \u6b7b\u4fe1\u7684\u6765\u6e90",id:"102-\u6b7b\u4fe1\u7684\u6765\u6e90",level:3},{value:"10.3 \u793a\u4f8b",id:"103-\u793a\u4f8b",level:3},{value:"\u751f\u4ea7\u8005",id:"\u751f\u4ea7\u8005-9",level:4},{value:"\u666e\u901a\u6d88\u8d39\u8005",id:"\u666e\u901a\u6d88\u8d39\u8005",level:4},{value:"\u6b7b\u4fe1\u6d88\u8d39\u8005",id:"\u6b7b\u4fe1\u6d88\u8d39\u8005",level:4},{value:"\u5341\u4e00\u3001\u5ef6\u8fdf\u961f\u5217",id:"\u5341\u4e00\u5ef6\u8fdf\u961f\u5217",level:2},{value:"11.1 \u6982\u5ff5",id:"111-\u6982\u5ff5",level:3},{value:"11.2 \u4f7f\u7528\u573a\u666f",id:"112-\u4f7f\u7528\u573a\u666f",level:3},{value:"11.3 RabbitMQ \u4e2d\u7684 TTL",id:"113-rabbitmq-\u4e2d\u7684-ttl",level:3},{value:"\u6982\u5ff5",id:"\u6982\u5ff5",level:4},{value:"\u4e24\u8005\u533a\u522b",id:"\u4e24\u8005\u533a\u522b",level:4},{value:"11.4 \u5ef6\u8fdf\u961f\u5217\u63d2\u4ef6",id:"114-\u5ef6\u8fdf\u961f\u5217\u63d2\u4ef6",level:3},{value:"\u5b89\u88c5\u63d2\u4ef6",id:"\u5b89\u88c5\u63d2\u4ef6",level:4},{value:"\u751f\u4ea7\u8005",id:"\u751f\u4ea7\u8005-10",level:4},{value:"\u6d88\u8d39\u8005",id:"\u6d88\u8d39\u8005-6",level:4},{value:"\u5341\u4e8c\u3001\u5e42\u7b49\u6027",id:"\u5341\u4e8c\u5e42\u7b49\u6027",level:2},{value:"12.1 \u6982\u5ff5",id:"121-\u6982\u5ff5",level:3},{value:"12.2 \u6d88\u606f\u91cd\u590d\u6d88\u8d39",id:"122-\u6d88\u606f\u91cd\u590d\u6d88\u8d39",level:3},{value:"12.3 \u89e3\u51b3\u601d\u8def",id:"123-\u89e3\u51b3\u601d\u8def",level:3},{value:"12.4 \u6d88\u8d39\u7aef\u7684\u5e42\u7b49\u6027\u4fdd\u969c",id:"124-\u6d88\u8d39\u7aef\u7684\u5e42\u7b49\u6027\u4fdd\u969c",level:3},{value:"\u5341\u4e09\u3001\u4f18\u5148\u7ea7\u961f\u5217",id:"\u5341\u4e09\u4f18\u5148\u7ea7\u961f\u5217",level:2},{value:"13.1 \u6dfb\u52a0\u4f18\u5148\u7ea7",id:"131-\u6dfb\u52a0\u4f18\u5148\u7ea7",level:3},{value:"\u5341\u56db\u3001\u60f0\u6027\u961f\u5217",id:"\u5341\u56db\u60f0\u6027\u961f\u5217",level:2},{value:"14.1 \u4f7f\u7528\u573a\u666f",id:"141-\u4f7f\u7528\u573a\u666f",level:3},{value:"14.2 \u8bbe\u7f6e\u60f0\u6027\u961f\u5217",id:"142-\u8bbe\u7f6e\u60f0\u6027\u961f\u5217",level:3},{value:"\u5341\u4e94\u3001\u96c6\u7fa4",id:"\u5341\u4e94\u96c6\u7fa4",level:2},{value:"15.1 Clustering",id:"151-clustering",level:3},{value:"\u4e09\u4e2a\u8282\u70b9",id:"\u4e09\u4e2a\u8282\u70b9",level:4},{value:"\u5404\u8282\u70b9\u6b63\u5e38\u5b89\u88c5",id:"\u5404\u8282\u70b9\u6b63\u5e38\u5b89\u88c5",level:4},{value:"\u786e\u4fdd\u5404\u51e0\u70b9\u7684<code>.erlang.cookie</code> \u76f8\u540c",id:"\u786e\u4fdd\u5404\u51e0\u70b9\u7684erlangcookie-\u76f8\u540c",level:4},{value:"\u52a0\u5165\u96c6\u7fa4\uff08<code>ubuntu102</code>\u3001<code>ubuntu103</code>\uff09",id:"\u52a0\u5165\u96c6\u7fa4ubuntu102ubuntu103",level:4},{value:"15.2 \u955c\u50cf\u961f\u5217",id:"152-\u955c\u50cf\u961f\u5217",level:3},{value:"\u539f\u56e0",id:"\u539f\u56e0",level:4},{value:"\u642d\u5efa\u6b65\u9aa4",id:"\u642d\u5efa\u6b65\u9aa4",level:4},{value:"\u6548\u679c",id:"\u6548\u679c-6",level:4}],c={toc:u};function p(e){let{components:n,...a}=e;return(0,l.kt)("wrapper",(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"\u4e00\u4ecb\u7ecd"},"\u4e00\u3001\u4ecb\u7ecd"),(0,l.kt)("h3",{id:"11-\u6838\u5fc3\u6982\u5ff5"},"1.1 \u6838\u5fc3\u6982\u5ff5"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/38797a92d6654d6380539e45227d3e0f.png",alt:"\u8bf7\u6dfb\u52a0\u56fe\u7247\u63cf\u8ff0"})),(0,l.kt)("h4",{id:"broker"},"Broker"),(0,l.kt)("p",null,"\u63a5\u6536\u548c\u5206\u53d1\u6d88\u606f\u7684\u5e94\u7528\uff0cRabbitMQ Server \u5c31\u662f Message Broker\u3002"),(0,l.kt)("h4",{id:"virtual-host"},"Virtual Host"),(0,l.kt)("p",null,"\u51fa\u4e8e\u591a\u79df\u6237\u548c\u5b89\u5168\u56e0\u7d20\u800c\u8bbe\u8ba1\uff0c\u628a AMQP \u7684\u57fa\u672c\u7ec4\u4ef6\u5212\u5206\u5230\u4e00\u4e2a\u865a\u62df\u7684\u5206\u7ec4\u4e2d\uff0c\u7c7b\u4f3c\u4e8e\u7f51\u7edc\u4e2d\u7684 Namespace \u6982\u5ff5\u3002\u5f53\u591a\u4e2a\u4e0d\u540c\u7684\u7528\u6237\u4f7f\u7528\u540c\u4e00\u4e2a RabbitMQ Server \u63d0\u4f9b\u7684\u670d\u52a1\u65f6\uff0c\u53ef\u4ee5\u5212\u5206\u51fa\u591a\u4e2a VHost\uff0c\u6bcf\u4e2a\u7528\u6237\u5728\u81ea\u5df1\u7684 VHost \u521b\u5efa Exchange / Queue \u7b49\u3002"),(0,l.kt)("h4",{id:"connection"},"Connection"),(0,l.kt)("p",null,"Producer / Consumer \u548c Broker \u4e4b\u95f4\u7684 TCP \u8fde\u63a5\u3002"),(0,l.kt)("h4",{id:"channel"},"Channel"),(0,l.kt)("p",null,"\u5982\u679c\u6bcf\u4e00\u6b21\u8bbf\u95ee RabbitMQ \u90fd\u5efa\u7acb\u4e00\u4e2a Connection\uff0c\u5728\u6d88\u606f\u91cf\u5927\u7684\u65f6\u5019\u5efa\u7acb TCP Connection \u9053\u5fb7\u5f00\u9500\u5c06\u662f\u5de8\u5927\u7684\uff0c\u6548\u7387\u4e5f\u8f83\u4f4e\u3002Channel \u662f\u5728 Connection \u5185\u90e8\u5efa\u7acb\u7684\u903b\u8f91\u8fde\u63a5\uff0c\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u652f\u6301\u591a\u7ebf\u7a0b\uff0c\u901a\u5e38\u6bcf\u4e2a Thread \u521b\u5efa\u5355\u72ec\u7684 Channel \u8fdb\u884c\u901a\u8baf\uff0cAMQP \u65b9\u6cd5\u5305\u542b\u4e86 Channel ID \u5e2e\u52a9\u5ba2\u6237\u7aef\u548c Message Broker \u8bc6\u522b Channel\uff0c\u6240\u4ee5 Channel \u4e4b\u95f4\u662f\u5b8c\u5168\u9694\u79bb\u7684\u3002Channel \u4f5c\u4e3a\u8f7b\u91cf\u7ea7\u7684 Connection \u6781\u5927\u51cf\u5c11\u4e86\u64cd\u4f5c\u7cfb\u7edf\u5efa\u7acb TCP Connection \u7684\u5f00\u9500\u3002"),(0,l.kt)("h4",{id:"exchange"},"Exchange"),(0,l.kt)("p",null,"Message \u5230\u8fbe Broker \u7684\u7b2c\u4e00\u7ad9\uff0c\u6839\u636e\u5206\u53d1\u89c4\u5219\u5339\u914d Routing Key \u5206\u53d1\u6d88\u606f\u5230 Queue \u4e2d\u53bb\u3002"),(0,l.kt)("p",null,"\u4ea4\u6362\u673a\u662f RabbitMQ \u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u90e8\u4ef6\uff0c\u4e00\u65b9\u9762\u5b83\u63a5\u6536\u6765\u81ea\u751f\u4ea7\u8005\u7684\u6d88\u606f\uff0c\u53e6\u4e00\u65b9\u9762\u5b83\u5c06\u6d88\u606f\u63a8\u9001\u5230\u961f\u5217\u4e2d\u3002\u4ea4\u6362\u673a\u5fc5\u987b\u786e\u5207\u77e5\u9053\u5982\u4f55\u5904\u7406\u5b83\u63a5\u6536\u5230\u7684\u6d88\u606f\uff0c\u662f\u5c06\u8fd9\u4e9b\u6d88\u606f\u63a8\u9001\u5230\u7279\u5b9a\u961f\u5217\u8fd8\u662f\u63a8\u9001\u5230\u591a\u4e2a\u961f\u5217\uff0c\u4ea6\u6216\u8005\u662f\u628a\u6d88\u606f\u4e22\u5f03\uff0c\u8fd9\u4e2a\u90fd\u6709\u4ea4\u6362\u673a\u7c7b\u578b\u51b3\u5b9a\u3002"),(0,l.kt)("h4",{id:"queue"},"Queue"),(0,l.kt)("p",null,"\u961f\u5217\u662f RabbitMQ \u5185\u90e8\u4f7f\u7528\u7684\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5c3d\u7ba1\u6d88\u606f\u6d41\u7ecf RabbitMQ \u548c\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u5b83\u4eec\u53ea\u80fd\u5b58\u50a8\u5728\u961f\u5217\u4e2d\u3002\u961f\u5217\u4ec5\u53d7\u4e3b\u673a\u7684\u5185\u5b58\u548c\u78c1\u76d8\u9650\u5236\u7684\u7ea6\u675f\uff0c\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u5927\u7684\u6d88\u606f\u7f13\u51b2\u533a\u3002"),(0,l.kt)("h4",{id:"binding"},"Binding"),(0,l.kt)("p",null,"Exchange \u548c Queue \u4e4b\u95f4\u7684\u865a\u62df\u8fde\u63a5\uff0cBinding \u4e2d\u53ef\u4ee5\u5305\u542b Routing Key\uff0cBinding \u4fe1\u606f\u88ab\u4fdd\u5b58\u5728 Exchange \u4e2d\u7684\u67e5\u8be2\u8868\u4e2d\uff0c\u4f5c\u4e3a Message \u7684\u5206\u53d1\u4f9d\u636e\u3002"),(0,l.kt)("h2",{id:"\u4e8c\u5b89\u88c5"},"\u4e8c\u3001\u5b89\u88c5"),(0,l.kt)("h3",{id:"21-\u901a\u8fc7\u5305\u7ba1\u7406\u5668\u5b89\u88c5"},"2.1 \u901a\u8fc7\u5305\u7ba1\u7406\u5668\u5b89\u88c5"),(0,l.kt)("p",null,"\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"p"},"--fix-missing")," \u9009\u9879\u81ea\u52a8\u89e3\u51b3\u9700\u8981\u7684\u4f9d\u8d56\uff08\u5982 ",(0,l.kt)("inlineCode",{parentName:"p"},"erlang")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"socat")," \u7b49\uff09\u3002\u6700\u65b0\u7248\u672c\u5b89\u88c5\u53c2\u8003\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://www.rabbitmq.com/install-debian.html%E3%80%82"},"https://www.rabbitmq.com/install-debian.html\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"apt install rabbitmq-server -y --fix-missing\n")),(0,l.kt)("h3",{id:"22-\u5f00\u542f-web-\u7ba1\u7406\u63d2\u4ef6"},"2.2 \u5f00\u542f Web \u7ba1\u7406\u63d2\u4ef6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"rabbitmq-plugins enable rabbitmq_management\n")),(0,l.kt)("h3",{id:"23-\u7528\u6237\u548c\u6388\u6743"},"2.3 \u7528\u6237\u548c\u6388\u6743"),(0,l.kt)("h4",{id:"\u9ed8\u8ba4\u7528\u6237"},"\u9ed8\u8ba4\u7528\u6237"),(0,l.kt)("p",null,"RabbitMQ \u9ed8\u8ba4\u7528\u6237\u548c\u5bc6\u7801\u90fd\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"guest"),"\uff0c\u4f46\u53ea\u80fd\u672c\u5730 ",(0,l.kt)("inlineCode",{parentName:"p"},"localhost")," \u8bbf\u95ee\u3002\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e ",(0,l.kt)("inlineCode",{parentName:"p"},"loopback_users = none")," \u89e3\u9664\u9650\u5236\uff0c\u6bd4\u5982 RabbitMQ \u7684\u5b98\u65b9\u955c\u50cf\u5bb9\u5668\u7684\u9ed8\u8ba4\u914d\u7f6e\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"/etc/rabbitmq/conf.d/10-default-guest-user.conf")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-properties"},"## DEFAULT SETTINGS ARE NOT MEANT TO BE TAKEN STRAIGHT INTO PRODUCTION\n## see https://www.rabbitmq.com/configure.html for further information\n## on configuring RabbitMQ\n\n## allow access to the guest user from anywhere on the network\n## https://www.rabbitmq.com/access-control.html#loopback-users\n## https://www.rabbitmq.com/production-checklist.html#users\nloopback_users.guest = false\n")))),(0,l.kt)("p",null,"\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u521b\u5efa\u65b0\u7684\u7ba1\u7406\u7528\u6237\u3002"),(0,l.kt)("h4",{id:"\u521b\u5efa\u7ba1\u7406\u7528\u6237"},"\u521b\u5efa\u7ba1\u7406\u7528\u6237"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'rabbitmqctl add_user admin admin\n\nrabbitmqctl set_user_tags admin administrator\n\nrabbitmqctl set_permissions -p / admin ".*" ".*" ".*"\n')),(0,l.kt)("h4",{id:"\u89d2\u8272\u5206\u7c7b"},"\u89d2\u8272\u5206\u7c7b"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"None",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u80fd\u8bbf\u95ee Managment \u63d2\u4ef6"))),(0,l.kt)("li",{parentName:"ul"},"Management",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5217\u51fa\u81ea\u5df1\u53ef\u4ee5\u901a\u8fc7 AMQP \u767b\u5165\u7684 VHost"),(0,l.kt)("li",{parentName:"ul"},"\u67e5\u770b\u81ea\u5df1\u7684 VHost \u8282\u70b9\u7684 Queue\u3001Exchange\u3001Binding \u4fe1\u606f"),(0,l.kt)("li",{parentName:"ul"},"\u67e5\u770b\u548c\u5173\u95ed\u81ea\u5df1 Channel \u548c Connection"),(0,l.kt)("li",{parentName:"ul"},"\u67e5\u770b\u6709\u5173\u81ea\u5df1\u7684 VHost \u7edf\u8ba1\u4fe1\u606f\uff0c\u5305\u62ec\u5176\u5b83\u7528\u6237\u5728\u8fd9\u4e2a VHost \u4e2d\u7684\u6d3b\u52a8\u4fe1\u606f"))),(0,l.kt)("li",{parentName:"ul"},"Poclicymaker",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5305\u542b Management \u6240\u6709\u6743\u9650"),(0,l.kt)("li",{parentName:"ul"},"\u67e5\u770b\u548c\u5220\u9664\u81ea\u5df1\u7684 VHost \u6240\u5c5e\u7684 Policy \u548c Parameter \u4fe1\u606f"))),(0,l.kt)("li",{parentName:"ul"},"Monitoring",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5305\u542b Management \u6240\u6709\u6743\u9650"),(0,l.kt)("li",{parentName:"ul"},"\u5217\u51fa\u6240\u6709\u7684 VHost\uff0c\u5305\u62ec\u4e0d\u80fd\u767b\u5f55\u7684 VHost"),(0,l.kt)("li",{parentName:"ul"},"\u67e5\u770b\u5176\u5b83\u7528\u6237\u7684 Connection \u548c Channel \u4fe1\u606f"),(0,l.kt)("li",{parentName:"ul"},"\u67e5\u770b\u8282\u70b9\u7ea7\u522b\u7684\u6570\u636e\uff0c\u5982 Clustering \u548c Memory \u4f7f\u7528\u60c5\u51b5"),(0,l.kt)("li",{parentName:"ul"},"\u67e5\u770b\u6240\u6709\u7684 VHost \u7684\u5168\u5c40\u7edf\u8ba1\u4fe1\u606f"))),(0,l.kt)("li",{parentName:"ul"},"Administrator",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6700\u9ad8\u6743\u9650"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u521b\u5efa\u548c\u5220\u9664 VHost"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u521b\u5efa\u548c\u5220\u9664 User"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u521b\u5efa Permission"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u5173\u95ed\u6240\u6709\u7528\u6237\u7684 Connection")))),(0,l.kt)("h2",{id:"\u4e09java-\u5ba2\u6237\u7aef"},"\u4e09\u3001Java \u5ba2\u6237\u7aef"),(0,l.kt)("h3",{id:"31-\u4f9d\u8d56"},"3.1 \u4f9d\u8d56"),(0,l.kt)("p",null,"\u5ba2\u6237\u7aef\u4f9d\u8d56\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>com.rabbitmq</groupId>\n    <artifactId>amqp-client</artifactId>\n    <version>5.14.0</version>\n</dependency>\n")),(0,l.kt)("p",null,"\u65e5\u5fd7\u4f9d\u8d56\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>org.slf4j</groupId>\n    <artifactId>slf4j-simple</artifactId>\n    <version>1.7.32</version>\n</dependency>\n")),(0,l.kt)("h3",{id:"32-\u793a\u4f8b"},"3.2 \u793a\u4f8b"),(0,l.kt)("h4",{id:"321-\u7b80\u5355\u6a21\u5f0f"},"3.2.1 \u7b80\u5355\u6a21\u5f0f"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/166108bb0f18081a041a9003862d32f2.png",alt:null})),(0,l.kt)("h5",{id:"\u751f\u4ea7\u8005"},"\u751f\u4ea7\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u7b80\u5355\u6a21\u5f0f-\u751f\u4ea7\u8005\n */\npublic class MyProducer {\n    public static void main(String[] args) {\n        // 1. \u521b\u5efa\u8fde\u63a5\u5de5\u5382\n        ConnectionFactory factory = new ConnectionFactory();\n        factory.setHost("192.192.192.6");\n        factory.setPort(5672);\n        factory.setUsername("admin");\n        factory.setPassword("admin");\n\n        // \u4f7f\u7528 try-with-resources \u8bed\u6cd5(\u53d1\u9001\u5b8c\u6d88\u606f\u540e\u8fde\u63a5\u81ea\u52a8\u91ca\u653e)\n        String connectionName = MyProducer.class.getSimpleName();\n        try (\n            // 2. \u521b\u5efa\u8fde\u63a5\n            Connection connection = factory.newConnection(connectionName);\n\n            // 3. \u521b\u5efa\u901a\u9053\n            Channel channel = connection.createChannel()\n        ) {\n            // 4. \u58f0\u660e\u961f\u5217(\u58f0\u660e\u4e00\u4e2a\u961f\u5217\u662f\u5e42\u7b49\u7684\uff0c\u53ea\u6709\u5f53\u5b83\u4e0d\u5b58\u5728\u65f6\u624d\u4f1a\u521b\u5efa)\n            String queue = "q.tutorial_one";      // \u961f\u5217\u540d\n            boolean durable = false;              // \u662f\u5426\u6301\u4e45\u5316(\u91cd\u542f\u540e\u961f\u5217\u662f\u5426\u8fd8\u5b58\u5728)\n            boolean exclusive = false;            // \u662f\u5426\u72ec\u5360\n            boolean autoDelete = false;           // \u662f\u5426\u81ea\u52a8\u5220\u9664\n            Map<String, Object> arguments = null; // \u5176\u5b83\u53c2\u6570\n            channel.queueDeclare(queue, durable, exclusive, autoDelete, arguments);\n\n            // 5. \u53d1\u9001\u6d88\u606f\n            String exchange = "";                 // \u4ea4\u6362\u673a\u540d(\u9ed8\u8ba4\u4ea4\u4e92\u673a\u540d\u79f0\u4e3a `AMQP default` \u7c7b\u578b\u4e3a `direct`)\n            String routingKey = queue;            // \u8def\u7531\u952e(\u9ed8\u8ba4\u4ea4\u6362\u673a\u4f7f\u7528\u961f\u5217\u540d\u5339\u914d\u961f\u5217)\n            AMQP.BasicProperties headers = null;  // \u6d88\u606f\u5934\n            String body = "This is a message";    // \u6d88\u606f\u4f53\n            channel.basicPublish(exchange, routingKey, headers, body.getBytes());\n            System.out.printf("Sent message=\'%s\'\\n", body);\n\n            // 5. \u5faa\u73af\u53d1\u9001\u6d88\u606f\n            // Scanner sc = new Scanner(System.in);\n            // while (sc.hasNextLine()) {\n            //     String body = sc.nextLine();\n            //     channel.basicPublish(exchange, routingKey, null, body.getBytes());\n            //     System.out.printf("Sent message=\'%s\'\\n", body);\n            // }\n        } catch (IOException | TimeoutException e) {\n            e.printStackTrace();\n        }\n    }\n}\n')),(0,l.kt)("h5",{id:"\u6d88\u8d39\u8005"},"\u6d88\u8d39\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u7b80\u5355\u6a21\u5f0f-\u6d88\u8d39\u8005\n */\npublic class MyConsumer {\n    public static void main(String[] args) {\n        // 1. \u521b\u5efa\u8fde\u63a5\u5de5\u5382\n        ConnectionFactory factory = new ConnectionFactory();\n        factory.setHost("192.192.192.6");\n        factory.setPort(5672);\n        factory.setUsername("admin");\n        factory.setPassword("admin");\n\n        // \u4e0d\u4f7f\u7528 try-with-resources \u8bed\u6cd5(\u907f\u514d\u6d88\u8d39\u5b8c\u6d88\u606f\u540e\u8fde\u63a5\u81ea\u52a8\u91ca\u653e)\n        try {\n            // 2. \u521b\u5efa\u8fde\u63a5\n            Connection connection = factory.newConnection(MyConsumer.class.getSimpleName());\n\n            // 3. \u521b\u5efa\u901a\u9053\n            Channel channel = connection.createChannel();\n\n            String queue = "q.tutorial_one";\n\n            // 4. \u58f0\u660e\u961f\u5217(\u58f0\u660e\u4e00\u4e2a\u961f\u5217\u662f\u5e42\u7b49\u7684\uff0c\u53ea\u6709\u5f53\u5b83\u4e0d\u5b58\u5728\u65f6\u624d\u4f1a\u521b\u5efa)\n            channel.queueDeclare(queue, false, false, false, null);\n\n            // 5. \u6d88\u8d39\u6d88\u606f\n            boolean autoAck = true;                                        // \u662f\u5426\u81ea\u52a8\u5e94\u7b54\uff08\u9ed8\u8ba4\u4e3a false\uff09\n            DeliverCallback deliverCallback = (consumerTag, delivery) -> { // \u6d88\u8d39\u56de\u8c03\n                String body = new String(delivery.getBody());\n                System.out.printf("Received message=\'%s\'\\n", body);\n            };\n            CancelCallback cancelCallback = consumerTag -> {               // \u53d6\u6d88\u6d88\u8d39\u56de\u8c03(\u5982\u5728\u6d88\u8d39\u65f6\u961f\u5217\u88ab\u5220\u9664)\n                System.err.println("Consuming was interrupted");\n            };\n            channel.basicConsume(queue, autoAck, deliverCallback, cancelCallback);\n        } catch (IOException | TimeoutException e) {\n            e.printStackTrace();\n        }\n    }\n}\n')),(0,l.kt)("h5",{id:"\u5de5\u5177\u7c7b"},"\u5de5\u5177\u7c7b"),(0,l.kt)("p",null,"\u53ef\u4ee5\u53d1\u73b0\u751f\u4ea7\u6d88\u606f\u548c\u6d88\u8d39\u6d88\u606f\u7684\u6574\u4f53\u6d41\u7a0b\u662f\u4e00\u81f4\u7684\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u521b\u5efa\u8fde\u63a5\u5de5\u5382"),(0,l.kt)("li",{parentName:"ol"},"\u521b\u5efa\u901a\u9053"),(0,l.kt)("li",{parentName:"ol"},"\u64cd\u4f5c Channel")),(0,l.kt)("p",null,"\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c01\u88c5\u4e00\u4e2a\u53ef\u4ee5\u76f4\u63a5\u63d0\u4f9b Channel \u7684\u5de5\u5177\u65b9\u6cd5\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public class MyRabbitMQ {\n    private static final ConnectionFactory CONNECTION_FACTORY = new ConnectionFactory();\n\n    static {\n        CONNECTION_FACTORY.setHost("192.192.192.6");\n        CONNECTION_FACTORY.setPort(5672);\n        CONNECTION_FACTORY.setUsername("admin");\n        CONNECTION_FACTORY.setPassword("admin");\n    }\n\n    public static void start(String connectionName, boolean autoClose, ThrowableConsumer<Channel, Exception> throwableConsumer) {\n        if (autoClose) {\n            try (\n                Connection connection = CONNECTION_FACTORY.newConnection(connectionName);\n                Channel channel = connection.createChannel()\n            ) {\n                throwableConsumer.accept(channel);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        } else {\n            try {\n                Connection connection = CONNECTION_FACTORY.newConnection(connectionName);\n                Channel channel = connection.createChannel();\n                throwableConsumer.accept(channel);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public static interface ThrowableConsumer<T, E extends Throwable> {\n        void accept(T t) throws E;\n    }\n}\n')),(0,l.kt)("h4",{id:"322-\u5de5\u4f5c\u961f\u5217\u6a21\u5f0f"},"3.2.2 \u5de5\u4f5c\u961f\u5217\u6a21\u5f0f"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/1dd2e684bfa454fc5a1f304752fd0922.png",alt:null})),(0,l.kt)("h5",{id:"\u751f\u4ea7\u8005-1"},"\u751f\u4ea7\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u5de5\u4f5c\u961f\u5217\u6a21\u5f0f-\u751f\u4ea7\u8005\n */\npublic class MyProducer {\n    static final String EXCHANGE = "";            // \u9ed8\u8ba4\u4ea4\u6362\u673a\n    static final String QUEUE = MyConsumer.QUEUE; // \u961f\u5217\u4e00\u822c\u5728\u6d88\u8d39\u8005\u7aef\u58f0\u660e\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(MyProducer.class.getSimpleName(), true, channel -> {\n            channel.queueDeclare(QUEUE, false, false, false, null);\n            for (int i = 1; i <= 20; i++) {\n                String body = "This is the " + i + "-th message";\n                channel.basicPublish(EXCHANGE, QUEUE, null, body.getBytes());\n                System.out.printf("Sent message=\'%s\'\\n", body);\n            }\n        });\n    }\n}\n\n')),(0,l.kt)("h5",{id:"\u6d88\u8d39\u8005-1"},"\u6d88\u8d39\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u5de5\u4f5c\u961f\u5217\u6a21\u5f0f-\u6d88\u8d39\u8005\n */\npublic class MyConsumer {\n    static final String QUEUE = "q.tutorial_two";\n\n    public static void main(String[] args) {\n        String connectionName1 = MyConsumer.class.getSimpleName() + "1";\n        String connectionName2 = MyConsumer.class.getSimpleName() + "2";\n        long cost1 = 500L;\n        long cost2 = 1500L;\n\n        new Thread(() -> roundRobinDispatch(connectionName1, cost1)).start();\n        new Thread(() -> roundRobinDispatch(connectionName2, cost2)).start();\n\n        // new Thread(() -> fairDispatch(connectionName1, cost1)).start();\n        // new Thread(() -> fairDispatch(connectionName2, cost2)).start();\n\n        while (true) { }\n    }\n\n    /**\n     * \u5de5\u4f5c\u961f\u5217\u6a21\u5f0f-\u8f6e\u8be2\u5206\u53d1\n     */\n    static void roundRobinDispatch(String connectionName, long cost) {\n        MyRabbitMQ.start(connectionName, false, channel -> {\n            channel.queueDeclare(QUEUE, false, false, false, null);\n            DeliverCallback deliverCallback = (consumerTag, delivery) -> {\n                // 1. \u6536\u5230\u6d88\u606f\n                System.out.printf("Received consumer=\'%s\' message=\'%s\'\\n", connectionName, new String(delivery.getBody()));\n                // 2. \u5904\u7406\u6d88\u606f\n                try { TimeUnit.MILLISECONDS.sleep(cost); } catch (Exception ignored) { }\n            };\n            channel.basicConsume(QUEUE, true, deliverCallback, consumerTag -> { });\n        });\n    }\n\n    /**\n     * \u5de5\u4f5c\u961f\u5217\u6a21\u5f0f-\u516c\u5e73\u5206\u53d1\n     */\n    static void fairDispatch(String connectionName, long cost) {\n        MyRabbitMQ.start(connectionName, false, channel -> {\n            channel.queueDeclare(QUEUE, false, false, false, null);\n            channel.basicQos(1); // \u9650\u5236\u672a\u786e\u8ba4\u6d88\u606f\u7f13\u51b2\u533a\u5927\u5c0f(\u4e00\u6b21\u53ea\u63a5\u6536\u4e00\u6761\u672a\u786e\u8ba4\u7684\u6d88\u606f)\n            DeliverCallback deliverCallback = (consumerTag, delivery) -> {\n                // 1. \u6536\u5230\u6d88\u606f\n                System.out.printf("Received consumer=\'%s\' message=\'%s\'\\n", connectionName, new String(delivery.getBody()));\n\n                // 2. \u5904\u7406\u6d88\u606f\n                try { TimeUnit.MILLISECONDS.sleep(cost); } catch (Exception ignored) { }\n\n                long deliveryTag = delivery.getEnvelope().getDeliveryTag(); // \u6d88\u606f ID(\u670d\u52a1\u5668\u7aef\u5411\u6d88\u8d39\u8005\u63a8\u9001\u6d88\u606f\uff0c\u6d88\u606f\u4f1a\u643a\u5e26\u4e00\u4e2a `deliveryTag` \u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u79f0\u6b64\u53c2\u6570\u4e3a\u6d88\u606f\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u662f\u4e00\u4e2a\u9012\u589e\u7684\u6b63\u6574\u6570)\n                boolean multiple = false;                                   // \u662f\u5426\u6279\u91cf\u5e94\u7b54(\u5982\u5f53\u524d tag=8\uff0c\u5e76\u4e14\u901a\u9053\u4e0a tag \u5728 5-8 \u7684\u6d88\u606f\u8fd8\u672a\u5e94\u7b54\uff0c\u662f\u5426\u4e00\u6b21\u6027\u5e94\u7b54\u5f53\u524d tag \u53ca\u5176\u4e4b\u524d\u6240\u6709\u5c1a\u672a\u5e94\u7b54\u7684\u6d88\u606f)\n                boolean requeue = false;                                    // \u662f\u5426\u91cd\u65b0\u5165\u961f\n\n                // 3. \u624b\u52a8\u5e94\u7b54(\u80af\u5b9a\u786e\u8ba4)(\u544a\u77e5 RabbitMQ \u8be5\u6d88\u606f\u88ab\u6210\u529f\u5904\u7406\u4e86)\n                channel.basicAck(deliveryTag, multiple);\n\n                // // 3. \u624b\u52a8\u5e94\u7b54(\u5426\u5b9a\u786e\u8ba4)(\u4e0d\u5904\u7406\u8be5\u6d88\u606f\u76f4\u63a5\u62d2\u7edd)\n                // channel.basicNack(deliveryTag, multiple, requeue);\n            };\n            channel.basicConsume(QUEUE, false, deliverCallback, consumerTag -> { });\n        });\n    }\n}\n')),(0,l.kt)("h5",{id:"\u6548\u679c"},"\u6548\u679c"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/2c88968e9ba84cb3894dcb55ff87c407.png",alt:"\u8bf7\u6dfb\u52a0\u56fe\u7247\u63cf\u8ff0"}),"\n",(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/22457776696c4e21b0808b4a1905079c.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,l.kt)("h4",{id:"323-\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f"},"3.2.3 \u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/ee39b4fe3d3090ee993baf8f357f1652.png",alt:null})),(0,l.kt)("h5",{id:"\u751f\u4ea7\u8005-2"},"\u751f\u4ea7\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f-\u751f\u4ea7\u8005\n */\npublic class MyProducer {\n    static final String EXCHANGE = "x.tutorial_three.fanout";\n    static final String QUEUE1 = MyConsumer1.QUEUE;\n    static final String QUEUE2 = MyConsumer2.QUEUE;\n    static final String ROUTING_KEY = "";\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(MyProducer.class.getSimpleName(), true, channel -> {\n            // 1. \u58f0\u660e\u4ea4\u6362\u673a\n            channel.exchangeDeclare(EXCHANGE, BuiltinExchangeType.FANOUT, false);\n            // 2. \u58f0\u660e\u961f\u5217\n            channel.queueDeclare(QUEUE1, false, false, false, null);\n            channel.queueDeclare(QUEUE2, false, false, false, null);\n            // 3. \u7ed1\u5b9a\u4ea4\u6362\u673a\u548c\u961f\u5217\n            channel.queueBind(QUEUE1, EXCHANGE, ROUTING_KEY);\n            channel.queueBind(QUEUE2, EXCHANGE, ROUTING_KEY);\n            // 4. \u53d1\u9001\u6d88\u606f\n            String body = "This is a broadcast message";\n            channel.basicPublish(EXCHANGE, ROUTING_KEY, null, body.getBytes());\n            System.out.printf("Sent message=\'%s\'\\n", body);\n        });\n    }\n}\n')),(0,l.kt)("h5",{id:"\u6d88\u8d39\u8005\u4e00"},"\u6d88\u8d39\u8005\u4e00"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f-\u6d88\u8d39\u8005-1\n */\npublic class MyConsumer1 {\n    static final String QUEUE = "q.tutorial_three.queue1";\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(MyConsumer1.class.getSimpleName(), false, channel -> {\n            channel.queueDeclare(QUEUE, false, false, false, null);\n            DeliverCallback deliverCallback = (consumerTag, delivery) -> {\n                System.out.printf("Received message=\'%s\'\\n", new String(delivery.getBody()));\n            };\n            channel.basicConsume(QUEUE, true, deliverCallback, consumerTag -> { });\n        });\n    }\n}\n')),(0,l.kt)("h5",{id:"\u6d88\u8d39\u8005\u4e8c"},"\u6d88\u8d39\u8005\u4e8c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f-\u6d88\u8d39\u8005-2\n */\npublic class MyConsumer2 {\n    static final String QUEUE = "q.tutorial_three.queue2";\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(MyConsumer2.class.getSimpleName(), false, channel -> {\n            channel.queueDeclare(QUEUE, false, false, false, null);\n            DeliverCallback deliverCallback = (consumerTag, delivery) -> {\n                System.out.printf("Received message=\'%s\'\\n", new String(delivery.getBody()));\n            };\n            channel.basicConsume(QUEUE, true, deliverCallback, consumerTag -> { });\n        });\n    }\n}\n')),(0,l.kt)("h5",{id:"\u6548\u679c-1"},"\u6548\u679c"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/6a215095384a4fab8629b7c85ec54e95.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,l.kt)("h4",{id:"324-\u8def\u7531\u6a21\u5f0f"},"3.2.4 \u8def\u7531\u6a21\u5f0f"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/b2326695f6f4b8e3c48093e07be0659f.png",alt:null})),(0,l.kt)("h5",{id:"\u751f\u4ea7\u8005-3"},"\u751f\u4ea7\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u8def\u7531\u6a21\u5f0f-\u751f\u4ea7\u8005\n */\npublic class MyProducer {\n    static final String EXCHANGE = "x.tutorial_four.log.direct";\n    static final String QUEUE_LOG = LogConsumer.QUEUE;\n    static final String QUEUE_ERROR_LOG = ErrorLogConsumer.QUEUE;\n    static final String ROUTING_KEY_INFO = "info";\n    static final String ROUTING_KEY_WARN = "warn";\n    static final String ROUTING_KEY_ERROR = "error";\n\n    static final List<String> MESSAGE_LIST = List.of(\n        "[2022-01-01 00:00:00.100][main      ][info ] This is an info log.",\n        "[2022-01-01 00:00:00.200][main      ][warn ] This is a warn log.",\n        "[2022-01-01 00:00:00.300][main      ][error] This is a error log."\n    );\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(MyProducer.class.getSimpleName(), true, channel -> {\n            // 1. \u58f0\u660e\u4ea4\u6362\u673a\n            channel.exchangeDeclare(EXCHANGE, BuiltinExchangeType.DIRECT, false);\n            // 2. \u58f0\u660e\u961f\u5217\n            channel.queueDeclare(QUEUE_LOG, false, false, false, null);\n            channel.queueDeclare(QUEUE_ERROR_LOG, false, false, false, null);\n            // 3. \u7ed1\u5b9a\u4ea4\u6362\u673a\u548c\u961f\u5217\n            channel.queueBind(QUEUE_LOG, EXCHANGE, ROUTING_KEY_INFO);\n            channel.queueBind(QUEUE_LOG, EXCHANGE, ROUTING_KEY_WARN);\n            channel.queueBind(QUEUE_LOG, EXCHANGE, ROUTING_KEY_ERROR);\n            channel.queueBind(QUEUE_ERROR_LOG, EXCHANGE, ROUTING_KEY_ERROR);\n            // 4. \u53d1\u9001\u6d88\u606f\n            for (String body : MESSAGE_LIST) {\n                String routingKey = body.substring(38, 43).trim();\n                channel.basicPublish(EXCHANGE, routingKey, null, body.getBytes());\n                System.out.printf("Sent routingKey=\'%s\' message=\'%s\'\\n", routingKey, body);\n            }\n        });\n    }\n}\n')),(0,l.kt)("h5",{id:"\u6536\u96c6\u6240\u6709\u65e5\u5fd7\u6d88\u8d39\u8005"},"\u6536\u96c6\u6240\u6709\u65e5\u5fd7\u6d88\u8d39\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u8def\u7531\u6a21\u5f0f-\u6536\u96c6\u6240\u6709\u65e5\u5fd7\u6d88\u8d39\u8005\n */\npublic class LogConsumer {\n    static final String QUEUE = "q.tutorial_four.log";\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(LogConsumer.QUEUE, false, channel -> {\n            channel.queueDeclare(QUEUE, false, false, false, null);\n            DeliverCallback deliverCallback = (consumerTag, delivery) -> {\n                System.out.printf("Received message=\'%s\'\\n", new String(delivery.getBody()));\n            };\n            channel.basicConsume(QUEUE, true, deliverCallback, consumerTag -> { });\n        });\n    }\n}\n')),(0,l.kt)("h5",{id:"\u6536\u96c6\u9519\u8bef\u65e5\u5fd7\u6d88\u8d39\u8005"},"\u6536\u96c6\u9519\u8bef\u65e5\u5fd7\u6d88\u8d39\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u8def\u7531\u6a21\u5f0f-\u6536\u96c6\u9519\u8bef\u65e5\u5fd7\u6d88\u8d39\u8005\n */\npublic class ErrorLogConsumer {\n    static final String QUEUE = "q.tutorial_four.error";\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(ErrorLogConsumer.class.getSimpleName(), false, channel -> {\n            channel.queueDeclare(QUEUE, false, false, false, null);\n            DeliverCallback deliverCallback = (consumerTag, delivery) -> {\n                // 1. \u6536\u5230\u6d88\u606f\n                System.out.printf("Received message=\'%s\'\\n", new String(delivery.getBody()));\n                // 2. \u5904\u7406\u6d88\u606f\uff08\u544a\u8b66\uff09\n                try { TimeUnit.MILLISECONDS.sleep(500L); } catch (InterruptedException ignored) { }\n                // 3. \u624b\u52a8\u5e94\u7b54\n                channel.basicAck(delivery.getEnvelope().getDeliveryTag(), false);\n            };\n            channel.basicConsume(QUEUE, false, deliverCallback, consumerTag -> { });\n        });\n    }\n}\n')),(0,l.kt)("h5",{id:"\u6548\u679c-2"},"\u6548\u679c"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/a2cd572891444b98aa856038ebf3fee8.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,l.kt)("h4",{id:"325-\u4e3b\u9898\u6a21\u5f0f"},"3.2.5 \u4e3b\u9898\u6a21\u5f0f"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/a871a6b497902eb6b3296d04ba7fdbd2.png",alt:null})),(0,l.kt)("h5",{id:"\u751f\u4ea7\u8005-4"},"\u751f\u4ea7\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u4e3b\u9898\u6a21\u5f0f-\u751f\u4ea7\u8005\n */\npublic class MyProducer {\n    static final String EXCHANGE = "x.tutorial_five.topic";\n    static final String QUEUE_ORDER_LOG = OrderLogConsumer.QUEUE;\n    static final String QUEUE_STOCK_LOG = StockLogConsumer.QUEUE;\n    // \u4e3b\u9898(\u4e3b\u9898\u662f\u7531\u591a\u4e2a\u5355\u8bcd\u4ee5 `.` \u9694\u5f00\u7684\u8def\u7531\u952e\uff0c`*` \u8868\u793a\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u5355\u8bcd\uff0c`#` \u8868\u793a\u6709\u4efb\u610f\u4e2a\u5355\u8bcd)\n    static final String TOPIC_ORDER = "order.#.log.*";\n    static final String TOPIC_STOCK = "stock.#.log.*";\n\n    static final List<String> MESSAGE_LIST = List.of(\n        "-rw-r--r-- 1 root root 1M 2022-01-01 00:00 order.info.log.2022-01-01",  // \u5339\u914d\u8ba2\u5355\u4e3b\u9898\n        "-rw-r--r-- 1 root root 1K 2022-01-01 00:00 order.warn.log.2022-01-01",  // \u5339\u914d\u8ba2\u5355\u4e3b\u9898\n        "-rw-r--r-- 1 root root 10 2022-01-01 00:00 order.error.log.2022-01-01", // \u5339\u914d\u8ba2\u5355\u4e3b\u9898\n        "-rw-r--r-- 1 root root  0 2022-01-01 00:00 stock.log",\n        "-rw-r--r-- 1 root root 1M 2022-01-01 00:00 stock.log.2022-01-01"        // \u5339\u914d\u5e93\u5b58\u4e3b\u9898\n    );\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(MyProducer.class.getSimpleName(), true, channel -> {\n            channel.exchangeDeclare(EXCHANGE, BuiltinExchangeType.TOPIC, false);\n            channel.queueDeclare(QUEUE_ORDER_LOG, false, false, false, null);\n            channel.queueDeclare(QUEUE_STOCK_LOG, false, false, false, null);\n            channel.queueBind(QUEUE_ORDER_LOG, EXCHANGE, TOPIC_ORDER);\n            channel.queueBind(QUEUE_STOCK_LOG, EXCHANGE, TOPIC_STOCK);\n            for (String body : MESSAGE_LIST) {\n                // ls -AFlh --time-style=long-iso | awk \'{ print $8 }\'\n                String[] split = body.split(" ");\n                if (split.length == 8) {\n                    String routingKey = split[7];\n                    channel.basicPublish(EXCHANGE, routingKey, null, body.getBytes());\n                    System.out.printf("sent routingKey=\'%s\' message=\'%s\'\\n", routingKey, body);\n                }\n            }\n        });\n    }\n}\n')),(0,l.kt)("h5",{id:"\u6536\u96c6\u8ba2\u5355\u670d\u52a1\u65e5\u5fd7\u6d88\u8d39\u8005"},"\u6536\u96c6\u8ba2\u5355\u670d\u52a1\u65e5\u5fd7\u6d88\u8d39\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u4e3b\u9898\u6a21\u5f0f-\u6536\u96c6\u8ba2\u5355\u670d\u52a1\u65e5\u5fd7\u6d88\u8d39\u8005\n */\npublic class OrderLogConsumer {\n    static final String QUEUE = "q.tutorial_five.order.log";\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(OrderLogConsumer.class.getSimpleName(), false, channel -> {\n            channel.queueDeclare(QUEUE, false, false, false, null);\n            DeliverCallback deliverCallback = (consumerTag, delivery) -> {\n                System.out.printf("Received message=\'%s\'\\n", new String(delivery.getBody()));\n            };\n            channel.basicConsume(QUEUE, true, deliverCallback, consumerTag -> { });\n        });\n    }\n}\n')),(0,l.kt)("h5",{id:"\u6536\u96c6\u5e93\u5b58\u670d\u52a1\u65e5\u5fd7\u6d88\u8d39\u8005"},"\u6536\u96c6\u5e93\u5b58\u670d\u52a1\u65e5\u5fd7\u6d88\u8d39\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u4e3b\u9898\u6a21\u5f0f-\u6536\u96c6\u5e93\u5b58\u670d\u52a1\u65e5\u5fd7\u6d88\u8d39\u8005\n */\npublic class StockLogConsumer {\n    static final String QUEUE = "q.tutorial_five.stock.log";\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(StockLogConsumer.class.getSimpleName(), false, channel -> {\n            channel.queueDeclare(QUEUE, false, false, false, null);\n            DeliverCallback deliverCallback = (consumerTag, delivery) -> {\n                System.out.printf("Received message=\'%s\'\\n", new String(delivery.getBody()));\n            };\n            channel.basicConsume(QUEUE, true, deliverCallback, consumerTag -> { });\n        });\n    }\n}\n')),(0,l.kt)("h5",{id:"\u6548\u679c-3"},"\u6548\u679c"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/75f35df087ad4061b910a5af0f0481e4.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,l.kt)("h4",{id:"326-\u8fdc\u7a0b\u8c03\u7528\u6a21\u5f0f"},"3.2.6 \u8fdc\u7a0b\u8c03\u7528\u6a21\u5f0f"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/9e30cd982ed17a65038c1b51070c1ff6.png",alt:null})),(0,l.kt)("h5",{id:"\u670d\u52a1\u7aef"},"\u670d\u52a1\u7aef"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * \u8fdc\u7a0b\u8c03\u7528\u6a21\u5f0f-\u670d\u52a1\u7aef\n */\npublic class MyServer {\n    static final String REQUEST_EXCHANGE = \"\";                          // \u8bf7\u6c42\u4ea4\u6362\u673a\n    static final String REQUEST_QUEUE = \"q.tutorial_six.request\";       // \u8bf7\u6c42\u961f\u5217\n    static final String RESPONSE_EXCHANGE = MyClient.RESPONSE_EXCHANGE; // \u54cd\u5e94\u4ea4\u6362\u673a\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(MyServer.class.getSimpleName(), false, channel -> {\n            channel.queueDeclare(REQUEST_QUEUE, false, false, false, null);\n\n            channel.basicQos(1); // \u9650\u5236\u672a\u54cd\u5e94\u8bf7\u6c42\u7f13\u51b2\u533a\u5927\u5c0f(\u4e00\u6b21\u53ea\u5904\u7406\u4e00\u6761\u8bf7\u6c42)\n\n            DeliverCallback handler = (consumerTag, delivery) -> {\n                // 1. \u8bf7\u6c42\u5934\n                AMQP.BasicProperties requestHeaders = delivery.getProperties();\n                String requestId = requestHeaders.getCorrelationId();\n                String responseRoutingKey = requestHeaders.getReplyTo();\n\n                // 2. \u8bf7\u6c42\u4f53\n                String requestBody = new String(delivery.getBody());\n                System.out.printf(\"Received requestId='%s' requestBody='%s' responseRoutingKey='%s'\\n\", requestId, requestBody, responseRoutingKey);\n\n                // 3. \u54cd\u5e94\u5934\n                AMQP.BasicProperties responseHeaders = new AMQP.BasicProperties\n                    .Builder()\n                    .correlationId(requestId)\n                    .build();\n\n                // 4. \u54cd\u5e94\u4f53\n                String responseBody = Integer.toString(f(Integer.parseInt(requestBody)));\n\n                channel.basicPublish(RESPONSE_EXCHANGE, responseRoutingKey, responseHeaders, responseBody.getBytes());\n                channel.basicAck(delivery.getEnvelope().getDeliveryTag(), false);\n                System.out.printf(\"Responded requestId='%s' requestBody='%s' responseRoutingKey='%s' responseBody='%s'\\n\", requestId, requestBody, responseRoutingKey, responseBody);\n            };\n            channel.basicConsume(REQUEST_QUEUE, false, handler, consumerTag -> { });\n        });\n    }\n\n    private static int f(int n) {\n        if (n == 0) {\n            return 0;\n        } else if (n == 1) {\n            return 1;\n        } else {\n            return f(n - 1) + f(n - 2);\n        }\n    }\n}\n")),(0,l.kt)("h5",{id:"\u5ba2\u6237\u7aef"},"\u5ba2\u6237\u7aef"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * \u8fdc\u7a0b\u8c03\u7528\u6a21\u5f0f-\u5ba2\u6237\u7aef\n */\npublic class MyClient {\n    static final String REQUEST_EXCHANGE = MyServer.REQUEST_EXCHANGE; // \u8bf7\u6c42\u4ea4\u6362\u673a\n    static final String REQUEST_ROUTING_KEY = MyServer.REQUEST_QUEUE; // \u8bf7\u6c42\u8def\u7531\u952e\n    static final String RESPONSE_EXCHANGE = \"\";                       // \u54cd\u5e94\u4ea4\u6362\u673a\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(MyClient.class.getSimpleName(), true, channel -> {\n            for (int i = 0; i < 10; i++) {\n                int f = f(channel, i);\n                System.out.printf(\"f(%d) = %d\\n\", i, f);\n            }\n        });\n    }\n\n    private static int f(Channel channel, int n) throws Exception {\n        // 1. \u8bf7\u6c42\u5934\n        String requestId = UUID.randomUUID().toString();          // \u8bf7\u6c42 ID(\u670d\u52a1\u7aef\u54cd\u5e94\u65f6\u643a\u5e26\u8bf7\u6c42 ID\uff0c\u5ba2\u6237\u7aef\u6536\u5230\u54cd\u5e94\u540e\u6839\u636e\u5224\u65ad\u8bf7\u6c42 ID \u662f\u5426\u4e00\u81f4\uff0c\u4e0d\u4e00\u81f4\u53ef\u8fdb\u884c\u4e22\u5f03)\n        String responseQueue = channel.queueDeclare().getQueue(); // \u54cd\u5e94\u961f\u5217(\u6bcf\u4e2a\u8bf7\u6c42\u5355\u72ec\u521b\u5efa\u4e34\u65f6\u961f\u5217\uff0c\u670d\u52a1\u7aef\u5c06\u54cd\u5e94\u6d88\u606f\u53d1\u9001\u81f3\u8be5\u961f\u5217\u4e2d)\n        AMQP.BasicProperties requestHeaders = new AMQP.BasicProperties\n            .Builder()\n            .correlationId(requestId)\n            .replyTo(responseQueue)\n            .build();\n\n        // 2. \u8bf7\u6c42\u4f53\n        String requestBody = Integer.toString(n);\n\n        channel.basicPublish(REQUEST_EXCHANGE, REQUEST_ROUTING_KEY, requestHeaders, requestBody.getBytes());\n        System.out.printf(\"Requested requestId='%s' requestBody='%s' responseQueue='%s'\\n\", requestId, requestBody, responseQueue);\n\n        BlockingQueue<String> response = new ArrayBlockingQueue<>(1); // \u54cd\u5e94\u7ed3\u679c\u963b\u585e\u961f\u5217(\u4e00\u6b21\u53ea\u53d1\u8d77\u4e00\u6761\u8bf7\u6c42\u5e76\u7b49\u5f85\u8bf7\u6c42\u54cd\u5e94)\n\n        DeliverCallback responseCallback = (consumerTag, delivery) -> {\n            // 3. \u54cd\u5e94\u5934\n            AMQP.BasicProperties responseHeaders = delivery.getProperties();\n            if (Objects.equals(responseHeaders.getCorrelationId(), requestId)) {\n                // 4. \u54cd\u5e94\u4f53\n                String responseBody = new String(delivery.getBody());\n                System.out.printf(\"Received requestId='%s' requestBody='%s' responseQueue='%s' responseBody='%s' \\n\", requestId, requestBody, responseQueue, responseBody);\n                response.offer(responseBody);\n            }\n        };\n\n        String cTag = channel.basicConsume(responseQueue, true, responseCallback, consumerTag -> { });\n        String responseBody = response.take(); // \u7b49\u5f85\u54cd\u5e94\u7ed3\u679c\n        channel.basicCancel(cTag);             // \u53d6\u6d88\u5bf9\u54cd\u5e94\u961f\u5217\u7684\u8ba2\u9605\n\n        return Integer.parseInt(responseBody);\n    }\n}\n")),(0,l.kt)("h5",{id:"\u6548\u679c-4"},"\u6548\u679c"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/e5f0586d4d714d1e915a1a85f6214659.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,l.kt)("h4",{id:"327-\u53d1\u5e03\u786e\u8ba4\u6a21\u5f0f"},"3.2.7 \u53d1\u5e03\u786e\u8ba4\u6a21\u5f0f"),(0,l.kt)("h5",{id:"\u751f\u4ea7\u8005-5"},"\u751f\u4ea7\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u53d1\u5e03\u786e\u8ba4\u6a21\u5f0f-\u751f\u4ea7\u8005\n */\npublic class MyProducer {\n    static final String EXCHANGE = "";\n\n    static final List<String> MESSAGE_LIST = new ArrayList<>();\n\n    static {\n        for (int i = 1; i <= 5000; i++) {\n            MESSAGE_LIST.add("msg" + i);\n        }\n    }\n\n    public static void main(String[] args) {\n        noConfirm();\n        confirmIndividuallySync();\n        confirmBatchSync();\n        confirmAsync();\n    }\n\n    /**\n     * \u65e0\u786e\u8ba4\n     */\n    private static void noConfirm() {\n        String mode = "\u65e0\u786e\u8ba4";\n        MyRabbitMQ.start(MyProducer.class.getSimpleName(), true, channel -> {\n            String queue = channel.queueDeclare().getQueue(); // \u521b\u5efa\u4e34\u65f6\u961f\u5217(\u4e3b\u52a8\u58f0\u660e\u4e00\u4e2a\u7531\u670d\u52a1\u7aef\u547d\u540d\u7684\u3001\u6392\u5b83\u7684\u3001\u81ea\u52a8\u5220\u9664\u7684\u3001\u975e\u6301\u4e45\u5316\u7684\u961f\u5217)\n            long start = System.currentTimeMillis();\n            for (String body : MESSAGE_LIST) {\n                channel.basicPublish(EXCHANGE, queue, null, body.getBytes());\n            }\n            long end = System.currentTimeMillis();\n            System.out.printf("[%-20s] Sent %d messages for %d ms\\n", mode, MESSAGE_LIST.size(), end - start);\n        });\n    }\n\n    /**\n     * \u5355\u72ec\u540c\u6b65\u786e\u8ba4\n     */\n    private static void confirmIndividuallySync() {\n        String mode = "\u5355\u72ec\u540c\u6b65\u786e\u8ba4";\n        MyRabbitMQ.start(MyProducer.class.getSimpleName(), true, channel -> {\n            String queue = channel.queueDeclare().getQueue();\n            channel.confirmSelect(); // \u542f\u7528\u53d1\u5e03\u786e\u8ba4\n            long start = System.currentTimeMillis();\n            for (String body : MESSAGE_LIST) {\n                channel.basicPublish(EXCHANGE, queue, null, body.getBytes());\n                channel.waitForConfirmsOrDie(1000L); // \u7b49\u5f85\u786e\u8ba4\n            }\n            long end = System.currentTimeMillis();\n            System.out.printf("[%-20s] Sent %d messages for %d ms\\n", mode, MESSAGE_LIST.size(), end - start);\n        });\n    }\n\n    /**\n     * \u6279\u91cf\u540c\u6b65\u786e\u8ba4\n     */\n    private static void confirmBatchSync() {\n        String mode = "\u6279\u91cf\u540c\u6b65\u786e\u8ba4";\n        MyRabbitMQ.start(MyProducer.class.getSimpleName(), true, channel -> {\n            String queue = channel.queueDeclare().getQueue();\n            channel.confirmSelect();           // \u542f\u7528\u53d1\u5e03\u786e\u8ba4\n            long batchSize = 100L;             // \u6279\u6b21\u5927\u5c0f\n            long outstandingMessageCount = 0L; // \u672a\u786e\u8ba4\u7684\u6d88\u606f\u6570\n            long start = System.currentTimeMillis();\n            for (String body : MESSAGE_LIST) {\n                channel.basicPublish(EXCHANGE, queue, null, body.getBytes());\n                outstandingMessageCount++;\n                if (outstandingMessageCount == batchSize) { // \u6279\u91cf\u7b49\u5f85\u786e\u8ba4(\u5f53\u672a\u786e\u8ba4\u7684\u6d88\u606f\u6570\u5230\u8fbe\u6279\u6b21\u5927\u5c0f\u65f6\u518d\u7b49\u5f85\u786e\u8ba4)\n                    channel.waitForConfirmsOrDie(1000L);\n                    outstandingMessageCount = 0L;\n                }\n            }\n            if (outstandingMessageCount > 0) {              // \u6279\u91cf\u7b49\u5f85\u786e\u8ba4(\u6d88\u606f\u5168\u90e8\u53d1\u9001\u540e\u53ef\u80fd\u4ecd\u6709\u672a\u786e\u8ba4\u7684\u6d88\u606f)\n                channel.waitForConfirmsOrDie(1000L);\n                outstandingMessageCount = 0L;\n            }\n            long end = System.currentTimeMillis();\n            System.out.printf("[%-20s] Sent %d messages for %d ms\\n", mode, MESSAGE_LIST.size(), end - start);\n        });\n    }\n\n\n    /**\n     * \u5f02\u6b65\u786e\u8ba4\n     */\n    private static void confirmAsync() {\n        String mode = "\u5f02\u6b65\u786e\u8ba4";\n        MyRabbitMQ.start(MyProducer.class.getSimpleName(), true, channel -> {\n            String queue = channel.queueDeclare().getQueue();\n            channel.confirmSelect(); // \u542f\u7528\u53d1\u5e03\u786e\u8ba4\n            channel.addConfirmListener(new ConfirmListener() { // \u786e\u8ba4\u56de\u8c03\n                @Override\n                public void handleAck(long deliveryTag, boolean multiple) throws IOException {\n\n                }\n                @Override\n                public void handleNack(long deliveryTag, boolean multiple) throws IOException {\n                    System.out.println("Publishing failed");\n                }\n            });\n            long start = System.currentTimeMillis();\n            for (String body : MESSAGE_LIST) {\n                channel.basicPublish(EXCHANGE, queue, null, body.getBytes());\n            }\n            long end = System.currentTimeMillis();\n            System.out.printf("[%-20s] Sent %d messages for %d ms\\n", mode, MESSAGE_LIST.size(), end - start);\n        });\n    }\n}\n')),(0,l.kt)("h5",{id:"\u6548\u679c-5"},"\u6548\u679c"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/8739393346064c3db67af1a9b08dbeff.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,l.kt)("h3",{id:"33-\u603b\u7ed3"},"3.3 \u603b\u7ed3"),(0,l.kt)("h4",{id:"\u5b98\u65b9\u793a\u4f8b\u603b\u7ed3"},"\u5b98\u65b9\u793a\u4f8b\u603b\u7ed3"),(0,l.kt)("p",null,"\u5728\u5b98\u65b9\u7684\u4e03\u4e2a\u793a\u4f8b\u4e2d\uff0c\u53ef\u4ee5\u6982\u62ec\u5982\u4e0b\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u7b80\u5355\u6a21\u5f0f\uff1a\u9ed8\u8ba4 ",(0,l.kt)("inlineCode",{parentName:"li"},"direct")," \u7c7b\u578b\u4ea4\u6362\u673a\uff0c\u961f\u5217\u540d\u5145\u5f53\u8def\u7531\u952e\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u5de5\u4f5c\u961f\u5217\u6a21\u5f0f\uff1a\u540c\u4e00\u961f\u5217\u4e0d\u540c\u6d88\u8d39\u8005\u7684\u6d88\u606f\u5206\u53d1\u673a\u5236\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f\uff1a\u540c\u4e00\u4e2a\u4ea4\u6362\u673a\u7ed1\u5b9a\u591a\u4e2a\u961f\u5217\uff0c\u5b9e\u73b0\u5e7f\u64ad\u6d88\u606f\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u8def\u7531\u6a21\u5f0f\uff1a\u4ea4\u6362\u673a\u6839\u636e\u5206\u53d1\u89c4\u5219\u5c06\u6d88\u606f\u5206\u53d1\u5230\u4e0d\u540c\u7684\u961f\u5217\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u4e3b\u9898\u6a21\u5f0f\uff1a\u4ea4\u6362\u673a\u53ef\u4ee5\u6839\u636e\u6a21\u7cca\u7684\u5206\u53d1\u89c4\u5219\u5c06\u6d88\u606f\u5206\u53d1\u5230\u4e0d\u540c\u7684\u961f\u5217\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u8fdc\u7a0b\u8c03\u7528\u6a21\u5f0f\uff1a\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\u5230\u8bf7\u6c42\u961f\u5217\uff0c\u5e76\u8bbe\u7f6e\u4e34\u65f6\u7684\u54cd\u5e94\u961f\u5217\uff0c\u670d\u52a1\u7aef\u8ba2\u9605\u8bf7\u6c42\u961f\u5217\uff0c\u5e76\u53d1\u9001\u54cd\u5e94\u5230\u4e34\u65f6\u7684\u54cd\u5e94\u961f\u5217\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u53d1\u5e03\u786e\u8ba4\u6a21\u5f0f\uff1a\u6d88\u606f\u53ef\u9760\u53d1\u9001\u3002")),(0,l.kt)("h4",{id:"\u4ea4\u6362\u673a\u7c7b\u578b\u603b\u7ed3"},"\u4ea4\u6362\u673a\u7c7b\u578b\u603b\u7ed3"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"fanout")," \u76f4\u8fde\u4ea4\u6362\u673a\uff1a\u4ea4\u6362\u673a\u5ffd\u7565\u8def\u7531\u952e\uff0c\u76f4\u63a5\u5c06\u6d88\u606f\u5206\u53d1\u5230\u961f\u5217\u4e2d\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"direct")," \u8def\u7531\u4ea4\u6362\u673a\uff1a\u4ea4\u6362\u673a\u901a\u8fc7\u8def\u7531\u952e\uff0c\u5c06\u6d88\u606f\u5206\u53d1\u5230\u4e0d\u540c\u7684\u961f\u5217\u4e2d\u3002\uff08\u9ed8\u8ba4\u4ea4\u4e92\u673a\u4f7f\u7528\u961f\u5217\u540d\u4f5c\u4e3a\u8def\u7531\u952e\uff09"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"topic")," \u4e3b\u9898\u4ea4\u6362\u673a\uff1a\u4ea4\u6362\u673a\u53ef\u4ee5\u548c\u961f\u5217\u7ed1\u5b9a\u6a21\u7cca\u7684\u5206\u53d1\u89c4\u5219\uff0c\u4ee5\u5339\u914d\u4e0d\u540c\u7684\u8def\u7531\u952e\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"headers")," \u5934\u90e8\u4ea4\u6362\u673a\uff1a\u4e0d\u4f9d\u8d56\u4e8e\u8def\u7531\u952e\uff0c\u800c\u662f\u7ed1\u5b9a\u65f6\u6307\u5b9a\u4e00\u7ec4\u952e\u503c\u5bf9\uff0c\u5e76\u63d0\u53d6\u6d88\u606f\u7684\u952e\u503c\u5bf9\u662f\u5426\u5b8c\u5168\u5339\u914d\u7ed1\u5b9a\u7684\u952e\u503c\u5bf9\uff0c\u5982\u679c\u5b8c\u5168\u5339\u914d\u5219\u4f1a\u628a\u6d88\u606f\u8def\u7531\u5230\u8be5\u961f\u5217\u4e2d\u3002")),(0,l.kt)("h2",{id:"\u56dbspring-amqp"},"\u56db\u3001Spring AMQP"),(0,l.kt)("h3",{id:"41-\u4ecb\u7ecd"},"4.1 \u4ecb\u7ecd"),(0,l.kt)("p",null,"\u5728 Spring \u751f\u6001\u4e2d\u63d0\u4f9b\u4e86 Spring AMQP \u9879\u76ee\uff0c\u8ba9\u6211\u4eec\u66f4\u7b80\u4fbf\u7684\u4f7f\u7528 AMQP\uff0c\u5176\u5b98\u7f51\u4ecb\u7ecd\u5982\u4e0b\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a "\u6a21\u677f" \u4f5c\u4e3a\u53d1\u9001\u6d88\u606f\u7684\u9ad8\u7ea7\u62bd\u8c61\u3002'),(0,l.kt)("li",{parentName:"ul"},'\u5b83\u8fd8\u901a\u8fc7 "\u76d1\u542c\u5668\u5bb9\u5668" \u4e3a\u6d88\u606f\u9a71\u52a8\u7684 POJO \u63d0\u4f9b\u652f\u6301\u3002'),(0,l.kt)("li",{parentName:"ul"},"\u8fd9\u4e9b\u5e93\u4fc3\u8fdb AMQP \u8d44\u6e90\u7684\u7ba1\u7406\uff0c\u540c\u65f6\u4fc3\u8fdb\u4f7f\u7528\u4f9d\u8d56\u6ce8\u5165\u548c\u7533\u660e\u5f0f\u914d\u7f6e\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5728\u6240\u6709\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u60a8\u5c06\u770b\u5230\u4e0e Spring \u6846\u67b6\u4e2d\u7684 JMS \u652f\u6301\u7684\u76f8\u4f3c\u4e4b\u5904\u3002")),(0,l.kt)("p",null,"\u8be5\u9879\u76ee\u5305\u62ec\u4e24\u4e2a\u90e8\u5206\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spring-amqp")," \u662f AMQP \u7684\u57fa\u7840\u62bd\u8c61"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spring-rabbit")," \u662f\u57fa\u4e8e RabbitMQ \u5bf9 AMQP \u7684\u5177\u4f53\u5b9e\u73b0")),(0,l.kt)("p",null,"\u529f\u80fd\u7279\u6027\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u76d1\u542c\u5668\u5bb9\u5668\uff1a\u5f02\u6b65\u5904\u7406\u63a5\u6536\u5230\u7684\u6d88\u606f"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"RabbitTemplate"),"\uff1a\u53d1\u9001\u548c\u63a5\u6536\u6d88\u606f"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"RabbitAdmin"),"\uff1a\u81ea\u52a8\u521b\u5efa\u961f\u5217\u3001\u4ea4\u6362\u673a\u3001\u7ed1\u5b9a\u5173\u7cfb")),(0,l.kt)("h3",{id:"42-\u57fa\u672c\u4f7f\u7528"},"4.2 \u57fa\u672c\u4f7f\u7528"),(0,l.kt)("h4",{id:"\u4f9d\u8d56"},"\u4f9d\u8d56"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-amqp</artifactId>\n</dependency>\n")),(0,l.kt)("h4",{id:"\u914d\u7f6e\u6587\u4ef6"},"\u914d\u7f6e\u6587\u4ef6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-properties"},"spring.rabbitmq.addresses=192.192.192.6:5672\nspring.rabbitmq.username=admin\nspring.rabbitmq.password=admin\nspring.rabbitmq.virtual-host=/\n")),(0,l.kt)("h4",{id:"\u914d\u7f6e\u7c7b"},"\u914d\u7f6e\u7c7b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@Configuration\npublic class RabbitMQConfig {\n    public static final String EXCHANGE = "x.spring_boot.direct";\n    public static final String QUEUE = "q.spring_boot";\n    public static final String ROUTING_KEY = "";\n\n    @Bean\n    public Queue springBootQueue() {\n        // boolean durable = false;\n        // boolean exclusive = false;\n        // boolean autoDelete = false;\n        // Map<String, Object> arguments = null;\n        // Queue queue = new Queue(QUEUE, durable, exclusive, autoDelete, arguments);\n        return QueueBuilder\n            .nonDurable(QUEUE)\n            .build();\n    }\n\n    @Bean\n    public Exchange springBootExchange() {\n        // boolean durable = false;\n        // boolean autoDelete = false;\n        // Map<String, Object> arguments = null;\n        // DirectExchange exchange = new DirectExchange(EXCHANGE, durable, autoDelete, arguments);\n        return ExchangeBuilder\n            .directExchange(EXCHANGE)\n            .build();\n    }\n\n    @Bean\n    public Binding binding1(@Qualifier("springBootQueue") Queue queue, @Qualifier("springBootExchange") Exchange exchange) {\n        // Map<String, Object> arguments = null;\n        // Binding binding = new Binding(QUEUE, Binding.DestinationType.QUEUE, EXCHANGE, ROUTING_KEY, arguments);\n        return BindingBuilder\n            .bind(queue)\n            .to(exchange)\n            .with(ROUTING_KEY)\n            .noargs();\n    }\n}\n')),(0,l.kt)("h4",{id:"\u751f\u4ea7\u8005-6"},"\u751f\u4ea7\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Component\npublic class MyProducer {\n    @Autowired\n    private RabbitTemplate rabbitTemplate;\n\n    public void sendRaw(String raw) {\n        MessageProperties properties = MessagePropertiesBuilder\n            .newInstance()\n            .setContentType(MessageProperties.CONTENT_TYPE_TEXT_PLAIN)\n            .build();\n        Message message = MessageBuilder\n            .withBody(raw.getBytes())\n            .andProperties(properties)\n            .build();\n        rabbitTemplate.convertAndSend(RabbitMQConfig.EXCHANGE, RabbitMQConfig.ROUTING_KEY, message);\n    }\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@SpringBootTest(classes = { App.class })\nclass AppTest {\n    @Autowired\n    MyProducer producer;\n\n    @Test\n    void test1() {\n        String raw = "{\\"data\\": \\"This is a raw message\\"}";\n        producer.sendRaw(raw);\n    }\n}\n\n')),(0,l.kt)("h4",{id:"\u6d88\u8d39\u8005-2"},"\u6d88\u8d39\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Component\npublic class MyConsumer {\n    @RabbitListener(queues = { RabbitMQConfig.QUEUE })\n    public void onMessage(Message message, Channel channel) {\n        String raw = new String(message.getBody());\n        System.out.printf(\"Received message='%s'\\n\", raw);\n    }\n}\n")),(0,l.kt)("p",null,"\u53c2\u8003\u6587\u6863\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.spring.io/spring-amqp/docs/current/reference/html/#async-consumer"},"https://docs.spring.io/spring-amqp/docs/current/reference/html/#async-consumer"))),(0,l.kt)("p",null,"\u53c2\u8003\u7c7b\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"org.springframework.amqp.core.MessageListener")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public interface MessageListener {\n    void onMessage(Message message);\n}\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"org.springframework.amqp.rabbit.listener.api.ChannelAwareMessageListener")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public interface ChannelAwareMessageListener {\n    void onMessage(Message message, Channel channel) throws Exception;\n}\n")))),(0,l.kt)("h3",{id:"43-\u81ea\u5b9a\u4e49\u6d88\u606f\u7c7b"},"4.3 \u81ea\u5b9a\u4e49\u6d88\u606f\u7c7b"),(0,l.kt)("h4",{id:"\u6d88\u606f\u7c7b"},"\u6d88\u606f\u7c7b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Data\n@AllArgsConstructor\n@NoArgsConstructor\npublic class MyMessage implements Serializable {\n    private String data;\n}\n")),(0,l.kt)("h4",{id:"\u751f\u4ea7\u8005-7"},"\u751f\u4ea7\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Component\npublic class MyProducer {\n    @Autowired\n    private RabbitTemplate rabbitTemplate;\n\n    public void sendObject(MyMessage object) {\n        rabbitTemplate.convertAndSend(RabbitMQConfig.EXCHANGE, RabbitMQConfig.ROUTING_KEY, object);\n    }\n}\n")),(0,l.kt)("h4",{id:"\u6d88\u8d39\u8005-3"},"\u6d88\u8d39\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Component\npublic class MyConsumer {\n    @RabbitListener(queues = { RabbitMQConfig.QUEUE })\n    public void handMessage(MyMessage object, Channel channel, Message message) {\n        System.out.printf(\"Received object='%s' raw='%s'\\n\", object, new String(message.getBody()));\n    }\n}\n")),(0,l.kt)("h4",{id:"json-\u5e8f\u5217\u5316"},"JSON \u5e8f\u5217\u5316"),(0,l.kt)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"RabbitTempate")," \u6d88\u606f\u8f6c\u6362\u5668\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"SimpleMessageConverter"),"\uff0c\u4f7f\u7528 Java \u7684\u5e8f\u5217\u5316\u3002Spring Boot \u4e5f\u63d0\u4f9b\u4e86 JSON \u5e8f\u5217\u5316\u7684\u6d88\u606f\u8f6c\u6362\u5668\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Configuration\npublic class RabbitMQConfig {\n    // ...\n\n    @Bean\n    public MessageConverter jsonMessageConverter() {\n        return new Jackson2JsonMessageConverter();\n    }\n}\n")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/3518c3d9e5284381b7d7099bc01fbf88.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,l.kt)("h3",{id:"44-\u6279\u91cf\u6d88\u606f"},"4.4 \u6279\u91cf\u6d88\u606f"),(0,l.kt)("h4",{id:"441-\u6279\u91cf\u53d1\u9001"},"4.4.1 \u6279\u91cf\u53d1\u9001"),(0,l.kt)("h5",{id:"\u4ecb\u7ecd"},"\u4ecb\u7ecd"),(0,l.kt)("p",null,"Spring AMQP \u63d0\u4f9b\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"MessageBatch"),' \u6d88\u606f\u6536\u96c6\u5668\uff0c\u5c06\u53d1\u9001\u7ed9\u76f8\u540c Exchange \u548c Routing Key \u7684\u6d88\u606f\uff0c"\u6084\u6084" \u6536\u96c6\u5728\u4e00\u8d77\uff0c\u5f53\u6ee1\u8db3\u6761\u4ef6\u7684\u65f6\u5019\uff0c\u4e00\u6b21\u6027\u6279\u91cf\u53d1\u9001\u63d0\u4ea4\u7ed9 RabbitMQ Broker\u3002'),(0,l.kt)("p",null,"Spring AMQP \u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"p"},"BatchingRabbitTemplate")," \u63d0\u4f9b\u6279\u91cf\u53d1\u9001\u7684\u529f\u80fd\u3002\u5982\u4e0b\u662f\u4e09\u4e2a\u6761\u4ef6\uff0c\u6ee1\u8db3\u4efb\u4e00\u5373\u4f1a\u6279\u91cf\u53d1\u9001\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6570\u91cf\uff08",(0,l.kt)("inlineCode",{parentName:"li"},"batchSize"),"\uff09\uff1a\u8d85\u8fc7\u6536\u96c6\u7684\u6d88\u606f\u6700\u5927\u6761\u6570\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7a7a\u95f4\uff08",(0,l.kt)("inlineCode",{parentName:"li"},"bufferLimit"),"\uff09\uff1a\u8d85\u8fc7\u6536\u96c6\u7684\u6d88\u606f\u5360\u7528\u7684\u6700\u5927\u5185\u5b58\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u65f6\u95f4\uff08",(0,l.kt)("inlineCode",{parentName:"li"},"timeout"),"\uff09\uff1a\u8d85\u8fc7\u6536\u96c6\u7684\u5b9e\u9645\u7684\u6700\u5927\u7b49\u5f85\u65f6\u957f\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\u3002\u4e0d\u8fc7\u8981\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u8d85\u65f6\u5f00\u59cb\u8ba1\u65f6\u7684\u5b9e\u9645\uff0c\u662f\u4ee5\u6700\u540e\u4e00\u6b21\u53d1\u9001\u65f6\u95f4\u4e3a\u8d77\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u8c03\u7528\u4e00\u6b21\u53d1\u9001\u6d88\u606f\uff0c\u90fd\u4ee5\u5f53\u524d\u65f6\u523b\u5f00\u59cb\u8ba1\u65f6\uff0c\u91cd\u65b0\u8fbe\u5230 ",(0,l.kt)("inlineCode",{parentName:"li"},"timeout")," \u624d\u7b97\u8d85\u65f6\u3002")),(0,l.kt)("h5",{id:"\u914d\u7f6e\u7c7b-1"},"\u914d\u7f6e\u7c7b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Configuration\npublic class RabbitMQConfig {\n    // ...\n\n    @Bean\n    public BatchingRabbitTemplate batchingRabbitTemplate(ConnectionFactory connectionFactory) {\n        // \u6279\u91cf\u7b56\u7565\n        int batchSize = 100;                // \u6279\u91cf\u6536\u96c6\u6700\u5927\u6d88\u606f\u6761\u6570\n        int bufferLimit = 16 * 1024 * 1024; // \u6279\u91cf\u53d1\u9001\u6700\u5927\u5185\u5b58\n        long timeout = 60 * 1000L;          // \u6279\u91cf\u6536\u96c6\u6700\u957f\u7b49\u5f85\u65f6\u95f4\n        SimpleBatchingStrategy batchingStrategy = new SimpleBatchingStrategy(batchSize, bufferLimit, timeout);\n        // \u8d85\u65f6\u53d1\u9001\u5b9a\u65f6\u5668\n        TaskScheduler taskScheduler = new ConcurrentTaskScheduler();\n\n        BatchingRabbitTemplate batchingRabbitTemplate = new BatchingRabbitTemplate(connectionFactory, batchingStrategy, taskScheduler);\n        batchingRabbitTemplate.setMessageConverter(jsonMessageConverter());\n        return batchingRabbitTemplate;\n    }\n}\n")),(0,l.kt)("h5",{id:"\u751f\u4ea7\u8005-8"},"\u751f\u4ea7\u8005"),(0,l.kt)("p",null,"Spring AMQP \u4f1a\u9759\u9ed8\u6536\u96c6\u6d88\u606f\u6765\u5b9e\u73b0\u6279\u91cf\u53d1\u9001\uff0c\u6240\u4ee5 ",(0,l.kt)("inlineCode",{parentName:"p"},"BatchingRabbitTemplate")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"RabbitTemplate")," \u7684\u4f7f\u7528\u65b9\u6cd5\u8fd8\u662f\u4e00\u81f4\u7684\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Component\npublic class MyProducer {\n    @Autowired\n    private BatchingRabbitTemplate batchingRabbitTemplate;\n\n    public void batchingSendRaw(String raw) {\n        Message message = MessageBuilder.withBody(raw.getBytes()).build();\n        batchingRabbitTemplate.convertAndSend(RabbitMQConfig.EXCHANGE, RabbitMQConfig.ROUTING_KEY, message);\n    }\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@SpringBootTest(classes = { App.class })\nclass AppTest {\n    @Autowired\n    MyProducer producer;\n\n    @Test\n    void test3() {\n        for (int i = 1; i < 101; i++) {\n            String raw = String.format("{\\"data\\": \\"%s\\"}", "This is the " + i + "-th message");\n            producer.batchingSendRaw(raw);\n        }\n    }\n}\n')),(0,l.kt)("h4",{id:"442-\u6279\u91cf\u6d88\u8d39"},"4.4.2 \u6279\u91cf\u6d88\u8d39"),(0,l.kt)("h5",{id:"\u4ecb\u7ecd-1"},"\u4ecb\u7ecd"),(0,l.kt)("p",null,"\u5728\u3010\u6279\u91cf\u53d1\u9001\u3011\u7ae0\u8282\u4e2d\u5df2\u7ecf\u5b9e\u73b0\u4e86\u6279\u91cf\u53d1\u9001\u6d88\u606f\u5230 RabbitMQ \u4e2d\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u6765\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u6279\u6d88\u606f\u5728 RabbitMQ \u5230\u5e95\u5b58\u50a8\u4e00\u6761\u6d88\u606f\uff0c\u8fd8\u662f\u591a\u6761\u6d88\u606f\uff1f"),(0,l.kt)("p",null,'\u5b9e\u9645\u4e0a\uff0cRabbitMQ Broker \u5b58\u50a8\u7684\u662f\u4e00\u6761\u6d88\u606f\uff0c\u53c8\u6216\u8005\u8bf4\uff0cRabbitMQ \u5e76\u6ca1\u6709\u63d0\u4f9b\u6279\u91cf\u63a5\u6536\u6d88\u606f\u7684 API\uff0c"\u6279\u91cf\u53d1\u9001" \u662f Spring AMQP \u7684 ',(0,l.kt)("inlineCode",{parentName:"p"},"SimpleBatchingStrategy")," \u6240\u5c01\u88c5\u63d0\u4f9b\u7684\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5728 Producer \u6700\u7ec8\u6279\u91cf\u53d1\u9001\u6d88\u606f\u65f6\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"SimpleBatchingStrategy")," \u4f1a\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"li"},"assembleMessage()"),' \u65b9\u6cd5\uff0c\u5c06\u6279\u91cf\u53d1\u9001\u7684\u591a\u6761\u6d88\u606f\u7ec4\u88c5\u6210\u4e00\u6761 "\u6279\u91cf" \u6d88\u606f\uff0c\u7136\u540e\u8fdb\u884c\u53d1\u9001\u3002'),(0,l.kt)("li",{parentName:"ul"},"\u5728 Consumer \u62c9\u53d6\u5230\u6d88\u606f\u65f6\uff0c \u4f1a\u6839\u636e ",(0,l.kt)("inlineCode",{parentName:"li"},"canDebatch()"),' \u65b9\u6cd5\uff0c\u5224\u65ad\u8be5\u6d88\u606f\u662f\u5426\u4e3a\u4e00\u6761 "\u6279\u91cf" \u6d88\u606f\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528 ',(0,l.kt)("inlineCode",{parentName:"li"},"deBatch()"),' \u65b9\u6cd5\uff0c\u5c06\u4e00\u6761 "\u6279\u91cf" \u6d88\u606f\u62c6\u5f00\uff0c\u53d8\u6210\u591a\u6761\u6d88\u606f\u3002')),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/132e701e371a4cafaa56e458203a0d10.png",alt:"[\u5916\u94fe\u56fe\u7247\u8f6c\u5b58\u5931\u8d25,\u6e90\u7ad9\u53ef\u80fd\u6709\u9632\u76d7\u94fe\u673a\u5236,\u5efa\u8bae\u5c06\u56fe\u7247\u4fdd\u5b58\u4e0b\u6765\u76f4\u63a5\u4e0a\u4f20(img-ettCQEte-1643449353557)(RabbitMQ \u7b14\u8bb0/image-20220129151911629.png)]"})),(0,l.kt)("h5",{id:"\u914d\u7f6e\u7c7b-2"},"\u914d\u7f6e\u7c7b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Configuration\npublic class RabbitMQConfig {\n    // ...\n    @Bean\n    public SimpleRabbitListenerContainerFactory batchingConsumeContainerFactory(SimpleRabbitListenerContainerFactoryConfigurer configurer, ConnectionFactory connectionFactory) {\n        SimpleRabbitListenerContainerFactory factory = new SimpleRabbitListenerContainerFactory();\n        configurer.configure(factory, connectionFactory);\n\n        factory.setMessageConverter(jsonMessageConverter());\n        // \u542f\u7528\u6279\u91cf\u6d88\u8d39\n        factory.setBatchListener(true);\n        factory.setConsumerBatchEnabled(true);\n        // \u963b\u585e\u7b49\u5f85\u6700\u591a receiveTimeout \u6beb\u79d2 \u62c9\u53d6 batchSize \u6761\u6d88\u606f\u8fdb\u884c\u6d88\u8d39\n        factory.setBatchSize(100);\n        factory.setReceiveTimeout(60 * 1000L);\n        return factory;\n    }\n}\n")),(0,l.kt)("h5",{id:"\u6d88\u8d39\u8005-4"},"\u6d88\u8d39\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@Component\npublic class BatchingConsumer {\n    @RabbitListener(queues = { RabbitMQConfig.QUEUE }, containerFactory = "batchingConsumeContainerFactory")\n    public void onMessage(List<Message> messages, Channel channel) {\n        for (Message message : messages) {\n            System.out.printf("Received raw=\'%s\'\\n", new String(message.getBody()));\n        }\n    }\n}\n')),(0,l.kt)("h3",{id:"45-\u6d88\u8d39\u91cd\u8bd5"},"4.5 \u6d88\u8d39\u91cd\u8bd5"),(0,l.kt)("h5",{id:"\u4ecb\u7ecd-2"},"\u4ecb\u7ecd"),(0,l.kt)("p",null,"\u5728\u6d88\u606f\u6d88\u8d39\u5931\u8d25\u7684\u65f6\u5019\uff0cSpring AMQP \u4f1a\u901a\u8fc7\u6d88\u8d39\u91cd\u8bd5\u673a\u5236\uff0c\u91cd\u65b0\u6295\u9012\u7ed9 Consumer\uff0c\u8ba9 Consumer \u6709\u673a\u4f1a\u91cd\u65b0\u6d88\u8d39\u6d88\u606f\uff0c\u5b9e\u73b0\u6d88\u8d39\u6210\u529f\u3002"),(0,l.kt)("p",null,"\u5f53\u7136\uff0cSpring AMQP \u5e76\u4e0d\u4f1a\u65e0\u9650\u91cd\u65b0\u6295\u9012\u6d88\u606f\u7ed9 Consumer \u91cd\u65b0\u6d88\u8d39\uff0c\u800c\u662f\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fbe\u5230 N \u6b21\u91cd\u8bd5\u6b21\u6570\u65f6\uff0cConsumer \u8fd8\u662f\u4f1a\u6d88\u8d39\u5931\u8d25\u65f6\uff0c\u8be5\u6d88\u606f\u5c31\u4f1a\u8fdb\u5165\u6b7b\u4fe1\u961f\u5217\u3002"),(0,l.kt)("p",null,"\u90a3\u4e48\u6d88\u8d39\u5931\u8d25\u8fbe\u5230\u6700\u5927\u6b21\u6570\u7684\u6d88\u606f\uff0c\u662f\u600e\u4e48\u8fdb\u5165\u5230\u6b7b\u4fe1\u961f\u5217\u7684\u5462\uff1fSpring AMQP \u5728\u6d88\u606f\u5230\u8fbe\u6700\u5927\u6d88\u8d39\u6b21\u6570\u7684\u65f6\u5019\uff0c\u4f1a\u5c06\u8be5\u6d88\u606f\u8fdb\u884c\u5426\u5b9a\uff08",(0,l.kt)("inlineCode",{parentName:"p"},"basicNack()"),"\uff09\uff0c\u5e76\u4e14 ",(0,l.kt)("inlineCode",{parentName:"p"},"requeue=false"),"\uff0c\u8fd9\u6837\u540e\u7eed\u5c31\u53ef\u4ee5\u5229\u7528 RabbitMQ \u7684\u6b7b\u4fe1\u961f\u5217\u673a\u5236\uff0c\u5c06\u8be5\u6d88\u606f\u8f6c\u53d1\u5230\u6b7b\u4fe1\u961f\u5217\u3002"),(0,l.kt)("p",null,"\u5728 Spring AMQP \u7684\u6d88\u8d39\u91cd\u8bd5\u673a\u5236\u4e2d\uff0c\u5728\u6d88\u8d39\u5931\u8d25\u5230\u8fbe\u6700\u5927\u6b21\u6570\u540e\uff0c\u4f1a\u81ea\u52a8\u629b\u51fa ",(0,l.kt)("inlineCode",{parentName:"p"},"AmqpRejectAndDontRequeueException")," \u5f02\u5e38\uff0c\u4ece\u800c\u7ed3\u675f\u8be5\u6d88\u606f\u7684\u6d88\u8d39\u91cd\u8bd5\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u6211\u4eec\u5728\u6d88\u8d39\u6d88\u606f\u7684\u903b\u8f91\u4e2d\uff0c\u4e3b\u52a8\u629b\u51fa\u8be5\u5f02\u5e38\uff0c\u4e5f\u80fd\u7ed3\u675f\u8be5\u6d88\u606f\u7684\u6d88\u606f\u91cd\u8bd5\u3002"),(0,l.kt)("h5",{id:"spring-amqp-\u662f\u600e\u4e48\u63d0\u4f9b\u6d88\u8d39\u91cd\u8bd5\u529f\u80fd\u7684"},"Spring AMQP \u662f\u600e\u4e48\u63d0\u4f9b\u6d88\u8d39\u91cd\u8bd5\u529f\u80fd\u7684"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Spring AMQP \u57fa\u4e8e ",(0,l.kt)("inlineCode",{parentName:"li"},"spring-retry")," \u9879\u76ee\u63d0\u4f9b\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"RetryTemplate")," \u5b9e\u73b0\u91cd\u8bd5\u529f\u80fd\u3002\u800c Spring AMQP \u5728\u83b7\u53d6\u5230\u6d88\u606f\u65f6\uff0c\u4f1a\u4ea4\u7ed9 RetryTemplate \u6765\u8c03\u7528\u6d88\u8d39\u8005\u7684\u76d1\u542c\u5668\uff0c\u5b9e\u73b0\u8be5\u6d88\u606f\u7684\u6d88\u8d39\u91cd\u8bd5\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5728\u8be5\u6d88\u606f\u7684\u6bcf\u6b21\u6d88\u8d39\u5931\u8d25\u540e\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"RetryTemplate")," \u4f1a\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"li"},"BackOffPolicy")," \u6765\u8fdb\u884c\u8ba1\u7b97\u8be5\u6d88\u606f\u7684\u4e0b\u4e00\u6b21\u91cd\u65b0\u6d88\u8d39\u7684\u65f6\u5019\uff0c\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"li"},"Thread.sleep()")," \u65b9\u6cd5\u5b9e\u73b0\u91cd\u65b0\u6d88\u8d39\u7684\u65f6\u95f4\u95f4\u9694\u3002\u5230\u8fbe\u65f6\u95f4\u95f4\u9694\u540e\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"RetryTemplate"),"\u53c8\u4f1a\u8c03\u7528\u6d88\u8d39\u8005\u76d1\u542c\u5668\u6765\u6d88\u8d39\u8be5\u6d88\u606f\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5f53\u8be5\u6d88\u606f\u7684\u91cd\u8bd5\u6d88\u8d39\u8fbe\u5230\u4e0a\u9650\u540e\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"RetryTemplate")," \u4f1a\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"MethodInvocationRecoverer")," \u56de\u8c03\u6765\u5b9e\u73b0\u6062\u590d\u3002\u800c Spring AMQP \u81ea\u5b9a\u4e49\u5b9e\u73b0\u4e86 ",(0,l.kt)("inlineCode",{parentName:"li"},"RejectAndDontRequeueRecoverer")," \u6765\u81ea\u52a8\u629b\u51fa ",(0,l.kt)("inlineCode",{parentName:"li"},"AmqpRejectAndDontRequeueException")," \u5f02\u5e38\uff0c\u4ece\u800c\u7ed3\u675f\u8be5\u6d88\u606f\u7684\u6d88\u8d39\u91cd\u8bd5\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0cSpring AMQP \u63d0\u4f9b\u7684\u6d88\u8d39\u91cd\u8bd5\u7684\u8ba1\u6570\u662f\u5728\u5ba2\u6237\u7aef\u7ea7\u522b\u7684\uff0c\u91cd\u542f JVM \u5e94\u7528\u540e\uff0c\u8ba1\u6570\u662f\u4f1a\u4e22\u5931\u7684\u3002")),(0,l.kt)("h5",{id:"\u914d\u7f6eapplicationyml"},"\u914d\u7f6e\uff08",(0,l.kt)("inlineCode",{parentName:"h5"},"application.yml"),"\uff09"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-properties"},"spring:\n  rabbitmq:\n    listener:\n      simple:\n        retry: # \u6d88\u8d39\u91cd\u8bd5\n          enabled: true            # \u5f00\u542f\u6d88\u8d39\u91cd\u8bd5\u673a\u5236\n          max-attempts: 3          # \u6700\u5927\u91cd\u8bd5\u6b21\u6570\n          initial-interval: 1000ms # \u91cd\u8bd5\u95f4\u9694\n")),(0,l.kt)("h3",{id:"46-\u5e76\u53d1\u6d88\u8d39"},"4.6 \u5e76\u53d1\u6d88\u8d39"),(0,l.kt)("h5",{id:"\u4ecb\u7ecd-3"},"\u4ecb\u7ecd"),(0,l.kt)("p",null,"\u5728\u4e0a\u8ff0\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u914d\u7f6e\u7684\u6bcf\u4e00\u4e2a Spring AMQP \u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"@RabbitListener")," \u90fd\u662f\u4e32\u884c\u6d88\u8d39\u7684\u3002\u663e\u7136\uff0c\u8fd9\u5728\u76d1\u542c\u7684 Queue \u6bcf\u79d2\u6d88\u606f\u91cf\u6bd4\u8f83\u5927\u7684\u65f6\u5019\uff0c\u4f1a\u5bfc\u81f4\u6d88\u8d39\u4e0d\u53ca\u65f6\uff0c\u5bfc\u81f4\u6d88\u606f\u79ef\u538b\u95ee\u9898\u3002"),(0,l.kt)("p",null,"\u867d\u7136\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u542f\u52a8\u591a\u4e2a JVM \u8fdb\u7a0b\uff0c\u5b9e\u73b0\u591a\u8fdb\u7a0b\u7684\u5e76\u53d1\u6d88\u8d39\uff0c\u4ece\u800c\u52a0\u901f\u6d88\u8d39\u7684\u901f\u5ea6\u3002\u4f46\u662f\u600e\u4e48\u5b9e\u73b0\u591a\u7ebf\u7a0b\u7684\u5e76\u53d1\u6d88\u8d39\u5462\uff1f"),(0,l.kt)("p",null,"\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"@RabbitListener")," \u6ce8\u89e3\u4e2d\uff0c\u6709 ",(0,l.kt)("inlineCode",{parentName:"p"},"concurrency")," \u5c5e\u6027\uff0c\u5b83\u53ef\u4ee5\u6307\u5b9a\u5e76\u53d1\u6d88\u8d39\u7684\u7ebf\u7a0b\u3002\u4f8b\u5982\uff0cSpring AMQP \u4f1a\u6839\u636e ",(0,l.kt)("inlineCode",{parentName:"p"},"@RabbitListener(concurrency = 2)")," \u6ce8\u89e3\u914d\u7f6e\uff0c\u521b\u5efa\u4e24\u4e2a Consumer\uff0c\u540e\u7eed\uff0c\u6bcf\u4e2a Consumer \u4f1a\u88ab\u5355\u72ec\u5206\u914d\u5230\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\uff0c\u8fdb\u884c\u62c9\u53d6\u6d88\u606f\uff0c\u6d88\u8d39\u6d88\u606f\u3002"),(0,l.kt)("h5",{id:"spring-amqp-\u7684\u5bb9\u5668\u7c7b\u578bcontainertype"},"Spring AMQP \u7684\u5bb9\u5668\u7c7b\u578b\uff08",(0,l.kt)("inlineCode",{parentName:"h5"},"ContainerType"),"\uff09"),(0,l.kt)("p",null,"\u7b2c\u4e00\u79cd\u7c7b\u578b ",(0,l.kt)("inlineCode",{parentName:"p"},"SIMPLE")," \u5bf9\u5e94 ",(0,l.kt)("inlineCode",{parentName:"p"},"SimpleMessageListenerContainer")," \u6d88\u606f\u76d1\u542c\u5668\u5bb9\u5668\uff0c\u5b83\u4e00\u5171\u6709\u4e24\u7c7b\u7ebf\u7a0b\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Consumer \u7ebf\u7a0b\uff1a\u8d1f\u8d23\u4ece RabbitMQ Broker \u83b7\u53d6 Queue \u4e2d\u7684\u6d88\u606f\uff0c\u5b58\u50a8\u5230\u5185\u5b58\u4e2d\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"BlockingQueue")," \u963b\u585e\u961f\u5217\u4e2d\u3002"),(0,l.kt)("li",{parentName:"ul"},"Listener \u7ebf\u7a0b\uff0c\u8d1f\u8d23\u4ece\u5185\u5b58\u4e2d\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"BlockingQueue")," \u4e2d\u83b7\u53d6\u6d88\u606f\uff0c\u8fdb\u884c\u6d88\u8d39\u903b\u8f91\u3002")),(0,l.kt)("p",null,"\u6ce8\u610f\uff0c\u6bcf\u4e00\u4e2a Consumer \u7ebf\u7a0b\uff0c\u5bf9\u5e94\u4e00\u4e2a RabbitMQ Consumer\uff0c\u5bf9\u5e94\u4e00\u4e2a Listener \u7ebf\u7a0b\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u4e09\u8d23\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002"),(0,l.kt)("p",null,"\u7b2c\u4e8c\u79cd\u7c7b\u578b ",(0,l.kt)("inlineCode",{parentName:"p"},"DIRECT")," \u5bf9\u5e94 ",(0,l.kt)("inlineCode",{parentName:"p"},"DirectMessageListenerContainer")," \u6d88\u606f\u76d1\u542c\u5668\u5bb9\u5668\u3002\u5b83\u53ea\u6709\u4e00\u7c7b\u7ebf\u7a0b\uff0c\u65e2\u505a ",(0,l.kt)("inlineCode",{parentName:"p"},"SIMPLE")," \u7684 Consumer \u7ebf\u7a0b\u7684\u5de5\u4f5c\uff0c\u4e5f\u505a ",(0,l.kt)("inlineCode",{parentName:"p"},"SIMPLE")," \u7684 Listener \u7ebf\u7a0b\u5de5\u4f5c\u3002"),(0,l.kt)("p",null,"\u6ce8\u610f\u56e0\u4e3a\u53ea\u6709\u4e00\u7c7b\u7ebf\u7a0b\uff0c\u6240\u6709\u5b83\u8981\u4e48\u6b63\u5728\u83b7\u53d6\u6d88\u606f\uff0c\u8981\u4e48\u6b63\u5728\u6d88\u8d39\u6d88\u606f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u83b7\u53d6\u6d88\u606f\u548c\u6d88\u8d39\u6d88\u606f\u662f\u4e32\u884c\u7684\u3002"),(0,l.kt)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSpring AMQP \u9009\u62e9\u7b2c\u4e00\u79cd\u7c7b\u578b\uff0c\u5373 ",(0,l.kt)("inlineCode",{parentName:"p"},"SIMPLE")," \u5bb9\u5668\u7c7b\u578b\u3002"),(0,l.kt)("h5",{id:"\u914d\u7f6eapplicationyml-1"},"\u914d\u7f6e\uff08",(0,l.kt)("inlineCode",{parentName:"h5"},"application.yml"),"\uff09"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"spring:\n  rabbitmq:\n    listener:\n      type: simple\n      simple:\n        concurrency: 2\n        max-concurrency: 10\n")),(0,l.kt)("h5",{id:"\u6d88\u8d39\u8005-5"},"\u6d88\u8d39\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Component\npublic class ConcurrencyConsumer {\n    @RabbitListener(queues = { RabbitMQConfig.QUEUE }, concurrency = \"2\")\n    public void onMessage(Message message, Channel channel) {\n        long thread = Thread.currentThread().getId();\n        System.out.printf(\"Received thread='%d' raw='%s'\\n\", thread, new String(message.getBody()));\n    }\n}\n")),(0,l.kt)("h3",{id:"47-\u4e8b\u52a1\u6d88\u606f"},"4.7 \u4e8b\u52a1\u6d88\u606f"),(0,l.kt)("h5",{id:"\u914d\u7f6e"},"\u914d\u7f6e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@EnableTransactionManagement\n@Configuration\npublic class RabbitMQConfig {\n    // ...\n    @Bean\n    public RabbitTransactionManager rabbitTransactionManager(ConnectionFactory connectionFactory, RabbitTemplate rabbitTemplate) {\n        rabbitTemplate.setChannelTransacted(true);\n        return new RabbitTransactionManager(connectionFactory);\n    }\n}\n")),(0,l.kt)("h3",{id:"48-\u6d88\u606f\u5f02\u5e38\u5904\u7406\u5668"},"4.8 \u6d88\u606f\u5f02\u5e38\u5904\u7406\u5668"),(0,l.kt)("h4",{id:"\u4ecb\u7ecd-4"},"\u4ecb\u7ecd"),(0,l.kt)("p",null,"Spring AMQP \u9664\u4e86\u63d0\u4f9b\u6d88\u606f\u91cd\u8bd5\u673a\u5236\u5916\uff0c\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6d88\u8d39\u5f02\u5e38\u65f6\u7684\u5904\u7406\u5668\uff0c\u76ee\u524d\u6709\u4e24\u4e2a\u63a5\u53e3\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"org.springframework.amqp.rabbit.listener.api.RabbitListenerErrorHandler")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"org.springframework.util.ErrorHandler"))),(0,l.kt)("h4",{id:"rabbitlistenererrorhandler\u914d\u7f6e"},(0,l.kt)("inlineCode",{parentName:"h4"},"RabbitListenerErrorHandler"),"\u914d\u7f6e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Slf4j\n@Component\npublic class MyRabbitListenerErrorHandler implements RabbitListenerErrorHandler {\n    @Override\n    public Object handleError(\n        org.springframework.amqp.core.Message amqpMessage,\n        org.springframework.messaging.Message<?> message,\n        ListenerExecutionFailedException exception\n    ) throws Exception {\n        log.error(\"[handleError] amqpMessage='{}' message='{}'\", amqpMessage, message);\n        return null;\n    }\n}\n")),(0,l.kt)("h4",{id:"errorhandler-\u914d\u7f6e"},(0,l.kt)("inlineCode",{parentName:"h4"},"ErrorHandler")," \u914d\u7f6e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@Slf4j\n@Component\npublic class MyRabbitListenerErrorHandler implements ErrorHandler {\n    public MyErrorHandler(SimpleRabbitListenerContainerFactory rabbitListenerContainerFactory) {\n        rabbitListenerContainerFactory.setErrorHandler(this);\n    }\n    @Override\n    public void handleError(Throwable t) {\n        log.error("[handleError] {}", t.getMessage());\n    }\n}\n')),(0,l.kt)("h2",{id:"\u4e94\u6d88\u606f\u5e94\u7b54"},"\u4e94\u3001\u6d88\u606f\u5e94\u7b54"),(0,l.kt)("h3",{id:"51-\u6982\u5ff5"},"5.1 \u6982\u5ff5"),(0,l.kt)("p",null,"\u6d88\u8d39\u8005\u5b8c\u6210\u4e00\u4e2a\u4efb\u52a1\u53ef\u80fd\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u6d88\u8d39\u8005\u5904\u7406\u4e00\u4e2a\u957f\u7684\u4efb\u52a1\u4f46\u662f\u53ea\u5b8c\u6210\u4e86\u90e8\u5206\u7a81\u7136\u6302\u6389\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f"),(0,l.kt)("p",null,"RabbitMQ \u4e00\u65e6\u5411\u6d88\u8d39\u8005\u4f20\u9012\u4e86\u4e00\u6761\u6d88\u606f\uff0c\u4fbf\u7acb\u5373\u5c06\u8be5\u6d88\u606f\u6807\u8bb0\u4e3a\u5220\u9664\u3002\u8fd9\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7a81\u7136\u6709\u4e2a\u6d88\u8d39\u8005\u6302\u6389\u4e86\uff0c\u6211\u4eec\u5c06\u4e22\u5931\u6b63\u5728\u5904\u7406\u7684\u6d88\u606f\uff0c\u4ee5\u53ca\u540e\u7eed\u53d1\u9001\u7ed9\u8be5\u6d88\u8d39\u8005\u7684\u6d88\u606f\uff0c\u56e0\u4e3a\u8be5\u6d88\u8d39\u8005\u65e0\u6cd5\u63a5\u6536\u5230\u3002"),(0,l.kt)("p",null,"\u4e3a\u4e86\u4fdd\u8bc1\u6d88\u606f\u5728\u53d1\u9001\u8fc7\u7a0b\u4e2d\u4e0d\u4e22\u5931\uff0cRabbitMQ \u5f15\u5165\u6d88\u606f\u5e94\u7b54\u673a\u5236\uff1a\u6d88\u8d39\u8005\u5728\u63a5\u6536\u5230\u6d88\u606f\u5e76\u4e14\u5904\u7406\u6389\u6d88\u606f\u4e4b\u540e\uff0c\u544a\u8bc9 RabbitMQ \u5b83\u5df2\u7ecf\u5904\u7406\u4e86\uff0cRabbitMQ \u53ef\u4ee5\u628a\u8be5\u6d88\u606f\u5220\u9664\u4e86\u3002"),(0,l.kt)("h3",{id:"52-\u81ea\u52a8\u5e94\u7b54"},"5.2 \u81ea\u52a8\u5e94\u7b54"),(0,l.kt)("p",null,"\u6d88\u606f\u53d1\u9001\u540e\u7acb\u5373\u88ab\u8ba4\u4e3a\u5df2\u7ecf\u4f20\u9001\u6210\u529f\uff0c\u8fd9\u79cd\u6a21\u5f0f\u9700\u8981\u5728\u9ad8\u541e\u5410\u91cf\u548c\u6570\u636e\u4f20\u8f93\u5b89\u5168\u6027\u65b9\u9762\u505a\u6743\u8861\uff0c\u56e0\u4e3a\u8fd9\u79cd\u6a21\u5f0f\u5982\u679c\u6d88\u606f\u5728\u63a5\u6536\u5230\u4e4b\u524d\uff0c\u6d88\u8d39\u8005\u90a3\u8fb9\u51fa\u73b0 Connection \u6216 Channel \u5173\u95ed\uff0c\u90a3\u4e48\u6d88\u606f\u5c31\u4e22\u5931\u4e86\u3002"),(0,l.kt)("p",null,"\u53e6\u4e00\u65b9\u9762\u8fd9\u79cd\u6a21\u5f0f\u6d88\u8d39\u8005\u90a3\u8fb9\u53ef\u4ee5\u4f20\u9012\u8fc7\u8f7d\u7684\u6d88\u606f\uff0c\u6ca1\u6709\u5bf9\u4f20\u9012\u7684\u6d88\u606f\u6570\u91cf\u8fdb\u884c\u6d88\u606f\uff0c\u8fd9\u6837\u6709\u53ef\u80fd\u4f7f\u5f97\u6d88\u8d39\u8005\u8fd9\u8fb9\u7531\u4e8e\u63a5\u6536\u592a\u591a\u8fd8\u6765\u4e0d\u53ca\u5904\u7406\u7684\u6d88\u606f\uff0c\u5bfc\u81f4\u8fd9\u4e9b\u6d88\u606f\u7684\u79ef\u538b\uff0c\u6700\u7ec8\u4f7f\u5f97\u5185\u5b58\u8017\u5c3d\uff0c\u6700\u7ec8\u8fd9\u4e9b\u6d88\u8d39\u8005\u7ebf\u7a0b\u88ab\u64cd\u4f5c\u7cfb\u7edf\u6740\u6b7b\u3002"),(0,l.kt)("p",null,"\u6240\u4ee5\u8fd9\u79cd\u6a21\u5f0f\u4ec5\u9002\u7528\u5728\u6d88\u8d39\u8005\u53ef\u4ee5\u9ad8\u6548\u5e76\u4ee5\u67d0\u79cd\u901f\u7387\u80fd\u591f\u5904\u7406\u8fd9\u4e9b\u6d88\u606f\u7684\u60c5\u51b5\u4e0b\u9002\u7528\u3002"),(0,l.kt)("h3",{id:"53-\u624b\u52a8\u5e94\u7b54"},"5.3 \u624b\u52a8\u5e94\u7b54"),(0,l.kt)("h4",{id:"\u6d88\u606f\u5e94\u7b54\u65b9\u6cd5"},"\u6d88\u606f\u5e94\u7b54\u65b9\u6cd5"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Channel.basicAck()")," \uff1a\u80af\u5b9a\u786e\u8ba4\uff08\u652f\u6301\u6279\u91cf\uff09"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Channel.basicNack()"),"\uff1a\u5426\u5b9a\u786e\u8ba4"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Channel.basicReject()"),"\uff1a\u5426\u5b9a\u786e\u8ba4\uff08\u652f\u6301\u6279\u91cf\uff09")),(0,l.kt)("h4",{id:"\u6279\u91cf\u5e94\u7b54"},"\u6279\u91cf\u5e94\u7b54"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/5f966e865d364662adca0459bf632a88.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,l.kt)("p",null,"\u624b\u52a8\u5e94\u7b54\u7684\u597d\u5904\u662f\u53ef\u4ee5\u6279\u91cf\u5e94\u7b54\u5e76\u4e14\u51cf\u5c11\u7f51\u7edc\u62e5\u5835\u3002",(0,l.kt)("inlineCode",{parentName:"p"},"multiple")," \u8868\u793a\u662f\u5426\u4e00\u6b21\u6027\u5e94\u7b54\u5f53\u524d Tag \u53ca\u5176\u4e4b\u524d\u6240\u6709\u5c1a\u672a\u5e94\u7b54\u7684\u6d88\u606f\u3002"),(0,l.kt)("p",null,"\u6bd4\u5982 Channel \u4e0a\u7684\u6d88\u606f\u7684 Tag \u5206\u522b\u4e3a 5\u30016\u30017\u30018\uff0c\u5f53\u524d Tag \u4e3a 8\uff0c\u90a3\u4e48 ",(0,l.kt)("inlineCode",{parentName:"p"},"multiple = true")," \u8868\u793a\u6b64\u65f6 Tag \u4e3a 5 \u5230 8 \u7684\u8fd9\u4e9b\u8fd8\u672a\u5e94\u7b54\u7684\u6d88\u606f\u90fd\u4f1a\u88ab\u786e\u8ba4\u5e94\u7b54\uff1b",(0,l.kt)("inlineCode",{parentName:"p"},"multiple = false")," \u5219\u8868\u793a\u4ec5 Tag \u4e3a 8 \u7684\u6d88\u606f\u4f1a\u88ab\u786e\u8ba4\u5e94\u7b54\u3002"),(0,l.kt)("h4",{id:"\u6d88\u606f\u81ea\u52a8\u91cd\u65b0\u5165\u961f"},"\u6d88\u606f\u81ea\u52a8\u91cd\u65b0\u5165\u961f"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/a6253594a9464b9e8de9aa3b452a9c50.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,l.kt)("p",null,"\u5982\u679c\u6d88\u8d39\u8005\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\u5931\u53bb\u8fde\u63a5\uff08\u901a\u8fc7\u5173\u95ed\u3001\u8fde\u63a5\u5173\u95ed\u7b49\uff09\uff0c\u5bfc\u81f4\u6d88\u606f\u4e3a\u53d1\u9001 ACK \u786e\u8ba4\uff0cRabbitMQ \u5c06\u4e86\u89e3\u5230\u6d88\u606f\u672a\u5b8c\u6210\u5904\u7406\uff0c\u5e76\u5c06\u5176\u91cd\u65b0\u6392\u961f\u3002\u5982\u679c\u6b64\u65f6\u5176\u5b83\u6d88\u8d39\u8005\u53ef\u4ee5\u5904\u7406\uff0c\u5b83\u5c06\u5f88\u5feb\u5c06\u5176\u5206\u53d1\u7ed9\u53e6\u4e00\u4e2a\u6d88\u8d39\u8005\u3002\u8fd9\u6837\u5373\u4f7f\u6d88\u8d39\u8005\u5076\u5c14\u6b7b\u4ea1\uff0c\u4e5f\u53ef\u4ee5\u786e\u8ba4\u4e0d\u4f1a\u4e22\u5931\u4efb\u4f55\u6d88\u606f\u3002"),(0,l.kt)("h2",{id:"\u516d\u5de5\u4f5c\u961f\u5217"},"\u516d\u3001\u5de5\u4f5c\u961f\u5217"),(0,l.kt)("h3",{id:"61-\u6982\u5ff5"},"6.1 \u6982\u5ff5"),(0,l.kt)("p",null,"\u5f53\u6709\u591a\u4e2a\u6d88\u8d39\u8005\u65f6\uff0c\u6211\u4eec\u7684\u6d88\u606f\u4f1a\u88ab\u54ea\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39\u5462\uff1f\u6211\u4eec\u53c8\u8be5\u5982\u4f55\u5747\u8861\u6d88\u8d39\u8005\u6d88\u606f\u7684\u591a\u5c11\u5462\uff1f"),(0,l.kt)("h3",{id:"62-\u8f6e\u8be2\u5206\u53d1"},"6.2 \u8f6e\u8be2\u5206\u53d1"),(0,l.kt)("p",null,"\u4e00\u4e2a\u6d88\u8d39\u8005\u4e00\u6761\uff0c\u6309\u5747\u5206\u53d1\u3002"),(0,l.kt)("p",null,"\u8f6e\u8be2\u5206\u53d1\u7b56\u7565\u5728\u67d0\u79cd\u573a\u666f\u4e0b\u5e76\u4e0d\u662f\u5f88\u597d\uff0c\u6bd4\u5982\u6709\u4e24\u4e2a\u6d88\u8d39\u8005\u5728\u5904\u7406\u4efb\u52a1\uff0c\u5176\u4e2d\u6709\u4e2a\u6d88\u8d39\u8005\u5904\u7406\u4efb\u52a1\u7684\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u800c\u53e6\u5916\u4e00\u4e2a\u6d88\u8d39\u8005\u5904\u7406\u901f\u5ea6\u5374\u5f88\u6162\uff0c\u8fd9\u4e2a\u65f6\u5019\u5982\u679c\u8fd8\u91c7\u7528\u8f6e\u8be2\u5206\u53d1\u7b56\u7565\uff0c\u90a3\u4e48\u5c31\u4f1a\u9020\u6210\u5904\u7406\u901f\u5ea6\u5feb\u7684\u6d88\u8d39\u8005\u5f88\u5927\u4e00\u90e8\u5206\u65f6\u95f4\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\uff0c\u800c\u5904\u7406\u6162\u7684\u90a3\u4e2a\u6d88\u8d39\u8005\u4e00\u76f4\u5728\u5e72\u6d3b\u3002"),(0,l.kt)("h3",{id:"63-\u516c\u5e73\u5206\u53d1"},"6.3 \u516c\u5e73\u5206\u53d1"),(0,l.kt)("p",null,"\u6839\u636e\u6d88\u8d39\u8005\u7684\u6d88\u8d39\u80fd\u529b\u8fdb\u884c\u5206\u53d1\uff0c\u5904\u7406\u5feb\u7684\u5904\u7406\u7684\u591a\uff0c\u5904\u7406\u6162\u7684\u5904\u7406\u7684\u5c11\u3002"),(0,l.kt)("h3",{id:"64-\u9884\u53d6\u6570"},"6.4 \u9884\u53d6\u6570"),(0,l.kt)("p",null,"\u672c\u8eab\u6d88\u606f\u7684\u53d1\u9001\u5c31\u662f\u5f02\u6b65\u53d1\u9001\u7684\uff0c\u6240\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\uff0cChannel \u4e0a\u80af\u5b9a\u4e0d\u6b62\u53ea\u6709\u4e00\u4e2a\u6d88\u606f\uff0c\u53e6\u5916\u6d88\u8d39\u8005\u7684\u624b\u52a8\u5e94\u7b54\u672c\u8d28\u4e0a\u4e5f\u662f\u5f02\u6b65\u7684\uff0c\u56e0\u6b64\u8fd9\u91cc\u5c31\u5b58\u5728\u4e00\u4e2a\u672a\u786e\u8ba4\u7684\u7f13\u51b2\u533a\uff0c\u56e0\u6b64\u9700\u8981\u9650\u5236\u6b64\u7f13\u51b2\u533a\u7684\u5927\u5c0f\uff0c\u4ee5\u907f\u514d\u7f13\u51b2\u533a\u91cc\u9762\u65e0\u9650\u5236\u7684\u672a\u786e\u8ba4\u6d88\u606f\u95ee\u9898\u3002"),(0,l.kt)("p",null,"\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"p"},"Channel.basicQos()")," \u65b9\u6cd5\u8bbe\u7f6e \u201c\u9884\u53d6\u6570\u201d\uff0c\u8be5\u503c\u5b9a\u4e49\u901a\u9053\u4e0a\u5141\u8bb8\u7684\u672a\u5904\u7406\u7684\u6d88\u606f\u6700\u5927\u6570\u91cf\u3002\u4e00\u65e6\u8fbe\u5230\u4e0e\u914d\u7f6e\u7684\u6570\u91cf\uff0cRabbitMQ \u5c06\u505c\u6b62\u5728\u901a\u9053\u4e0a\u4f20\u9012\u66f4\u591a\u6d88\u606f\uff0c\u9664\u975e\u81f3\u5c11\u6709\u4e00\u4e2a\u672a\u5904\u7406\u7684\u6d88\u606f\u88ab\u786e\u8ba4\u3002"),(0,l.kt)("p",null,"\u6d88\u606f\u5e94\u7b54\u548c QoS \u9884\u53d6\u6570\u5bf9\u7528\u6237\u541e\u5410\u91cf\u6709\u91cd\u5927\u5f71\u54cd\u3002\u901a\u5e38\u589e\u52a0\u9884\u53d6\u6570\u5c06\u63d0\u9ad8\u5411\u6d88\u8d39\u8005\u4f20\u9012\u6d88\u606f\u7684\u901f\u5ea6\u3002\u867d\u7136\u81ea\u52a8\u5e94\u7b54\u4f20\u8f93\u6d88\u606f\u901f\u5ea6\u662f\u6700\u4f73\u7684\uff0c\u4f46\u662f\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5df2\u4f20\u9012\u4f46\u5c1a\u672a\u5904\u7406\u7684\u6d88\u606f\u7684\u6570\u91cf\u4e5f\u4f1a\u589e\u52a0\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u6d88\u8d39\u8005\u7684\u5185\u5b58\u6d88\u8017\uff08\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668\uff09\u3002"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/99e2c2b31b164975b20c94f61aefdeb7.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"int prefetchCount = 1;\nchannel.basicQos(prefetchCount);\n")),(0,l.kt)("p",null,"\u8868\u793a\u5982\u679c\u8fd9\u4e2a\u4efb\u52a1\u6211\u8fd8\u6ca1\u6709\u5904\u7406\u5b8c\u6216\u8005\u6211\u6ca1\u6ca1\u6709\u5e94\u7b54\u4f60\uff0c\u4f60\u5148\u522b\u5206\u914d\u7ed9\u6211\uff0c\u6211\u76ee\u524d\u53ea\u80fd\u5904\u7406\u4e00\u4e2a\u4efb\u52a1\uff0c\u7136\u540e RabbitMQ \u5c31\u4f1a\u628a\u4efb\u52a1\u5206\u914d\u7ed9\u6ca1\u6709\u90a3\u4e48\u5fd9\u7684\u7a7a\u95f2\u6d88\u8d39\u8005\u3002\u5f53\u7136\u5982\u679c\u6240\u6709\u7684\u6d88\u8d39\u8005\u90fd\u6ca1\u6709\u5b8c\u6210\u624b\u4e0a\u4efb\u52a1\uff0c\u961f\u5217\u8fd8\u5728\u4e0d\u505c\u7684\u6dfb\u52a0\u65b0\u4efb\u52a1\uff0c\u961f\u5217\u6709\u53ef\u80fd\u4f1a\u9047\u5230\u88ab\u6491\u6ee1\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ea\u80fd\u6dfb\u52a0\u65b0\u7684\u6d88\u8d39\u8005\u6216\u8005\u6539\u53d8\u5176\u5b58\u50a8\u4efb\u52a1\u7684\u7b56\u7565\u3002"),(0,l.kt)("h2",{id:"\u4e03rabbitmq-\u6301\u4e45\u5316"},"\u4e03\u3001RabbitMQ \u6301\u4e45\u5316"),(0,l.kt)("h3",{id:"71-\u6982\u5ff5"},"7.1 \u6982\u5ff5"),(0,l.kt)("p",null,"\u6211\u4eec\u5728 \u3010\u6d88\u606f\u5e94\u7b54\u673a\u5236\u3011\u4e2d\u4e86\u89e3\u4e86\u5982\u4f55\u5904\u7406\u4efb\u52a1\u4e0d\u4e22\u5931\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u5982\u679c\u62a5\u8d26\u5f53 RabbitMQ \u670d\u52a1\u505c\u6389\u4ee5\u540e\u6d88\u606f\u751f\u4ea7\u8005\u53d1\u9001\u8fc7\u6765\u7684\u6d88\u606f\u4e0d\u4e22\u5931\uff1f"),(0,l.kt)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b RabbitMQ \u9000\u51fa\u6216\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u5d29\u6e83\u65f6\uff0c\u5b83\u5c06\u5ffd\u89c6\u961f\u5217\u548c\u6d88\u606f\uff0c\u9664\u975e\u544a\u77e5\u5b83\u4e0d\u8981\u8fd9\u6837\u505a\u3002\u786e\u4fdd\u6d88\u606f\u4e0d\u4f1a\u4e22\u5931\u9700\u8981\u5c06\u961f\u5217\u548c\u6d88\u606f\u90fd\u6807\u8bb0\u4e3a\u6301\u4e45\u5316\u3002"),(0,l.kt)("h3",{id:"72-\u961f\u5217\u6301\u4e45\u5316"},"7.2 \u961f\u5217\u6301\u4e45\u5316"),(0,l.kt)("p",null,"\u975e\u6301\u4e45\u5316\u7684\u961f\u5217\u5728 RabbitMQ \u91cd\u542f\u540e\u4f1a\u88ab\u81ea\u52a8\u5220\u9664\u6389\uff0c\u5982\u679c\u8981\u961f\u5217\u6301\u4e45\u5316\uff0c\u9700\u8981\u5728\u58f0\u660e\u961f\u5217\u7684\u65f6\u5019\u628a ",(0,l.kt)("inlineCode",{parentName:"p"},"durable")," \u53c2\u6570\u8bbe\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"channel.queueDeclare(queue, true, exclusive, autoDelete, arguments);\n")),(0,l.kt)("p",null,"\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\u5982\u679c\u4e4b\u524d\u58f0\u660e\u7684\u961f\u5217\u4e0d\u662f\u6301\u4e45\u5316\u7684\uff0c\u9700\u8981\u628a\u539f\u5148\u961f\u5217\u5148\u5220\u9664\u3002"),(0,l.kt)("h3",{id:"73-\u6d88\u606f\u6301\u4e45\u5316"},"7.3 \u6d88\u606f\u6301\u4e45\u5316"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"channel.basicPublish(exchange, routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, body.getBytes());\n")),(0,l.kt)("p",null,"\u5c06\u6d88\u606f\u6807\u8bb0\u4e3a\u6301\u4e45\u5316\u5e76\u4e0d\u80fd\u5b8c\u5168\u62a5\u8d26\u4e0d\u4f1a\u4e22\u5931\u6d88\u606f\u3002\u5c3d\u7ba1\u5b83\u544a\u8bc9 RabbitMQ \u5c06\u6d88\u606f\u4fdd\u5b58\u5230\u78c1\u76d8\uff0c\u4f46\u662f\u8fd9\u91cc\u4f9d\u7136\u5b58\u5728\u5f53\u6d88\u606f\u521a\u51c6\u5907\u5b58\u50a8\u5728\u78c1\u76d8\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u5b58\u50a8\u5b8c\u7684\u65f6\u5019\uff0c\u6d88\u606f\u8fd8\u5728\u7f13\u5b58\u7684\u4e00\u4e2a\u95f4\u9694\u70b9\u3002\u6b64\u65f6\u5e76\u6ca1\u6709\u771f\u6b63\u5199\u5165\u78c1\u76d8\u3002\u6301\u4e45\u5316\u4fdd\u8bc1\u5e76\u4e0d\u5f3a\uff0c\u4f46\u662f\u5bf9\u4e8e\u7b80\u5355\u7684\u4efb\u52a1\u961f\u5217\u800c\u8a00\uff0c\u8fd9\u5df2\u7ecf\u7ef0\u7ef0\u6709\u4f59\u4e86\u3002"),(0,l.kt)("p",null,"\u5bf9\u4e8e\u66f4\u5f3a\u6709\u529b\u7684\u6301\u4e45\u5316\u7b56\u7565\uff0c\u4f1a\u5728\u3010\u53d1\u5e03\u786e\u8ba4\u3011\u7ae0\u8282\u8bf4\u660e\u3002"),(0,l.kt)("h2",{id:"\u516b\u4e8b\u52a1\u673a\u5236"},"\u516b\u3001\u4e8b\u52a1\u673a\u5236"),(0,l.kt)("h3",{id:"81-\u6982\u5ff5"},"8.1 \u6982\u5ff5"),(0,l.kt)("p",null,"\u5728\u4f7f\u7528 RabbitMQ \u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6d88\u606f\u6301\u4e45\u5316\u64cd\u4f5c\u6765\u89e3\u51b3\u56e0\u4e3a\u670d\u52a1\u5668\u7684\u5f02\u5e38\u5954\u6e83\u5bfc\u81f4\u7684\u6d88\u606f\u4e22\u5931\uff0c\u9664\u6b64\u4e4b\u5916\u6211\u4eec\u8fd8\u4f1a\u9047\u5230\u4e00\u4e2a\u95ee\u9898\uff0c\u5f53\u6d88\u606f\u7684\u53d1\u5e03\u8005\u5728\u5c06\u6d88\u606f\u53d1\u9001\u51fa\u53bb\u4e4b\u540e\uff0c\u6d88\u606f\u5230\u5e95\u6709\u6ca1\u6709\u6b63\u786e\u5230\u8fbe Broker \u670d\u52a1\u5668\u5462\uff1f"),(0,l.kt)("p",null,"\u5982\u679c\u4e0d\u8fdb\u884c\u7279\u6b8a\u914d\u7f6e\u7684\u8bdd\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53d1\u5e03\u64cd\u4f5c\u662f\u4e0d\u4f1a\u8fd4\u56de\u4efb\u4f55\u6d88\u606f\u7ed9\u751f\u4ea7\u8005\u7684\uff0c\u4e5f\u5c31\u662f\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6211\u4eec\u7684\u751f\u4ea7\u8005\u662f\u4e0d\u77e5\u9053\u6d88\u606f\u6709\u6ca1\u6709\u6b63\u786e\u5230\u8fbe Broker \u7684\uff0c\u5982\u679c\u6d88\u606f\u5230\u8fbe Broker \u4e4b\u524d\u5df2\u7ecf\u4e22\u5931\u7684\u8bdd\uff0c\u6301\u4e45\u5316\u64cd\u4f5c\u4e5f\u89e3\u51b3\u4e0d\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u6d88\u606f\u6839\u672c\u6ca1\u5230\u8fbe Broker\u3002"),(0,l.kt)("p",null,"RabbitMQ \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u901a\u8fc7 AMQP \u4e8b\u52a1\u673a\u5236\u5b9e\u73b0\uff0c\u8fd9\u4e5f\u662f AMQP \u534f\u8bae\u5c42\u9762\u63d0\u4f9b\u7684\u89e3\u51b3\u65b9\u6848\uff1b"),(0,l.kt)("li",{parentName:"ol"},"\u901a\u8fc7\u8bb2\u53d1\u5e03\u786e\u8ba4\u673a\u5236\u6765\u5b9e\u4e60\uff1b")),(0,l.kt)("h3",{id:"82-\u4ecb\u7ecd"},"8.2 \u4ecb\u7ecd"),(0,l.kt)("p",null,"RabbitMQ \u5185\u7f6e\u63d0\u4f9b\u4e8b\u52a1\u6d88\u606f\u7684\u652f\u6301\uff0c\u4e0d\u8fc7 RabbitMQ \u63d0\u4f9b\u7684\u5e76\u4e0d\u662f\u5b8c\u6574\u7684\u4e8b\u52a1\u6d88\u606f\u7684\u652f\u6301\uff0c\u7f3a\u5c11\u4e86\u56de\u67e5\u673a\u5236\u3002"),(0,l.kt)("p",null,"RabbitMQ \u4e2d\u4e0e\u4e8b\u52a1\u673a\u5236\u6709\u5173\u7684\u65b9\u6cd5\u6709\u4e09\u4e2a\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"channel.txSelect()"),"\uff1a\u7528\u4e8e\u5c06\u5f53\u524d Channel \u8bbe\u7f6e\u6210 Transaction \u6a21\u5f0f\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"channel.txCommit()"),"\uff1a\u7528\u4e8e\u63d0\u4ea4\u4e8b\u52a1\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"channel.txRollback()"),"\uff1a\u7528\u4e8e\u56de\u6eda\u4e8b\u52a1\u3002")),(0,l.kt)("h3",{id:"82-\u5173\u952e\u4ee3\u7801"},"8.2 \u5173\u952e\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"channel.txSelect();\nchannel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());\nchannel.txCommit();\n")),(0,l.kt)("h3",{id:"83-\u95ee\u9898"},"8.3 \u95ee\u9898"),(0,l.kt)("p",null,"\u4e8b\u52a1\u786e\u5b9e\u80fd\u591f\u89e3\u51b3 Producer \u548c Broker \u4e4b\u95f4\u6d88\u606f\u786e\u8ba4\u7684\u95ee\u9898\uff0c\u53ea\u6709\u6d88\u606f\u6210\u529f\u88ab Broker \u63a5\u6536\uff0c\u4e8b\u52a1\u63d0\u4ea4\u624d\u80fd\u6210\u529f\uff0c\u5426\u5219\u6211\u4eec\u4fbf\u53ef\u4ee5\u5728\u6355\u83b7\u5f02\u5e38\u5f02\u5e38\u8fdb\u884c\u4e8b\u52a1\u56de\u6eda\uff0c\u540c\u65f6\u8fdb\u884c\u6d88\u606f\u91cd\u53d1\u3002"),(0,l.kt)("p",null,"\u4f46\u662f\u4f7f\u7528\u4e8b\u52a1\u673a\u5236\u7684\u8bdd\u4f1a\u964d\u4f4e RabbitMQ \u7684\u6027\u80fd\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u65e2\u80fd\u4fdd\u969c Producer \u77e5\u9053\u6d88\u606f\u5df2\u7ecf\u6b63\u786e\u53d1\u9001\u5230 Broker\uff0c\u53c8\u80fd\u57fa\u672c\u4e0a\u4e0d\u5e26\u6765\u6027\u80fd\u4e0a\u7684\u635f\u5931\u5462\uff1f"),(0,l.kt)("p",null,"\u4ece AMQP \u534f\u8bae\u7684\u5c42\u9762\u770b\u662f\u6ca1\u6709\u66f4\u597d\u7684\u529e\u6cd5\uff0c\u4f46\u662f RabbitMQ \u63d0\u4f9b\u4e86\u4e00\u4e2a\u66f4\u597d\u7684\u65b9\u6848\uff0c\u5373\u5c06 Channel \u8bbe\u7f6e\u4e3a \u53d1\u5e03\u786e\u8ba4\u6a21\u5f0f\u3002"),(0,l.kt)("h2",{id:"\u4e5d\u53d1\u5e03\u786e\u8ba4\u673a\u5236"},"\u4e5d\u3001\u53d1\u5e03\u786e\u8ba4\u673a\u5236"),(0,l.kt)("h3",{id:"91-\u6982\u5ff5"},"9.1 \u6982\u5ff5"),(0,l.kt)("p",null,"\u751f\u4ea7\u8005\u5c06\u901a\u9053\u8bbe\u4e3a Confirm \u6a21\u5f0f\uff0c\u6240\u6709\u5728\u8be5\u901a\u9053\u4e0a\u53d1\u5e03\u7684\u6d88\u606f\u90fd\u4f1a\u88ab\u6307\u6d3e\u4e00\u4e2a\u552f\u4e00\u7684 ID\uff0c\u6d88\u606f\u88ab\u6295\u9012\u5230\u6240\u6709\u5339\u914d\u7684\u961f\u5217\u4e4b\u540e\uff0cBroker \u5c31\u4f1a\u53d1\u9001\u4e00\u4e2a\u786e\u8ba4\u7ed9\u751f\u4ea7\u8005\uff08\u5305\u542b\u6d88\u606f\u7684\u552f\u4e00 ID\uff09\u3002"),(0,l.kt)("p",null,"\u8fd9\u5c31\u4f7f\u5f97\u751f\u4ea7\u8005\u77e5\u9053\u6d88\u606f\u5df2\u7ecf\u6b63\u786e\u5230\u8fbe\u76ee\u7684\u961f\u5217\u4e86\uff0c\u5982\u679c\u6d88\u606f\u548c\u961f\u5217\u662f\u6301\u4e45\u5316\u7684\uff0c\u90a3\u4e48\u786e\u8ba4\u6d88\u606f\u4f1a\u5728\u6d88\u606f\u5199\u5165\u78c1\u76d8\u4e4b\u540e\u53d1\u51fa\uff0cBroker \u56de\u4f20\u7ed9\u751f\u4ea7\u8005\u7684\u786e\u8ba4\u6d88\u606f\u4e2d\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"deliveryTag")," \u5305\u542b\u4e86\u786e\u8ba4\u6d88\u606f\u7684\u5e8f\u5217\u53f7\uff0c\u6b64\u5916 Broker \u4e5f\u53ef\u4ee5\u8bbe\u7f6e ",(0,l.kt)("inlineCode",{parentName:"p"},"multiple")," \u8868\u793a\u5230\u8fd9\u4e2a\u5e8f\u5217\u53f7\u4e4b\u524d\u7684\u6240\u6709\u6d88\u606f\u90fd\u5df2\u7ecf\u5f97\u5230\u4e86\u5904\u7406\u3002"),(0,l.kt)("p",null,"Confirm \u6a21\u5f0f\u6700\u5927\u7684\u597d\u5904\u5728\u4e8e\u5b83\u662f\u5f02\u6b65\u7684\uff0c\u4e00\u65e6\u53d1\u5e03\u4e00\u6761\u6d88\u606f\uff0c\u751f\u4ea7\u8005\u5e94\u7528\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u5728\u7b49\u5f85\u901a\u9053\u8fd4\u56de\u786e\u8ba4\u7684\u540c\u65f6\u7ee7\u7eed\u53d1\u9001\u4e0b\u4e00\u6761\u6d88\u606f\uff0c\u5f53\u6d88\u606f\u6700\u7ec8\u5f97\u5230\u786e\u8ba4\u4e4b\u540e\uff0c\u751f\u4ea7\u8005\u5e94\u7528\u7a0b\u5e8f\u4fbf\u53ef\u4ee5\u901a\u8fc7\u56de\u8c03\u65b9\u6cd5\u6765\u5904\u7406\u8be5\u786e\u8ba4\u6d88\u606f\uff0c\u5982\u679c RabbitMQ \u56e0\u4e3a\u81ea\u8eab\u5185\u90e8\u9519\u8bef\u5bfc\u81f4\u6d88\u606f\u4e22\u5931\uff0c\u4e5f\u4f1a\u53d1\u9001\u4e00\u6761 Nack \u6d88\u606f\uff0c\u751f\u4ea7\u8005\u5e94\u7528\u7a0b\u5e8f\u540c\u6837\u53ef\u4ee5\u5728\u56de\u8c03\u65b9\u6cd5\u4e2d\u5904\u7406\u8be5 Nack \u6d88\u606f\u3002"),(0,l.kt)("h3",{id:"92-mandatory-\u53c2\u6570"},"9.2 ",(0,l.kt)("inlineCode",{parentName:"h3"},"mandatory")," \u53c2\u6570"),(0,l.kt)("p",null,"\u5728\u4ec5\u5f00\u542f\u4e86\u751f\u4ea7\u8005\u786e\u8ba4\u673a\u5236\u7684\u60c5\u51b5\u4e0b\uff0c\u4ea4\u6362\u673a\u6536\u5230\u6d88\u606f\u540e\uff0c\u4f1a\u76f4\u63a5\u7ed9\u6d88\u606f\u751f\u4ea7\u8005\u53d1\u9001\u786e\u8ba4\u6d88\u606f\uff0c\u5982\u679c\u53d1\u73b0\u8be5\u6d88\u606f\u4e0d\u53ef\u8def\u7531\uff0c\u90a3\u4e48\u6d88\u606f\u4f1a\u88ab\u76f4\u63a5\u4e22\u5f03\uff0c\u6b64\u65f6\u751f\u4ea7\u8005\u662f\u4e0d\u77e5\u9053\u6d88\u606f\u88ab\u4e22\u5f03\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u3002\u90a3\u4e48\u5982\u679c\u8ba9\u751f\u4ea7\u8005\u77e5\u9053\u65e0\u6cd5\u88ab\u8def\u7531\u7684\u6d88\u606f\u5462\uff1f"),(0,l.kt)("p",null,"\u901a\u8fc7\u8bbe\u7f6e ",(0,l.kt)("inlineCode",{parentName:"p"},"mandatory")," \u53c2\u6570\u53ef\u4ee5\u5728\u5f53\u6d88\u606f\u4f20\u9012\u8fc7\u7a0b\u4e2d\u4e0d\u53ef\u8fbe\u5230\u76ee\u7684\u5730\u65f6\u5c06\u6d88\u606f\u8fd4\u56de\u7ed9\u751f\u4ea7\u8005\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'boolean mandatory = true;\nchannel.basicPublish(EXCHANGE, ROUTING_KEY, mandatory, null, "Hello World".getBytes());\nchannel.addReturnListener(returnMessage -> {\n    String replyText = returnMessage.getReplyText();\n    String exchange = returnMessage.getExchange();\n    String routingKey = returnMessage.getRoutingKey();\n    AMQP.BasicProperties properties = returnMessage.getProperties();\n    String body = new String(returnMessage.getBody());\n});\n')),(0,l.kt)("h3",{id:"93-\u5907\u4efd\u4ea4\u6362\u673a"},"9.3 \u5907\u4efd\u4ea4\u6362\u673a"),(0,l.kt)("p",null,"\u6709\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"mandatory")," \u53c2\u6570\u548c\u6d88\u606f\u56de\u9000\uff0c\u6211\u4eec\u83b7\u5f97\u4e86\u5bf9\u65e0\u6cd5\u6295\u9012\u6d88\u606f\u7684\u611f\u77e5\u80fd\u529b\uff0c\u6709\u673a\u4f1a\u5728\u751f\u4ea7\u8005\u65e0\u6cd5\u88ab\u6295\u9012\u65f6\u53d1\u73b0\u5e76\u5904\u7406\u3002\u4f46\u6709\u65f6\u5019\uff0c\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u5982\u4f55\u5904\u7406\u8fd9\u4e9b\u65e0\u6cd5\u8def\u7531\u7684\u6d88\u606f\uff0c\u6700\u591a\u6253\u4e2a\u65e5\u5fd7\uff0c\u7136\u540e\u89e6\u53d1\u8b66\u544a\uff0c\u518d\u6765\u624b\u52a8\u5904\u7406\u3002"),(0,l.kt)("p",null,"\u901a\u8fc7\u65e5\u5fd7\u5904\u7406\u8fd9\u4e9b\u65e0\u6cd5\u8def\u7531\u7684\u6d88\u606f\u662f\u5f88\u4e0d\u4f18\u96c5\u7684\u505a\u6cd5\uff0c\u7279\u522b\u662f\u5f53\u751f\u4ea7\u8005\u6240\u5728\u7684\u670d\u52a1\u6709\u591a\u53f0\u673a\u5668\u7684\u65f6\u5019\uff0c\u624b\u52a8\u590d\u5236\u65e5\u5fd7\u4f1a\u66f4\u52a0\u9ebb\u70e6\u800c\u4e14\u66f4\u5bb9\u6613\u51fa\u9519\u3002\u800c\u4e14\u8bbe\u7f6e ",(0,l.kt)("inlineCode",{parentName:"p"},"mandatory")," \u53c2\u6570\u4f1a\u589e\u52a0\u751f\u4ea7\u8005\u7684\u590d\u6742\u6027\uff0c\u9700\u8981\u6dfb\u52a0\u5904\u7406\u8fd9\u4e9b\u88ab\u56de\u9000\u6d88\u606f\u7684\u903b\u8f91\u3002"),(0,l.kt)("p",null,"\u5982\u679c\u65e2\u4e0d\u60f3\u589e\u52a0\u751f\u4ea7\u8005\u7684\u590d\u6742\u6027\uff0c\u8be5\u600e\u4e48\u505a\u5462\uff1f"),(0,l.kt)("p",null,"\u5728\u3010\u6b7b\u4fe1\u961f\u5217\u3011\u7ae0\u8282\u4e2d\u4f1a\u63d0\u5230\u53ef\u4ee5\u4e3a\u961f\u5217\u8bbe\u7f6e\u6b7b\u4fe1\u4ea4\u6362\u673a\u6765\u5b58\u50a8\u90a3\u4e9b\u5904\u7406\u5931\u8d25\u7684\u6d88\u606f\uff0c\u53ef\u662f\u8fd9\u4e9b\u4e0d\u53ef\u8def\u7531\u7684\u6d88\u606f\u6839\u672c\u6ca1\u6709\u673a\u4f1a\u8fdb\u5165\u5230\u961f\u5217\uff0c\u56e0\u6b64\u65e0\u6cd5\u4f7f\u7528\u6b7b\u4fe1\u961f\u5217\u4fdd\u5b58\u6d88\u606f\u3002"),(0,l.kt)("p",null,"\u5728 RabbitMQ \u4e2d\u6709\u4e00\u79cd\u5907\u4efd\u4ea4\u6362\u673a\u673a\u5236\u5b58\u5728\uff0c\u53ef\u4ee5\u5f88\u597d\u7684\u5e94\u5bf9\u8fd9\u4e2a\u95ee\u9898\u3002\u5f53\u4ea4\u6362\u673a\u6536\u5230\u4e00\u6761\u4e0d\u53ef\u8def\u7531\u6d88\u606f\u65f6\uff0c\u5c31\u4f1a\u628a\u8fd9\u6761\u6d88\u606f\u8f6c\u53d1\u5230\u5907\u4efd\u4ea4\u6362\u673a\u4e2d\uff0c\u7531\u5907\u4efd\u4ea4\u6362\u673a\u6765\u8fdb\u884c\u8f6c\u53d1\u548c\u5904\u7406\u3002"),(0,l.kt)("p",null,"\u901a\u5e38\u8bbe\u7f6e\u5907\u4efd\u4ea4\u6362\u673a\u7684\u7c7b\u578b\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"fanout"),"\uff0c\u8fd9\u6837\u5c31\u80fd\u628a\u6240\u6709\u6d88\u606f\u6295\u9012\u5230\u4e0e\u5176\u7ed1\u5b9a\u7684\u961f\u5217\u4e2d\u3002\u5f53\u7136\u6211\u4eec\u8fd8\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u62a5\u8b66\u961f\u5217\uff0c\u7528\u961f\u5217\u7684\u6d88\u8d39\u8005\u6765\u8fdb\u884c\u76d1\u6d4b\u548c\u62a5\u8b66\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'static final String NORMAL_EXCHANGE = "x.normal.direct";\nstatic final String BACKUP_EXCHANGE = "x.backup.fanout";\n\n// ...\n\nMap<String, Object> arguments = Map.of("alternate-exchange", BACKUP_EXCHANGE);\nboolean durable = true;\nboolean autoDelete = false;\nchannel.exchangeDeclare(BACKUP_EXCHANGE, BuiltinExchangeType.FANOUT, durable, autoDelete, null);\nchannel.exchangeDeclare(NORMAL_EXCHANGE, BuiltinExchangeType.DIRECT, durable, autoDelete, arguments);\n')),(0,l.kt)("h2",{id:"\u5341\u6b7b\u4fe1\u961f\u5217"},"\u5341\u3001\u6b7b\u4fe1\u961f\u5217"),(0,l.kt)("h3",{id:"101-\u6982\u5ff5"},"10.1 \u6982\u5ff5"),(0,l.kt)("p",null,"\u6b63\u5e38\u60c5\u51b5\u4e0b\u6d88\u8d39\u8005\u4ece Queue \u4e2d\u53d6\u51fa\u6d88\u606f\u8fdb\u884c\u6d88\u8d39\uff0c\u4f46\u67d0\u4e9b\u65f6\u5019\u7531\u4e8e\u7279\u5b9a\u7684\u539f\u56e0\u5bfc\u81f4 Queue \u4e2d\u7684\u67d0\u4e9b\u6d88\u606f\u65e0\u6cd5\u88ab\u6d88\u8d39\uff0c\u8fd9\u6837\u7684\u6d88\u606f\u5982\u679c\u6ca1\u6709\u540e\u7eed\u7684\u5904\u7406\uff0c\u5c31\u53d8\u6210\u4e86\u6b7b\u4fe1\u3002"),(0,l.kt)("p",null,"\u4e3a\u4e86\u4fdd\u8bc1\u4e1a\u52a1\u7684\u6d88\u606f\u6570\u636e\u4e0d\u4e22\u5931\uff0c\u5f53\u6d88\u606f\u6d88\u8d39\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u5c06\u6d88\u606f\u6295\u5165\u6b7b\u4fe1\u961f\u5217\u4e2d\u4ee5\u8fdb\u884c\u540e\u7eed\u5904\u7406\u3002"),(0,l.kt)("h3",{id:"102-\u6b7b\u4fe1\u7684\u6765\u6e90"},"10.2 \u6b7b\u4fe1\u7684\u6765\u6e90"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6d88\u606f TTL \u8fc7\u671f"),(0,l.kt)("li",{parentName:"ul"},"\u961f\u5217\u8fbe\u5230\u6700\u5927\u957f\u5ea6"),(0,l.kt)("li",{parentName:"ul"},"\u6d88\u606f\u88ab\u62d2\u7edd\u5e76\u4e14 ",(0,l.kt)("inlineCode",{parentName:"li"},"requeue = false"))),(0,l.kt)("h3",{id:"103-\u793a\u4f8b"},"10.3 \u793a\u4f8b"),(0,l.kt)("h4",{id:"\u751f\u4ea7\u8005-9"},"\u751f\u4ea7\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u6b7b\u4fe1\u961f\u5217-\u751f\u4ea7\u8005\n */\npublic class MyProducer {\n    static final String NORMAL_EXCHANGE = NormalConsumer.EXCHANGE;\n    static final String NORMAL_ROUTING_KEY = NormalConsumer.ROUTING_KEY;\n\n    static List<String> MESSAGE_LIST = new ArrayList<>();\n\n    static {\n        for (int i = 0; i < 10; i++) {\n            MESSAGE_LIST.add(i + "");\n        }\n        for (int i = 0; i < 10; i++) {\n            MESSAGE_LIST.add((char) (i + 65) + "");\n        }\n        Collections.shuffle(MESSAGE_LIST);\n    }\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(MyProducer.class.getSimpleName(), true, channel -> {\n            for (String message : MESSAGE_LIST) {\n                String body = message + " " + LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));\n                channel.basicPublish(NORMAL_EXCHANGE, NORMAL_ROUTING_KEY, null, body.getBytes());\n                System.out.printf("Sent message=\'%s\'\\n", body);\n                TimeUnit.MILLISECONDS.sleep(1000);\n            }\n        });\n    }\n}\n')),(0,l.kt)("h4",{id:"\u666e\u901a\u6d88\u8d39\u8005"},"\u666e\u901a\u6d88\u8d39\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u6b7b\u4fe1\u961f\u5217-\u6b63\u5e38\u6d88\u8d39\u8005\n */\npublic class NormalConsumer {\n    static final String EXCHANGE = "x.normal.direct";\n    static final String QUEUE = "q.normal";\n    static final String ROUTING_KEY = "";\n\n    static final String DEAD_LETTER_EXCHANGE = DeadLetterConsumer.EXCHANGE;\n    static final String DEAD_LETTER_ROUTING_KEY = DeadLetterConsumer.ROUTING_KEY;\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(NormalConsumer.class.getSimpleName(), false, channel -> {\n            channel.exchangeDelete(EXCHANGE);\n            channel.exchangeDeclare(EXCHANGE, BuiltinExchangeType.DIRECT);\n\n            channel.queueDelete(QUEUE);\n            // \u6b63\u5e38\u961f\u5217\u7ed1\u5b9a\u6b7b\u4fe1\u4ea4\u6362\u673a\n            Map<String, Object> arguments = Map.of(\n                "x-dead-letter-exchange", DEAD_LETTER_EXCHANGE,       // \u8bbe\u7f6e\u6b7b\u4fe1\u4ea4\u6362\u673a\n                "x-dead-letter-routing-key", DEAD_LETTER_ROUTING_KEY, // \u8bbe\u7f6e\u6b7b\u4fe1\u8def\u7531\u952e\n                "x-message-ttl", 1000 * 60,                           // \u8bbe\u7f6e\u961f\u5217\u6d88\u606f\u5b58\u6d3b\u65f6\u95f4\n                "x-max-length", 10                                    // \u8bbe\u7f6e\u961f\u5217\u6d88\u606f\u6700\u5927\u5bb9\u91cf(\u5148\u5165\u961f\u5217\u7684\u4f1a\u5148\u8fdb\u5165\u6b7b\u4fe1\u961f\u5217)\n            );\n            channel.queueDeclare(QUEUE, false, false, false, arguments);\n\n            channel.queueBind(QUEUE, EXCHANGE, ROUTING_KEY);\n\n            DeliverCallback deliverCallback = (consumerTag, delivery) -> {\n                long deliveryTag = delivery.getEnvelope().getDeliveryTag();\n                String body = new String(delivery.getBody());\n                String status;\n                try {\n                    Integer.parseInt(body.split(" ")[0]);\n                    channel.basicAck(deliveryTag, false);\n                    status = "ack";\n                } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {\n                    // \u6d88\u606f\u88ab\u62d2\n                    channel.basicNack(deliveryTag, false, false);\n                    status = "nack";\n                }\n                System.out.printf("Received message=\'%s\' status=\'%s\'\\n", body, status);\n            };\n            channel.basicConsume(QUEUE, false, deliverCallback, consumerTag -> { });\n        });\n    }\n}\n')),(0,l.kt)("h4",{id:"\u6b7b\u4fe1\u6d88\u8d39\u8005"},"\u6b7b\u4fe1\u6d88\u8d39\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u6b7b\u4fe1\u961f\u5217-\u6b7b\u4fe1\u6d88\u8d39\u8005\n */\npublic class DeadLetterConsumer {\n    static final String EXCHANGE = "x.dead_letter.direct";\n    static final String QUEUE = "q.dead_letter";\n    static final String ROUTING_KEY = "";\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(DeadLetterConsumer.class.getSimpleName(), false, channel -> {\n            channel.exchangeDelete(EXCHANGE);\n            channel.exchangeDeclare(EXCHANGE, BuiltinExchangeType.DIRECT);\n\n            channel.queueDelete(QUEUE);\n            channel.queueDeclare(QUEUE, false, false, false, null);\n\n            channel.queueBind(QUEUE, EXCHANGE, ROUTING_KEY);\n\n            DeliverCallback deliverCallback = (consumerTag, delivery) -> {\n                String body = new String(delivery.getBody());\n                String at = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));\n                System.out.printf("Received message=\'%s\' at=\'%s\'\\n", body, at);\n            };\n            channel.basicConsume(QUEUE, true, deliverCallback, consumerTag -> { });\n        });\n    }\n}\n')),(0,l.kt)("h2",{id:"\u5341\u4e00\u5ef6\u8fdf\u961f\u5217"},"\u5341\u4e00\u3001\u5ef6\u8fdf\u961f\u5217"),(0,l.kt)("h3",{id:"111-\u6982\u5ff5"},"11.1 \u6982\u5ff5"),(0,l.kt)("p",null,"\u5ef6\u8fdf\u961f\u5217\u5185\u90e8\u662f\u6709\u5e8f\u7684\uff0c\u6700\u91cd\u8981\u7684\u7279\u6027\u5c31\u4f53\u73b0\u5728\u5b83\u7684\u5ef6\u65f6\u5c5e\u6027\u4e0a\uff0c\u5ef6\u8fdf\u961f\u5217\u4e2d\u7684\u5143\u7d20\u662f\u5e0c\u671b\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u53d6\u51fa\u5904\u7406\u3002"),(0,l.kt)("h3",{id:"112-\u4f7f\u7528\u573a\u666f"},"11.2 \u4f7f\u7528\u573a\u666f"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u8ba2\u5355\u5728\u5341\u5206\u949f\u4e4b\u5185\u672a\u652f\u4ed8\u5219\u81ea\u52a8\u53d6\u6d88"),(0,l.kt)("li",{parentName:"ul"},"\u65b0\u521b\u5efa\u7684\u5e97\u94fa\uff0c\u5982\u679c\u5728\u5341\u5929\u5185\u90fd\u6ca1\u6709\u4e0a\u4f20\u8fc7\u5546\u54c1\uff0c\u5219\u81ea\u52a8\u53d1\u9001\u6d88\u606f\u63d0\u9192"),(0,l.kt)("li",{parentName:"ul"},"\u7528\u6237\u6ce8\u518c\u540e\uff0c\u5982\u679c\u4e09\u5929\u5185\u6ca1\u6709\u767b\u5f55\u5219\u8fdb\u884c\u77ed\u4fe1\u63d0\u9192"),(0,l.kt)("li",{parentName:"ul"},"\u7528\u6237\u53d1\u8d77\u9000\u6b3e\u540e\uff0c\u5982\u679c\u4e09\u5929\u5185\u6ca1\u6709\u5f97\u5230\u5904\u7406\u5219\u901a\u77e5\u76f8\u5173\u8fd0\u8425\u4eba\u5458"),(0,l.kt)("li",{parentName:"ul"},"\u9884\u5b9a\u4f1a\u8bae\u540e\uff0c\u9700\u8981\u5728\u524d\u5341\u5206\u949f\u901a\u77e5\u5404\u4e2a\u4e0e\u4f1a\u4eba\u5458\u53c2\u52a0\u4f1a\u8bae")),(0,l.kt)("h3",{id:"113-rabbitmq-\u4e2d\u7684-ttl"},"11.3 RabbitMQ \u4e2d\u7684 TTL"),(0,l.kt)("h4",{id:"\u6982\u5ff5"},"\u6982\u5ff5"),(0,l.kt)("p",null,"\u5982\u679c\u4e00\u6761\u6d88\u606f\u8bbe\u7f6e\u4e86 TTL \u5c5e\u6027\u6216\u8005\u8fdb\u5165\u4e86\u8bbe\u7f6e TTL \u5c5e\u6027\u7684\u961f\u5217\uff0c\u90a3\u4e48\u8fd9\u6761\u6d88\u606f\u5982\u679c\u5728 TTL \u8bbe\u7f6e\u7684\u65f6\u95f4\u5185\u6ca1\u6709\u88ab\u6d88\u8d39\u5c31\u4f1a\u6210\u4e3a\u6b7b\u4fe1\u3002\u5982\u679c\u540c\u65f6\u914d\u7f6e\u4e86\u961f\u5217\u7684 TTL \u548c\u6d88\u606f\u7684 TTL\uff0c\u90a3\u4e48\u8f83\u5c0f\u7684\u90a3\u4e2a\u503c\u5c06\u4f1a\u88ab\u4f7f\u7528\u3002"),(0,l.kt)("h4",{id:"\u4e24\u8005\u533a\u522b"},"\u4e24\u8005\u533a\u522b"),(0,l.kt)("p",null,"\u5982\u679c\u8bbe\u7f6e\u4e86\u961f\u5217\u7684 TTL \u5c5e\u6027\uff0c\u90a3\u4e48\u4e00\u65e6\u6d88\u606f\u8fc7\u671f\uff0c\u5c31\u4f1a\u88ab\u961f\u5217\u4e22\u5f03\uff08\u5982\u679c\u914d\u7f6e\u4e86\u6b7b\u4fe1\u961f\u5217\u5219\u4f1a\u88ab\u4e22\u5230\u6b7b\u4fe1\u961f\u5217\uff09\u3002"),(0,l.kt)("p",null,"\u800c\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff0c\u5373\u4f7f\u6d88\u606f\u8fc7\u671f\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u4f1a\u88ab\u9a6c\u4e0a\u4e22\u5f03\uff0c\u56e0\u4e3a\u6d88\u606f\u662f\u5426\u8fc7\u671f\u662f\u5728\u5373\u5c06\u6295\u9012\u5230\u6d88\u8d39\u8005\u4e4b\u524d\u5224\u5b9a\u7684\uff0c\u5982\u679c\u5f53\u524d\u961f\u5217\u6709\u4e25\u91cd\u7684\u6d88\u606f\u79ef\u538b\u60c5\u51b5\uff0c\u5219\u5df2\u8fc7\u671f\u7684\u6d88\u606f\u4e5f\u8bb8\u8fd8\u80fd\u5b58\u6d3b\u8f83\u957f\u65f6\u95f4\u3002"),(0,l.kt)("h3",{id:"114-\u5ef6\u8fdf\u961f\u5217\u63d2\u4ef6"},"11.4 \u5ef6\u8fdf\u961f\u5217\u63d2\u4ef6"),(0,l.kt)("h4",{id:"\u5b89\u88c5\u63d2\u4ef6"},"\u5b89\u88c5\u63d2\u4ef6"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.rabbitmq.com/community-plugins.html"},"https://www.rabbitmq.com/community-plugins.html")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/rabbitmq/rabbitmq-delayed-message-exchange"},"https://github.com/rabbitmq/rabbitmq-delayed-message-exchange"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# \u67e5\u770b\u63d2\u4ef6\u76ee\u5f55\nrabbitmq-plugins directories\n\n# \u4e0b\u8f7d\u63d2\u4ef6\ncd /usr/lib/rabbitmq/lib/rabbitmq_server-3.9.13/plugins\nwget https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/download/3.9.0/rabbitmq_delayed_message_exchange-3.9.0.ez\n\n# \u542f\u7528\u63d2\u4ef6\nrabbitmq-plugins enable rabbitmq_delayed_message_exchange\n")),(0,l.kt)("h4",{id:"\u751f\u4ea7\u8005-10"},"\u751f\u4ea7\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u5ef6\u8fdf\u961f\u5217-\u751f\u4ea7\u8005\n */\npublic class MyProducer {\n    static final String EXCHANGE = MyConsumer.EXCHANGE;\n    static final String ROUTING_KEY = MyConsumer.ROUTING_KEY;\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(MyProducer.class.getSimpleName(), true, channel -> {\n            for (int i = 1; i <= 10; i++) {\n                AMQP.BasicProperties headers = new AMQP.BasicProperties\n                    .Builder()\n                    .headers(Map.of("x-delay", Long.toString(i * 1000L)))\n                    .build();\n                String body = i + " " + LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));\n                channel.basicPublish(EXCHANGE, ROUTING_KEY, headers, body.getBytes());\n                System.out.printf("Sent message=\'%s\'\\n", body);\n                TimeUnit.MILLISECONDS.sleep(1000);\n            }\n        });\n    }\n}\n')),(0,l.kt)("h4",{id:"\u6d88\u8d39\u8005-6"},"\u6d88\u8d39\u8005"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u5ef6\u8fdf\u961f\u5217-\u6d88\u8d39\u8005\n */\npublic class MyConsumer {\n    static final String EXCHANGE = "x.delayed.x-delayed-message";\n    static final String QUEUE = "q.delayed";\n    static final String ROUTING_KEY = "";\n\n    public static void main(String[] args) {\n        MyRabbitMQ.start(MyConsumer.class.getSimpleName(), false, channel -> {\n            channel.exchangeDelete(EXCHANGE);\n            Map<String, Object> arguments = Map.of("x-delayed-type", "direct");\n            channel.exchangeDeclare(EXCHANGE, "x-delayed-message", false, false, arguments);\n\n            channel.queueDelete(QUEUE);\n            channel.queueDeclare(QUEUE, false, false, false, null);\n\n            channel.queueBind(QUEUE, EXCHANGE, ROUTING_KEY);\n\n            DeliverCallback deliverCallback = (consumerTag, delivery) -> {\n                String body = new String(delivery.getBody());\n                String at = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));\n                System.out.printf("Received message=\'%s\' at=\'%s\'\\n", body, at);\n            };\n            channel.basicConsume(QUEUE, true, deliverCallback, consumerTag -> { });\n        });\n    }\n}\n')),(0,l.kt)("h2",{id:"\u5341\u4e8c\u5e42\u7b49\u6027"},"\u5341\u4e8c\u3001\u5e42\u7b49\u6027"),(0,l.kt)("h3",{id:"121-\u6982\u5ff5"},"12.1 \u6982\u5ff5"),(0,l.kt)("p",null,"\u7528\u6237\u5bf9\u4e8e\u540c\u4e00\u64cd\u4f5c\u53d1\u8d77\u7684\u4e00\u6b21\u8bf7\u6c42\u6216\u8005\u591a\u6b21\u8bf7\u6c42\u7684\u7ed3\u679c\u662f\u4e00\u81f4\u7684\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u591a\u6b21\u70b9\u51fb\u800c\u4ea7\u751f\u4e86\u526f\u4f5c\u7528\u3002"),(0,l.kt)("p",null,"\u4e3e\u4e2a\u6700\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u90a3\u5c31\u662f\u652f\u4ed8\uff0c\u7528\u6237\u8d2d\u4e70\u5546\u54c1\u540e\u652f\u4ed8\uff0c\u652f\u4ed8\u6263\u6b3e\u6210\u529f\uff0c\u4f46\u662f\u8fd4\u56de\u7ed3\u679c\u7684\u65f6\u5019\u7f51\u7edc\u5f02\u5e38\uff0c\u6b64\u65f6\u94b1\u5df2\u7ecf\u6263\u4e86\uff0c\u7528\u6237\u518d\u6b21\u70b9\u51fb\u6309\u94ae\uff0c\u6b64\u65f6\u4f1a\u8fdb\u884c\u7b2c\u4e8c\u6b21\u6263\u6b3e\uff0c\u8fd4\u56de\u7ed3\u679c\u6210\u529f\uff0c\u7528\u6237\u67e5\u8be2\u4f59\u989d\u53d1\u73b0\u591a\u6263\u94b1\u4e86\uff0c\u6d41\u6c34\u8bb0\u5f55\u4e5f\u53d8\u6210\u4e86\u4e24\u6761\u3002"),(0,l.kt)("p",null,"\u5728\u4ee5\u524d\u7684\u5355\u5e94\u7528\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6570\u636e\u64cd\u4f5c\u653e\u5165\u4e8b\u7269\u4e2d\u5373\u53ef\uff0c\u53d1\u9001\u9519\u8bef\u7acb\u5373\u56de\u6eda\uff0c\u4f46\u662f\u518d\u54cd\u5e94\u5ba2\u6237\u7aef\u7684\u65f6\u5019\u4e5f\u6709\u53ef\u80fd\u51fa\u73b0\u7f51\u7edc\u7ec8\u7aef\u6216\u8005\u5f02\u5e38\u7b49\u7b49\u3002"),(0,l.kt)("h3",{id:"122-\u6d88\u606f\u91cd\u590d\u6d88\u8d39"},"12.2 \u6d88\u606f\u91cd\u590d\u6d88\u8d39"),(0,l.kt)("p",null,"\u6d88\u8d39\u8005\u5728\u6d88\u8d39 MQ \u4e2d\u7684\u6d88\u606f\u65f6\uff0cMQ \u5df2\u628a\u6d88\u606f\u53d1\u9001\u7ed9\u6d88\u8d39\u8005\uff0c\u6d88\u8d39\u8005\u5728\u7ed9 MQ \u8fd4\u56de ACK \u65f6\u7f51\u7edc\u4e2d\u65ad\uff0c\u6545 MQ \u672a\u6536\u5230\u786e\u8ba4\u6d88\u606f\uff0c\u8be5\u6761\u6d88\u606f\u4f1a\u91cd\u65b0\u53d1\u7ed9\u5176\u5b83\u7684\u6d88\u8d39\u8005\uff0c\u6216\u8005\u5728\u7f51\u7edc\u91cd\u8fde\u540e\u518d\u6b21\u53d1\u9001\u7ed9\u8be5\u6d88\u8d39\u8005\uff0c\u4f46\u5b9e\u9645\u4e0a\u8be5\u6d88\u8d39\u8005\u5df2\u6210\u529f\u6d88\u8d39\u4e86\u8be5\u6761\u6d88\u606f\uff0c\u9020\u6210\u6d88\u8d39\u8005\u6d88\u8d39\u4e86\u91cd\u590d\u7684\u6d88\u606f\u3002"),(0,l.kt)("h3",{id:"123-\u89e3\u51b3\u601d\u8def"},"12.3 \u89e3\u51b3\u601d\u8def"),(0,l.kt)("p",null,"MQ \u6d88\u8d39\u8005\u7684\u5e42\u7b49\u6027\u7684\u89e3\u51b3\u4e00\u822c\u4f7f\u7528\u5168\u5c40 ID \u6216\u8005\u5199\u4e2a\u552f\u4e00\u6807\u8bc6\u6bd4\u5982\u65f6\u95f4\u6233\u6216\u8005 UUID\uff0c\u6bcf\u6b21\u6d88\u8d39\u6d88\u606f\u65f6\u5148\u5224\u65ad\u8be5\u6d88\u606f\u662f\u5426\u5df2\u6d88\u8d39\u8fc7\u3002"),(0,l.kt)("h3",{id:"124-\u6d88\u8d39\u7aef\u7684\u5e42\u7b49\u6027\u4fdd\u969c"},"12.4 \u6d88\u8d39\u7aef\u7684\u5e42\u7b49\u6027\u4fdd\u969c"),(0,l.kt)("p",null,"\u5728\u6d77\u91cf\u8ba2\u5355\u751f\u6210\u7684\u4e1a\u52a1\u9ad8\u5cf0\u671f\uff0c\u751f\u4ea7\u7aef\u6709\u53ef\u80fd\u5c31\u4f1a\u91cd\u590d\u53d1\u751f\u4e86\u6d88\u606f\uff0c\u8fd9\u65f6\u5019\u6d88\u8d39\u7aef\u5c31\u8981\u5b9e\u73b0\u5e42\u7b49\u6027\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u6211\u4eec\u7684\u6d88\u606f\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u6d88\u8d39\u591a\u6b21\u3002\u4e3b\u6d41\u7684\u5e42\u7b49\u6027\u64cd\u4f5c\u6709\u4e24\u79cd\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u552f\u4e00 ID + \u6307\u7eb9\u7801\u673a\u5236\uff1a\u4e1a\u52a1\u89c4\u5219\u62fc\u63a5\u552f\u4e00\u6807\u8bc6\uff0c\u5229\u7528\u6570\u636e\u5e93\u53bb\u91cd\uff1b"),(0,l.kt)("li",{parentName:"ol"},"Redis \u539f\u5b50\u6027\uff1a\u5229\u7528 Redis \u6267\u884c ",(0,l.kt)("inlineCode",{parentName:"li"},"SETNX")," \u547d\u4ee4\uff1b")),(0,l.kt)("h2",{id:"\u5341\u4e09\u4f18\u5148\u7ea7\u961f\u5217"},"\u5341\u4e09\u3001\u4f18\u5148\u7ea7\u961f\u5217"),(0,l.kt)("h3",{id:"131-\u6dfb\u52a0\u4f18\u5148\u7ea7"},"13.1 \u6dfb\u52a0\u4f18\u5148\u7ea7"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'Map<String, Object> arguments = Map.of("x-max-priority", 10);\nchannel.queueDeclare(queue, durable, exclusive, autoDelete, arguments);\n\n// ...\n\nAMQP.BasicProperties props = new AMQP.BasicProperties\n    .Builder()\n    .priority(5)\n    .build();\nchannel.basicPublish(exchange, routingKey, props, body.getBytes());\n')),(0,l.kt)("h2",{id:"\u5341\u56db\u60f0\u6027\u961f\u5217"},"\u5341\u56db\u3001\u60f0\u6027\u961f\u5217"),(0,l.kt)("h3",{id:"141-\u4f7f\u7528\u573a\u666f"},"14.1 \u4f7f\u7528\u573a\u666f"),(0,l.kt)("p",null,"RabbitMQ \u4ece 3.6.0 \u7248\u672c\u5f00\u59cb\u5f15\u5165\u4e86\u60f0\u6027\u961f\u5217\u7684\u6982\u5ff5\uff0c\u60f0\u6027\u961f\u5217\u4f1a\u5c3d\u53ef\u80fd\u7684\u5c06\u6d88\u606f\u5b58\u5165\u78c1\u76d8\uff0c\u800c\u5728\u6d88\u8d39\u5230\u76f8\u5e94\u7684\u6d88\u606f\u65f6\u624d\u4f1a\u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5b83\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u8bbe\u8ba1\u76ee\u6807\u662f\u80fd\u591f\u652f\u6301\u66f4\u957f\u7684\u961f\u5217\uff0c\u5373\u652f\u6301\u66f4\u591a\u7684\u6d88\u606f\u5b58\u50a8\u3002\u5f53\u6d88\u8d39\u8005\u7531\u4e8e\u5404\u79cd\u5404\u6837\u7684\u539f\u56e0\uff08\u6bd4\u5982\u6d88\u8d39\u8005\u4e0b\u7ebf\uff0c\u5b95\u673a\uff0c\u4ea6\u6216\u8005\u662f\u7531\u4e8e\u7ef4\u62a4\u800c\u5173\u95ed\u7b49\uff09\u800c\u81f4\u4f7f\u957f\u65f6\u95f4\u5185\u4e0d\u80fd\u6d88\u8d39\u6d88\u606f\u9020\u6210\u5806\u79ef\u65f6\uff0c\u60f0\u6027\u961f\u5217\u5c31\u5f88\u6709\u5fc5\u8981\u4e86\u3002"),(0,l.kt)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f53\u751f\u4ea7\u8005\u5c06\u6d88\u606f\u53d1\u9001\u5230 RabbitMQ \u7684\u65f6\u5019\uff0c\u961f\u5217\u4e2d\u7684\u6d88\u606f\u4f1a\u5c3d\u53ef\u80fd\u7684\u5b58\u50a8\u5728\u5185\u5b58\u4e4b\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u52a0\u5feb\u901f\u7684\u5c06\u6d88\u606f\u53d1\u9001\u7ed9\u6d88\u8d39\u8005\u3002\u5373\u4f7f\u662f\u6301\u4e45\u5316\u7684\u6d88\u606f\uff0c\u5728\u88ab\u5199\u5165\u78c1\u76d8\u7684\u540c\u65f6\u4e5f\u4f1a\u5728\u5185\u5b58\u4e2d\u9a7b\u7559\u4e00\u4efd\u5907\u4efd\u3002\u5f53 RabbitMQ \u9700\u8981\u91ca\u653e\u5185\u5b58\u7684\u65f6\u5019\uff0c\u4f1a\u5c06\u5185\u5b58\u4e2d\u7684\u6d88\u606f\u6362\u9875\u81f3\u78c1\u76d8\u4e2d\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u4f1a\u8017\u8d39\u8f83\u957f\u7684\u5b9e\u9645\uff0c\u4e5f\u4f1a\u963b\u585e\u961f\u5217\u7684\u64cd\u4f5c\uff0c\u8fdb\u800c\u65e0\u6cd5\u63a5\u6536\u65b0\u7684\u6d88\u606f\u3002"),(0,l.kt)("h3",{id:"142-\u8bbe\u7f6e\u60f0\u6027\u961f\u5217"},"14.2 \u8bbe\u7f6e\u60f0\u6027\u961f\u5217"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'Map<String, Object> arguments = Map.of("x-queue-mode", "lazy");\nchannel.queueDeclare(queue, durable, exclusive, autoDelete, arguments);\n')),(0,l.kt)("h2",{id:"\u5341\u4e94\u96c6\u7fa4"},"\u5341\u4e94\u3001\u96c6\u7fa4"),(0,l.kt)("h3",{id:"151-clustering"},"15.1 Clustering"),(0,l.kt)("h4",{id:"\u4e09\u4e2a\u8282\u70b9"},"\u4e09\u4e2a\u8282\u70b9"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-properties"},"192.192.192.101 ubuntu101\n192.192.192.102 ubuntu102\n192.192.192.103 ubuntu103\n")),(0,l.kt)("h4",{id:"\u5404\u8282\u70b9\u6b63\u5e38\u5b89\u88c5"},"\u5404\u8282\u70b9\u6b63\u5e38\u5b89\u88c5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"apt install rabbitmq-server -y --fix-missing\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'rabbitmq-plugins enable rabbitmq_management\n\nrabbitmqctl add_user admin admin\n\nrabbitmqctl set_user_tags admin administrator\n\nrabbitmqctl set_permissions -p / admin ".*" ".*" ".*"\n')),(0,l.kt)("h4",{id:"\u786e\u4fdd\u5404\u51e0\u70b9\u7684erlangcookie-\u76f8\u540c"},"\u786e\u4fdd\u5404\u51e0\u70b9\u7684",(0,l.kt)("inlineCode",{parentName:"h4"},".erlang.cookie")," \u76f8\u540c"),(0,l.kt)("p",null,"\u6e05\u9664\u5404\u8282\u70b9\u7528\u6237\u7ea7\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},".erlang.cookie"),"\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"rm -rf ~/.erlang.cookie\n")),(0,l.kt)("p",null,"\u540c\u6b65\u5404\u51e0\u70b9 RabbitMQ \u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},".erlang.cookie"),"\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"scp /var/lib/rabbitmq/.erlang.cookie root@ubuntu102:/var/lib/rabbitmq/.erlang.cookie\n\nscp /var/lib/rabbitmq/.erlang.cookie root@ubuntu103:/var/lib/rabbitmq/.erlang.cookie\n")),(0,l.kt)("p",null,"\u91cd\u542f\u670d\u52a1\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl restart rabbitmq-server\n")),(0,l.kt)("h4",{id:"\u52a0\u5165\u96c6\u7fa4ubuntu102ubuntu103"},"\u52a0\u5165\u96c6\u7fa4\uff08",(0,l.kt)("inlineCode",{parentName:"h4"},"ubuntu102"),"\u3001",(0,l.kt)("inlineCode",{parentName:"h4"},"ubuntu103"),"\uff09"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"rabbitmqctl stop_app\n\nrabbitmqctl reset\n\nrabbitmqctl join_cluster rabbit@ubuntu101\n\nrabbitmqctl start_app\n\nrabbitmqctl cluster_status\n")),(0,l.kt)("h3",{id:"152-\u955c\u50cf\u961f\u5217"},"15.2 \u955c\u50cf\u961f\u5217"),(0,l.kt)("h4",{id:"\u539f\u56e0"},"\u539f\u56e0"),(0,l.kt)("p",null,"\u5982\u679c RabbitMQ \u96c6\u7fa4\u53ea\u6709\u4e00\u4e2a Broker \u8282\u70b9\uff0c\u90a3\u4e48\u8be5\u8282\u70b9\u7684\u5931\u6548\u5c06\u5bfc\u81f4\u6574\u4f53\u670d\u52a1\u7684\u4e34\u65f6\u6027\u4e0d\u53ef\u7528\uff0c\u5e76\u4e14\u4e5f\u53ef\u80fd\u5bfc\u81f4\u6d88\u606f\u7684\u4e22\u5931\u3002"),(0,l.kt)("p",null,"\u53ef\u4ee5\u5c06\u6240\u6709\u6d88\u606f\u90fd\u8bbe\u7f6e\u4e3a\u6301\u4e45\u5316\uff0c\u5e76\u4e14\u8bbe\u7f6e\u5bf9\u5e94\u961f\u5217\u7684\u6301\u4e45\u5316\uff0c\u4f46\u662f\u8fd9\u6837\u4ecd\u7136\u65e0\u6cd5\u907f\u514d\u7531\u4e8e\u7f13\u5b58\u5bfc\u81f4\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u6d88\u606f\u5728\u53d1\u9001\u4e4b\u540e\u548c\u88ab\u5199\u5165\u78c1\u76d8\u5e76\u6267\u884c\u5237\u76d8\u52a8\u4f5c\u4e4b\u95f4\u5b58\u5728\u4e00\u4e2a\u77ed\u6682\u4f46\u4f1a\u4ea7\u751f\u95ee\u9898\u7684\u65f6\u95f4\u7a97\u3002"),(0,l.kt)("p",null,"\u901a\u8fc7\u53d1\u5e03\u786e\u8ba4\u673a\u5236\u80fd\u591f\u786e\u8ba4\u5ba2\u6237\u7aef\u77e5\u9053\u54ea\u4e9b\u6d88\u606f\u5df2\u7ecf\u5b58\u5165\u78c1\u76d8\uff0c\u5c3d\u7ba1\u5982\u6b64\uff0c\u4e00\u822c\u4e0d\u5e0c\u671b\u9047\u5230\u56e0\u5355\u8282\u70b9\u6545\u969c\u5bfc\u81f4\u7684\u670d\u52a1\u4e0d\u53ef\u7528\u3002"),(0,l.kt)("p",null,"\u5f15\u5165\u955c\u50cf\u961f\u5217\u7684\u673a\u5236\uff0c\u53ef\u4ee5\u5c06\u961f\u5217\u955c\u50cf\u5230\u96c6\u7fa4\u4e2d\u7684\u5176\u5b83 Broker \u8282\u70b9\u4e4b\u4e0a\uff0c\u5982\u679c\u96c6\u7fa4\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u5931\u6548\u4e86\uff0c\u961f\u5217\u80fd\u81ea\u52a8\u5207\u6362\u5230\u955c\u50cf\u4e2d\u7684\u53e6\u4e00\u4e2a\u8282\u70b9\u4ee5\u4fdd\u8bc1\u670d\u52a1\u7684\u53ef\u7528\u6027\u3002"),(0,l.kt)("h4",{id:"\u642d\u5efa\u6b65\u9aa4"},"\u642d\u5efa\u6b65\u9aa4"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/effd5bfd628d47388112e32b52908a88.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,l.kt)("p",null,"\u5176\u4e2d ",(0,l.kt)("inlineCode",{parentName:"p"},"Pattern")," \u662f\u5339\u914d\u961f\u5217\u540d\u79f0\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002"),(0,l.kt)("h4",{id:"\u6548\u679c-6"},"\u6548\u679c"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/2686ef5f28e0418aacf6e711a55864d8.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})))}p.isMDXComponent=!0}}]);