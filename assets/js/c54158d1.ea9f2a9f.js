"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6423],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>k});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),d=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=d(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(t),m=a,k=p["".concat(c,".").concat(m)]||p[m]||u[m]||o;return t?r.createElement(k,i(i({ref:n},s),{},{components:t})):r.createElement(k,i({ref:n},s))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5214:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=t(7462),a=(t(7294),t(3905));const o={},i="Containerd",l={unversionedId:"container/containerd/index",id:"container/containerd/index",title:"Containerd",description:"\u5b89\u88c5",source:"@site/docs/container/containerd/index.md",sourceDirName:"container/containerd",slug:"/container/containerd/",permalink:"/docs/container/containerd/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"GitLab CI \u96c6\u6210 Nexus \u548c Harbor",permalink:"/docs/container/GitLab CI \u96c6\u6210 Nexus \u548c Harbor"},next:{title:"Docker",permalink:"/docs/container/docker/"}},c={},d=[{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:2},{value:"\u67e5\u770b\u9ed8\u8ba4\u914d\u7f6e",id:"\u67e5\u770b\u9ed8\u8ba4\u914d\u7f6e",level:3},{value:"\u547d\u4ee4\u8865\u5168",id:"\u547d\u4ee4\u8865\u5168",level:3},{value:"\u8bbe\u7f6e\u955c\u50cf\u6e90",id:"\u8bbe\u7f6e\u955c\u50cf\u6e90",level:3},{value:"\u8bbe\u7f6e\u5b88\u62a4\u8fdb\u7a0b\u4ee3\u7406",id:"\u8bbe\u7f6e\u5b88\u62a4\u8fdb\u7a0b\u4ee3\u7406",level:2},{value:"\u6784\u5efa\u591a\u5e73\u53f0\u955c\u50cf",id:"\u6784\u5efa\u591a\u5e73\u53f0\u955c\u50cf",level:2},{value:"\u914d\u7f6e QEMU \u591a\u5e73\u53f0\u652f\u6301",id:"\u914d\u7f6e-qemu-\u591a\u5e73\u53f0\u652f\u6301",level:4},{value:"\u901a\u8fc7 <code>docker</code> \u6784\u5efa",id:"\u901a\u8fc7-docker-\u6784\u5efa",level:4},{value:"\u901a\u8fc7 <code>nerdctl</code> \u6784\u5efa",id:"\u901a\u8fc7-nerdctl-\u6784\u5efa",level:4}],s={toc:d};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"containerd"},"Containerd"),(0,a.kt)("h2",{id:"\u5b89\u88c5"},"\u5b89\u88c5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'REPO="containerd/nerdctl"\nTAG=$(curl -fsSL "https://api.github.com/repos/${REPO}/releases/latest" | jq -r ".tag_name")\nASSET="nerdctl-full-${TAG//v/}-linux-$(dpkg --print-architecture).tar.gz"\n\nwget "https://github.com/${REPO}/releases/download/${TAG}/${ASSET}" -O "${ASSET}"\n\ntar Cxzvvf /usr/local "${ASSET}"\n\nsystemctl enable --now containerd\n\nsystemctl enable --now buildkit\n\nnerdctl completion bash > /etc/bash_completion.d/nerdctl\n\nsource /etc/profile\n\nnerdctl network create compose\n\nnerdctl run --privileged --rm tonistiigi/binfmt --install all\n')),(0,a.kt)("h3",{id:"\u67e5\u770b\u9ed8\u8ba4\u914d\u7f6e"},"\u67e5\u770b\u9ed8\u8ba4\u914d\u7f6e"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"containerd config default\n")),(0,a.kt)("h3",{id:"\u547d\u4ee4\u8865\u5168"},"\u547d\u4ee4\u8865\u5168"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"nerdctl completion bash > /etc/bash_completion.d/nerdctl\n\nsource /etc/profile\n")),(0,a.kt)("h3",{id:"\u8bbe\u7f6e\u955c\u50cf\u6e90"},"\u8bbe\u7f6e\u955c\u50cf\u6e90"),(0,a.kt)("blockquote",null,(0,a.kt)("ul",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/containerd/containerd/blob/main/docs/cri/registry.md"},"https://github.com/containerd/containerd/blob/main/docs/cri/registry.md")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/containerd/containerd/blob/main/docs/hosts.md"},"https://github.com/containerd/containerd/blob/main/docs/hosts.md")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'mkdir -p /etc/containerd/certs.d/docker.io\n\ncat > /etc/containerd/certs.d/docker.io/hosts.toml <<- "EOF"\nserver = "https://registry-1.docker.io"\n[host."https://uwk49ut2.mirror.aliyuncs.com"]\n  capabilities = ["pull"]\nEOF\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'mkdir -p /etc/containerd\n\ncat > /etc/containerd/config.toml <<- "EOF"\nversion = 2\n\n[plugins."io.containerd.grpc.v1.cri".registry]\n  config_path = "/etc/containerd/certs.d"\nEOF\n')),(0,a.kt)("h2",{id:"\u8bbe\u7f6e\u5b88\u62a4\u8fdb\u7a0b\u4ee3\u7406"},"\u8bbe\u7f6e\u5b88\u62a4\u8fdb\u7a0b\u4ee3\u7406"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'mkdir -p /etc/systemd/system/containerd.service.d\n\ncat > /etc/systemd/system/containerd.service.d/proxy.conf <<- "EOF"\n[Service]\nEnvironment="HTTP_PROXY=http://192.192.192.10:7890"\nEnvironment="HTTPS_PROXY=http://192.192.192.10:7890"\nEOF\n\nsystemctl daemon-reload\n\nsystemctl restart containerd\n')),(0,a.kt)("h2",{id:"\u6784\u5efa\u591a\u5e73\u53f0\u955c\u50cf"},"\u6784\u5efa\u591a\u5e73\u53f0\u955c\u50cf"),(0,a.kt)("blockquote",null,(0,a.kt)("ul",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.docker.com/build/buildx/multiplatform-images/"},"https://docs.docker.com/build/buildx/multiplatform-images/")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/reference/commandline/manifest/"},"https://docs.docker.com/engine/reference/commandline/manifest/")))),(0,a.kt)("h4",{id:"\u914d\u7f6e-qemu-\u591a\u5e73\u53f0\u652f\u6301"},"\u914d\u7f6e QEMU \u591a\u5e73\u53f0\u652f\u6301"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# docker run --privileged --rm tonistiigi/binfmt --install all\n\nnerdctl run --privileged --rm tonistiigi/binfmt --install all\n\nls -1 /proc/sys/fs/binfmt_misc/qemu*\n")),(0,a.kt)("h4",{id:"\u901a\u8fc7-docker-\u6784\u5efa"},"\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"h4"},"docker")," \u6784\u5efa"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# \u521b\u5efa Builder\ndocker buildx create --use\ndocker buildx ls\n\n# \u6784\u5efa\u591a\u4e2a\u5e73\u53f0\u955c\u50cf\u5e76\u63a8\u9001\u5230 DockerHub\ndocker login\ndocker buildx build --tag icefery/my-app:0.0.1 --platform linux/amd64,linux/arm64 --push .\n\n# \u6784\u5efa\u5355\u4e2a\u5e73\u53f0\u5e76\u5bfc\u51fa\u5230\u672c\u5730\ndocker buildx build --tag icefery/my-app:0.0.1 --platform linux/arm64 --load .\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u5bfc\u51fa\u5230\u672c\u5730\u53ea\u80fd\u6784\u5efa\u4e00\u4e2a\u955c\u50cf\uff0c\u672c\u5730\u4e0d\u652f\u6301\u540c\u65f6\u5bfc\u51fa manifest lists\u3002")),(0,a.kt)("h4",{id:"\u901a\u8fc7-nerdctl-\u6784\u5efa"},"\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"h4"},"nerdctl")," \u6784\u5efa"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"nerdctl build -t icefery/my-app:0.0.1 --platform linux/arm64,linux/amd64 .\n\nnerdctl image ls\n\nnerdctl login\n\nnerdctl push --all-platforms icefery/my-app:0.0.1\n")))}p.isMDXComponent=!0}}]);