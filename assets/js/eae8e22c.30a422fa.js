"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3224],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var c=n.createContext({}),i=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=i(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,o=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=i(r),d=s,m=u["".concat(c,".").concat(d)]||u[d]||f[d]||o;return r?n.createElement(m,p(p({ref:t},l),{},{components:r})):n.createElement(m,p({ref:t},l))}));function m(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=r.length,p=new Array(o);p[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[u]="string"==typeof e?e:s,p[1]=a;for(var i=2;i<o;i++)p[i]=r[i];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3627:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>i});var n=r(7462),s=(r(7294),r(3905));const o={},p="Express \u542f\u7528 HTTPS",a={unversionedId:"backend/express/express-with-https",id:"backend/express/express-with-https",title:"Express \u542f\u7528 HTTPS",description:"\u7533\u8bf7\u8bc1\u4e66",source:"@site/docs/backend/express/express-with-https.md",sourceDirName:"backend/express",slug:"/backend/express/express-with-https",permalink:"/docs/backend/express/express-with-https",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Express.js",permalink:"/docs/backend/express/"},next:{title:"MyBatis",permalink:"/docs/backend/mybatis/"}},c={},i=[{value:"\u7533\u8bf7\u8bc1\u4e66",id:"\u7533\u8bf7\u8bc1\u4e66",level:2},{value:"\u4f7f\u7528\u8bc1\u4e66",id:"\u4f7f\u7528\u8bc1\u4e66",level:2}],l={toc:i};function u(e){let{components:t,...r}=e;return(0,s.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"express-\u542f\u7528-https"},"Express \u542f\u7528 HTTPS"),(0,s.kt)("h2",{id:"\u7533\u8bf7\u8bc1\u4e66"},"\u7533\u8bf7\u8bc1\u4e66"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://letsencrypt.osfipin.com/"},"Let's Encrypt \u7f51\u9875\u7248\u672c,\u83b7\u53d6 SSL \u7f51\u7ad9\u8bc1\u4e66"))),(0,s.kt)("h2",{id:"\u4f7f\u7528\u8bc1\u4e66"},"\u4f7f\u7528\u8bc1\u4e66"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const http = require('http')\nconst https = require('https')\nconst fs = require('fs')\nconst path = require('path')\nconst express = require('express')\n\nconst app = express()\n\napp.get('/', (req, res) => {\n  res.json({\n    hello: 'world',\n    protocol: req.protocol,\n    host: req.get('host'),\n    path: req.path,\n    ip: req.ip\n  })\n})\n\nhttp.createServer(app).listen(8080, () => console.log(`listening on :8080`))\n\nconst options = {\n  key: fs.readFileSync(path.resolve(__dirname, '../certificate/private.pem'), 'utf-8'),\n  cert: fs.readFileSync(path.resolve(__dirname, '../certificate/certificate.crt'), 'utf-8')\n}\nhttps.createServer(options, app).listen(8443, () => console.log(`listening on :8443`))\n")))}u.isMDXComponent=!0}}]);