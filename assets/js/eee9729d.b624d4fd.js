"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5250],{3905:(n,e,t)=>{t.d(e,{Zo:()=>s,kt:()=>f});var i=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function p(n,e){if(null==n)return{};var t,i,a=function(n,e){if(null==n)return{};var t,i,a={},r=Object.keys(n);for(i=0;i<r.length;i++)t=r[i],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(i=0;i<r.length;i++)t=r[i],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var l=i.createContext({}),c=function(n){var e=i.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},s=function(n){var e=c(n.components);return i.createElement(l.Provider,{value:e},n.children)},u="mdxType",m={inlineCode:"code",wrapper:function(n){var e=n.children;return i.createElement(i.Fragment,{},e)}},k=i.forwardRef((function(n,e){var t=n.components,a=n.mdxType,r=n.originalType,l=n.parentName,s=p(n,["components","mdxType","originalType","parentName"]),u=c(t),k=a,f=u["".concat(l,".").concat(k)]||u[k]||m[k]||r;return t?i.createElement(f,o(o({ref:e},s),{},{components:t})):i.createElement(f,o({ref:e},s))}));function f(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var r=t.length,o=new Array(r);o[0]=k;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=n,p[u]="string"==typeof n?n:a,o[1]=p;for(var c=2;c<r;c++)o[c]=t[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}k.displayName="MDXCreateElement"},4901:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var i=t(7462),a=(t(7294),t(3905));const r={},o=void 0,p={unversionedId:"lang/c/C \u8bed\u8a00\u5165\u95e8\u5fc5\u5907\u7684 18 \u4e2a\u7ecf\u5178\u7a0b\u5e8f",id:"lang/c/C \u8bed\u8a00\u5165\u95e8\u5fc5\u5907\u7684 18 \u4e2a\u7ecf\u5178\u7a0b\u5e8f",title:"C \u8bed\u8a00\u5165\u95e8\u5fc5\u5907\u7684 18 \u4e2a\u7ecf\u5178\u7a0b\u5e8f",description:"1. > \u8f93\u51fa 9\\*9 \u4e58\u6cd5\u53e3\u8bc0\u3002\u5171 9 \u884c 9 \u5217\uff0ci \u63a7\u5236\u884c\uff0cj \u63a7\u5236\u5217\u3002",source:"@site/docs/lang/c/C \u8bed\u8a00\u5165\u95e8\u5fc5\u5907\u7684 18 \u4e2a\u7ecf\u5178\u7a0b\u5e8f.md",sourceDirName:"lang/c",slug:"/lang/c/C \u8bed\u8a00\u5165\u95e8\u5fc5\u5907\u7684 18 \u4e2a\u7ecf\u5178\u7a0b\u5e8f",permalink:"/docs/lang/c/C \u8bed\u8a00\u5165\u95e8\u5fc5\u5907\u7684 18 \u4e2a\u7ecf\u5178\u7a0b\u5e8f",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"C",permalink:"/docs/lang/c/"},next:{title:"Java",permalink:"/docs/lang/java/"}},l={},c=[],s={toc:c};function u(n){let{components:e,...t}=n;return(0,a.kt)("wrapper",(0,i.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u8f93\u51fa 9","*","9 \u4e58\u6cd5\u53e3\u8bc0\u3002\u5171 9 \u884c 9 \u5217\uff0ci \u63a7\u5236\u884c\uff0cj \u63a7\u5236\u5217\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\nint main() {\n    for (int i = 1; i < 10; i++) {\n        for (int j = 1; j < 10; j++) {\n            printf("%d*%d=%-3d", i, j, i * j);\n        }\n        printf("\\n");\n    }\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u53e4\u5178\u95ee\u9898\uff1a\u6709\u4e00\u5bf9\u5154\u5b50\uff0c\u4ece\u51fa\u751f\u540e\u7b2c 3 \u4e2a\u6708\u8d77\u6bcf\u4e2a\u6708\u90fd\u751f\u4e00\u5bf9\u5154\u5b50\uff0c\u5c0f\u5154\u5b50\u957f\u5230\u7b2c\u4e09\u4e2a\u6708\u540e\u6bcf\u4e2a\u6708\u53c8\u751f\u4e00\u5bf9\u5154\u5b50\uff0c\u5047\u5982\u5154\u5b50\u90fd\u4e0d\u6b7b\uff0c\u95ee\u6bcf\u4e2a\u6708\u5154\u5b50\u603b\u6570\u4e3a\u591a\u5c11\uff1f\u5154\u5b50\u7684\u89c4\u5f8b\u4e3a\u6570\u5217 ",(0,a.kt)("inlineCode",{parentName:"p"},"1,1,2,3,5,8,13,21..."))),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\nint main() {\n    long f1 = 1;\n    long f2 = 1;\n    for (int i = 1; i <= 20; i++) {\n        printf("%12ld %12ld", f1, f2);\n        if (i % 2 == 0) {\n            printf("\\n");\n        }\n        f1 = f1 + f2;\n        f2 = f1 + f2;\n    }\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u5224\u65ad 101-200 \u4e4b\u95f4\u6709\u591a\u5c11\u4e2a\u7d20\u6570\uff0c\u5e76\u8f93\u51fa\u6240\u6709\u7d20\u6570\u53ca\u7d20\u6570\u7684\u4e2a\u6570\u3002")),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u7a0b\u5e8f\u5206\u6790\uff1a\u5224\u8bfb\u7d20\u6570\u7684\u65b9\u6cd5\uff1a\u7528\u4e00\u4e2a\u6570\u5206\u522b\u53bb\u9664 2 \u5230\u8fd9\u4e2a\u6570\u7684\u7b97\u672f\u5e73\u65b9\u6839\uff0c\u5982\u679c\u80fd\u88ab\u6574\u9664\uff0c\u5219\u8bc1\u660e\u6b64\u6570\u4e0d\u662f\u7d20\u6570\uff0c\u53cd\u4e4b\u662f\u7d20\u6570\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "math.h"\n#include "stdio.h"\nconst int MIN = 101;\nconst int MAX = 200;\nint main() {\n    int count = 0;\n    for (int i = MIN; i <= MAX; i += 2) {\n        int j;\n        for (j = 2; j <= sqrt(i); j++) {\n            if (i % j == 0) {\n                break;\n            }\n        }\n        if (j > sqrt(i)) {\n            printf("%d ", i);\n            count++;\n        }\n    }\n    printf("\\ncount=%d\\n", count);\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u4e00\u4e2a\u6570\u5982\u679c\u6070\u597d\u7b49\u4e8e\u5b83\u7684\u56e0\u5b50\u4e4b\u548c\uff0c\u8fd9\u4e2a\u6570\u5c31\u79f0\u4e3a\u201c\u5b8c\u6570\u201d\u3002\u5047\u5982 6=1+2+3\u3002\u7f16\u7a0b\u627e\u51fa 1000 \u4ee5\u5185\u7684\u6240\u6709\u5b8c\u6570\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\nconst int MIN = 3;\nconst int MAX = 1000;\nint main() {\n    int a[1024];\n    for (int i = MIN; i < MAX; i++) {\n        int sum = 0;\n        int j = 1;\n        int count = 0;\n        while (j < i) {\n            if (i % j == 0) {\n                sum = sum + j;\n                a[count] = j;\n                count++;\n            }\n            j++;\n        }\n        if (sum == i) {\n            printf("%d=1", i);\n            for (int k = 0; k < count; k++) {\n                printf("+%d", a[k]);\n            }\n            printf("\\n");\n        }\n        count = 0;\n    }\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u4e0b\u9762\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u5c06\u4e00\u4e2a 4","*","4 \u7684\u6570\u7ec4\u8fdb\u884c\u9006\u65f6\u9488\u65cb\u8f6c 90 \u5ea6\u540e\u8f93\u51fa\uff0c\u8981\u6c42\u539f\u59cb\u6570\u7ec4\u7684\u6570\u636e\u968f\u673a\u8f93\u5165\uff0c\u65b0\u6570\u7ec4\u4ee5 4 \u884c 4 \u5217\u7684\u65b9\u5f0f\u8f93\u51fa\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\nconst int N = 4;\nint main() {\n    int src[N][N];\n    int dst[N][N];\n    printf("src:\\n");\n    for (int i = 0; i < N; i++) {\n        for (int j = 0; j < N; j++) {\n            scanf("%d", &src[i][j]);\n            dst[N - 1 - j][i] = src[i][j];\n        }\n    }\n    printf("dst:\\n");\n    for (int i = 0; i < N; i++) {\n        for (int j = 0; j < N; j++) {\n            printf("%6d", dst[i][j]);\n        }\n        printf("\\n");\n    }\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u7f16\u7a0b\u6253\u5370\u76f4\u89d2\u6768\u8f89\u4e09\u89d2\u5f62")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\nconst int N = 6;\nint main() {\n    int a[N][N];\n    for (int i = 0; i < N; i++) {\n        a[i][0] = 1;\n        a[i][i] = 1;\n    }\n    for (int i = 2; i < N; i++) {\n        for (int j = 1; j <= i - 1; j++) {\n            a[i][j] = a[i - 1][j] + a[i - 1][j - 1];\n        }\n    }\n    for (int i = 0; i < N; i++) {\n        for (int j = 0; j <= i; j++) {\n            printf("%4d", a[i][j]);\n        }\n        printf("\\n");\n    }\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u901a\u8fc7\u952e\u76d8\u8f93\u5165 3 \u540d\u5b66\u751f 4 \u95e8\u8bfe\u7a0b\u7684\u6210\u7ee9\uff0c\u5206\u522b\u6c42\u6bcf\u4e2a\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9\u548c\u6bcf\u95e8\u8bfe\u7a0b\u7684\u5e73\u5747\u6210\u7ee9\u3002")),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u8981\u6c42\u6240\u6709\u6210\u7ee9\u653e\u5165\u4e00\u4e2a 4 \u884c 5 \u5217\u7684\u6570\u7ec4\u4e2d\uff0c\u8f93\u5165\u65f6\u540c\u4e00\u4eba\u6570\u636e\u95f4\u7528\u7a7a\u683c\uff0c\u4e0d\u540c\u4eba\u7528\u56de\u8f66\uff0c\u5176\u4e2d\u6700\u540e\u4e00\u5217\u548c\u6700\u540e\u4e00\u884c\u5206\u522b\u653e\u6bcf\u4e2a\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9\u3001\u6bcf\u95e8\u8bfe\u7a0b\u7684\u5e73\u5747\u6210\u7ee9\u53ca\u73ed\u7ea7\u603b\u5e73\u5747\u5206\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\nconst int STU_COUNT = 3;\nconst int COURSE_COUNT = 4;\nint main() {\n    float a[STU_COUNT + 1][COURSE_COUNT + 1];\n    for (int i = 0; i < STU_COUNT; i++) {\n        for (int j = 0; j < COURSE_COUNT; j++) {\n            scanf("%f", &a[i][j]);\n        }\n    }\n    for (int i = 0; i < STU_COUNT; i++) {\n        float sum = 0;\n        for (int j = 0; j < COURSE_COUNT; j++) {\n            sum += a[i][j];\n            a[i][COURSE_COUNT] = sum / COURSE_COUNT;\n        }\n    }\n    for (int j = 0; j < COURSE_COUNT + 1; j++) {\n        float sum = 0;\n        for (int i = 0; i < STU_COUNT; i++) {\n            sum += a[i][j];\n            a[STU_COUNT][j] = sum / STU_COUNT;\n        }\n    }\n    for (int i = 0; i < STU_COUNT + 1; i++) {\n        for (int j = 0; j < COURSE_COUNT + 1; j++) {\n            printf("%6.2f", a[i][j]);\n        }\n        printf("\\n");\n    }\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u5b9e\u73b0\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53cd\u5e8f\u8f93\u51fa\uff0c\u5982\u8f93\u5165 ",(0,a.kt)("inlineCode",{parentName:"p"},"windows"),"\xa0\xa0\xa0\xa0 \u8f93\u51fa ",(0,a.kt)("inlineCode",{parentName:"p"},"swodniw"),"\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\n#include "string.h"\nint main() {\n    char s[1024];\n    scanf("%s", s);\n    int len = strlen(s);\n    for (int i = 0, j = len - 1; i < len / 2; i++, j--) {\n        char temp = s[i];\n        s[i] = s[j];\n        s[j] = temp;\n    }\n    printf("%s\\n", s);\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u4ece\u5b57\u7b26\u6570\u7ec4 ",(0,a.kt)("inlineCode",{parentName:"p"},"s")," \u4e2d\u5220\u9664\u5b58\u653e\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"c")," \u4e2d\u7684\u5b57\u7b26\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\nint main() {\n    char s[1024];\n    printf("s=");\n    gets(s);\n    printf("c=");\n    char c = getchar();\n    int k = 0;\n    for (int i = 0; s[i] != \'\\0\'; i++) {\n        if (s[i] != c) {\n            s[k++] = s[i];\n        }\n    }\n    s[k] = \'\\0\';\n    printf("s=%s\\n", s);\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u7f16\u5199\u4e00\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"void sort(int *x, int n)")," \u5b9e\u73b0\u5c06 ",(0,a.kt)("inlineCode",{parentName:"p"},"x")," \u6570\u7ec4\u4e2d\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"n")," \u4e2a\u6570\u636e\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002")),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"n")," \u53ca\u6570\u7ec4\u5143\u7d20\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165\u3002\u5c06\u7ed3\u679c\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\u5e76\u8f93\u51fa\u5230\u6587\u4ef6 ",(0,a.kt)("inlineCode",{parentName:"p"},"p9_1.out")," \u4e2d\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\nvoid sort(int* x, int n) {\n    for (int i = 0; i < n - 1; i++) {\n        int k = i;\n        for (int j = i + 1; j < n; j++) {\n            if (x[j] > x[k]) {\n                k = j;\n            }\n        }\n        if (k != i) {\n            int temp = x[i];\n            x[i] = x[k];\n            x[k] = temp;\n        }\n    }\n}\nconst int N = 10;\nint main() {\n    FILE* fp = fopen("pg_1.out", "w");\n    int a[N];\n    for (int i = 0; i < N; i++) {\n        scanf("%d", &a[i]);\n    }\n    sort(a, N);\n    for (int i = 0; i < N; i++) {\n        printf("%d ", a[i]);\n        fprintf(fp, "%d ", a[i]);\n    }\n    fclose(fp);\n    printf("\\n");\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u5df2\u77e5\u6570\u7ec4 ",(0,a.kt)("inlineCode",{parentName:"p"},"a")," \u4e2d\u7684\u5143\u7d20\u5df2\u7ecf\u6309\u7531\u5c0f\u5230\u5927\u987a\u5e8f\u6392\u5217\uff0c\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u5c06\u8f93\u5165\u7684\u4e00\u4e2a\u6570\u63d2\u5165\u6570\u7ec4 ",(0,a.kt)("inlineCode",{parentName:"p"},"a")," \u4e2d\uff0c\u63d2\u5165\u540e\uff0c\u6570\u7ec4 ",(0,a.kt)("inlineCode",{parentName:"p"},"a")," \u7684\u5143\u7d20\u4ecd\u7136\u7531\u5c0f\u5230\u5927\u987a\u5e8f\u6392\u5217\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\nint main() {\n    int a[] = {0, 12, 17, 20, 25, 28, 30};\n    int len = sizeof(a) / sizeof(a[0]);\n    int x;\n    printf("x=");\n    scanf("%d", &x);\n    a[0] = x;\n    int i = len - 1;\n    while (a[i] > x) {\n        a[i + 1] = a[i];\n        i--;\n    }\n    a[i + 1] = x;\n    len++;\n    for (int j = 1; j < len; j++) {\n        printf("%8d ", a[j]);\n    }\n    printf("\\n");\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u7f16\u5199\u51fd\u6570 ",(0,a.kt)("inlineCode",{parentName:"p"},"replace(char* s, char c1, char c2)")," \u5b9e\u73b0\u5c06 ",(0,a.kt)("inlineCode",{parentName:"p"},"s")," \u6240\u6307\u7684\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u5b57\u7b26 ",(0,a.kt)("inlineCode",{parentName:"p"},"c1")," \xa0\xa0 \u7528 \xa0\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"c2")," \u66ff\u6362\u3002")),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u5b57\u7b26\u4e32\u3001\u5b57\u7b26 ",(0,a.kt)("inlineCode",{parentName:"p"},"c1")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"c2")," \u5747\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165\uff0c\u5c06\u539f\u59cb\u5b57\u7b26\u4e32\u548c\u66ff\u6362\u540e\u7684\u5b57\u7b26\u4e32\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\uff0c\u5e76\u8f93\u51fa\u5230\u6587\u4ef6 ",(0,a.kt)("inlineCode",{parentName:"p"},"p10_2.out")," \u4e2d\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\nvoid replace(char* s, char c1, char c2) {\n    while (*s != \'\\0\') {\n        if (*s == c1) {\n            *s = c2;\n        }\n        s++;\n    }\n}\nint main() {\n    char s[100];\n    char c1;\n    char c2;\n    scanf("%s %c %c", s, &c1, &c2);\n    replace(s, c1, c2);\n    FILE* fp = fopen("p10_2.out", "w");\n    printf("%s\\n", s);\n    fprintf(fp, "%s\\n", s);\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u5728\u4e00\u4e2a\u5b57\u7b26 ",(0,a.kt)("inlineCode",{parentName:"p"},"s1")," \u4e2d\u67e5\u627e\u4e00\u5b57\u4e32 ",(0,a.kt)("inlineCode",{parentName:"p"},"s2"),"\uff0c\u82e5\u5b58\u5728\u5219\u8fd4\u56de\u5b57\u4e32\u5728\u4e3b\u4e32\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de ",(0,a.kt)("inlineCode",{parentName:"p"},"-1"),"\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\n#include "string.h"\nint search(char s1[], char s2[]) {\n    int len = strlen(s2);\n    int i = 0;\n    while (s1[i] != \'\\0\') {\n        int j;\n        for (j = 0; j < len; j++) {\n            if (s1[i + j] != s2[j]) {\n                break;\n            }\n        }\n        if (j >= len) {\n            return i;\n        } else {\n            i++;\n        }\n    }\n    return -1;\n}\nint main() {\n    char s1[] = "this is";\n    char s2[] = "is";\n    printf("%d\\n", search(s1, s2));\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u7528\u6307\u9488\u53d8\u91cf\u8f93\u51fa\u7ed3\u6784\u4f53\u6570\u7ec4\u5143\u7d20\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\nstruct student {\n    int num;\n    char* name;\n    char sex;\n    int age;\n};\nint main() {\n    struct student stu[] = {\n        {1001, "lihua",    \'F\', 18},\n        {1002, "linxing",  \'M\', 19},\n        {1003, "huangke",  \'F\', 19},\n        {1004, "fengshou", \'F\', 19},\n        {1005, "Wangming", \'M\', 18}\n    };\n    int len = sizeof(stu) / sizeof(stu[0]);\n    for (struct student* p = stu; p < stu + len; p++) {\n        printf("%-10d %-10s %-10c %-10d\\n", p->num, p->name, p->sex, p->age);\n    }\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u5efa\u7acb\u4e00\u4e2a\u6709\u4e09\u4e2a\u8282\u70b9\u7684\u7b80\u5355\u94fe\u8868\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\nstruct student {\n    int num;\n    char* name;\n    char sex;\n    int age;\n    struct student* next;\n};\nint main() {\n    struct student a = {1001, "lihua",   \'F\', 18};\n    struct student b = {1002, "linxing", \'M\', 19};\n    struct student c = {1003, "huangke", \'F\', 19};\n    struct student* head = &a;\n    a.next = &b;\n    b.next = &c;\n    c.next = NULL;\n    struct student* p = head;\n    while (p != NULL) {\n        printf("%-10d %-10s %-10c %-10d\\n", p->num, p->name, p->sex, p->age);\n        p = p->next;\n    }\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5224\u65ad\u5176\u662f\u5426\u4e3a\u56de\u6587\u3002")),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u56de\u6587\u5b57\u7b26\u4e32\u662f\u6307\u4ece\u5de6\u5230\u53f3\u8bfb\u548c\u4ece\u53f3\u5230\u5de6\u8bfb\u5b8c\u5168\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\n#include "string.h"\nint main() {\n    char s[100];\n    scanf("%s", s);\n    int len = strlen(s);\n    int i;\n    int j;\n    for (i = 0, j = len - 1; i < j; i++, j--) {\n        if (s[i] != s[j]) {\n            break;\n        }\n    }\n    if (i >= j) {\n        printf("true\\n");\n    } else {\n        printf("false\\n");\n    }\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u5192\u6ce1\u6392\u5e8f\uff0c\u4ece\u5c0f\u5230\u5927\uff0c\u6392\u5e8f\u540e\u7ed3\u679c\u8f93\u51fa\u5230\u5c4f\u5e55\u53ca\u6587\u4ef6 ",(0,a.kt)("inlineCode",{parentName:"p"},"myf2.out"),"\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\n#include "string.h"\nvoid sort(int a[], int n) {\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < i; j++) {\n            if (a[j] > a[j + 1]) {\n                int temp = a[j];\n                a[j] = a[j + 1];\n                a[j + 1] = temp;\n            }\n        }\n    }\n}\nint main() {\n    int a[] = {12, 45, 7, 8, 96, 4, 10, 48, 2, 46};\n    int len = sizeof(a) / sizeof(a[0]);\n    sort(a, len);\n    FILE* fp = fopen("myf2.out", "w");\n    for (int i = 0; i < len; i++) {\n        printf("%-4d", a[i]);\n        fprintf(fp, "%-4d", a[i]);\n    }\n    printf("\\n");\n    fclose(fp);\n    return 0;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u7f16\u5199\u51fd\u6570 ",(0,a.kt)("inlineCode",{parentName:"p"},"count_pi"),"\uff0c\u5229\u7528\u516c\u5f0f\u8ba1\u7b97 ",(0,a.kt)("inlineCode",{parentName:"p"},"pi")," \u7684 \u8fd1\u4f3c\u503c\uff0c\u5f53\u67d0\u4e00\u9879\u7684\u503c\u5c0f\u4e8e 10",(0,a.kt)("sup",null,"-5")," \u65f6\uff0c\u8ba4\u4e3a\u8fbe\u5230\u7cbe\u5ea6\u8981\u6c42\u3002")),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u5c06\u7ed3\u679c\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\u5e76\u8f93\u51fa\u5230\u6587\u4ef6 ",(0,a.kt)("inlineCode",{parentName:"p"},"p7_3.out")," \u4e2d\u3002")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "stdio.h"\n#include "string.h"\ndouble count_pi(double eps) {\n    int m = 1;\n    double temp = 1.0;\n    double s = 0;\n    while (temp >= eps) {\n        s += temp;\n        temp = temp * m / (2 * m + 1);\n        m++;\n    }\n    return 2 * s;\n}\nint main() {\n    double pi = count_pi(1e-5);\n    FILE* fp = fopen("myf2.out", "w");\n    printf("%lf\\n", pi);\n    fprintf(fp, "%lf\\n", pi);\n    fclose(fp);\n    return 0;\n}\n')))))}u.isMDXComponent=!0}}]);